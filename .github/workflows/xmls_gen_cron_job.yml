name: Daily XML Generation Script
on:
  schedule:
    - cron: "0 1 * * *" # every day at 01:00 AM UTC
  workflow_dispatch:
    inputs:
      start_year:
        description: 'Start year for processing (e.g., 2022). If not specified, uses default 90 days.'
        required: false
        default: ''
        type: string
      start_month:
        description: 'Start month (1-12). Only used with start_year. If not specified, starts from January.'
        required: false
        default: ''
        type: string
      months_limit:
        description: 'Limit processing to N months from start date. Helps avoid ES overload (e.g., 6 for 6 months).'
        required: false
        default: ''
        type: string
      update_threading_only:
        description: 'Only update threading structure without generating new files'
        required: false
        default: false
        type: boolean
  repository_dispatch:

permissions:
  contents: write

jobs:
  execute_and_commit:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ES_CLOUD_ID: ${{ secrets.ES_CLOUD_ID }}
      ES_USERNAME: ${{ secrets.ES_USERNAME }}
      ES_PASSWORD: ${{ secrets.ES_PASSWORD }}
      ES_INDEX: ${{ secrets.ES_INDEX }}
      START_YEAR: ${{ github.event.inputs.start_year }}
      START_MONTH: ${{ github.event.inputs.start_month }}
      MONTHS_LIMIT: ${{ github.event.inputs.months_limit }}
      UPDATE_THREADING_ONLY: ${{ github.event.inputs.update_threading_only }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.x

    - name: Install dependencies
      run: |
         pip install --upgrade pip setuptools
         pip install -r requirements.txt

    - name: Execute Python script
      run: python xmls_generator_production.py
    
    - name: Configure Git
      run: |
         git config user.email "${{ secrets.GIT_AUTHOR_EMAIL }}"
         git config user.name "${{ secrets.GIT_AUTHOR_NAME }}"

    - name: Add and commit changes
      run: |
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          if [ "${{ github.event.inputs.update_threading_only }}" = "true" ]; then
            COMMIT_MSG="Updated XML files with threading structure (threading update only)"
            if [ -n "${{ github.event.inputs.start_year }}" ]; then
              COMMIT_MSG="$COMMIT_MSG from ${{ github.event.inputs.start_year }}"
              if [ -n "${{ github.event.inputs.start_month }}" ]; then
                COMMIT_MSG="$COMMIT_MSG/${{ github.event.inputs.start_month }}"
              fi
              if [ -n "${{ github.event.inputs.months_limit }}" ]; then
                COMMIT_MSG="$COMMIT_MSG (${{ github.event.inputs.months_limit }} months)"
              fi
            fi
            git commit -m "$COMMIT_MSG"
          elif [ -n "${{ github.event.inputs.start_year }}" ]; then
            COMMIT_MSG="Updated XML files from year ${{ github.event.inputs.start_year }}"
            if [ -n "${{ github.event.inputs.start_month }}" ]; then
              COMMIT_MSG="$COMMIT_MSG/${{ github.event.inputs.start_month }}"
            fi
            if [ -n "${{ github.event.inputs.months_limit }}" ]; then
              COMMIT_MSG="$COMMIT_MSG (${{ github.event.inputs.months_limit }} months)"
            fi
            COMMIT_MSG="$COMMIT_MSG with threading structure"
            git commit -m "$COMMIT_MSG"
          else
            git commit -m "Updated newly generated XML files with threading structure"
          fi
          git push
        fi
