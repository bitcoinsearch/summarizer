name: Daily XML Generation Script
on:
  schedule:
    - cron: "0 1 * * *" # every day at 01:00 AM UTC
  workflow_dispatch:
    inputs:
      mode:
        description: 'Mode: full_generation or threading_update'
        required: false
        default: 'threading_update'
      years:
        description: 'Years to process for threading update (comma-separated, e.g., 2024,2025)'
        required: false
        default: ''
      single_year:
        description: 'Process only a single year for threading update'
        required: false
        default: ''
  repository_dispatch:

permissions:
  contents: write

jobs:
  execute_and_commit:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      ES_CLOUD_ID: ${{ secrets.ES_CLOUD_ID }}
      ES_USERNAME: ${{ secrets.ES_USERNAME }}
      ES_PASSWORD: ${{ secrets.ES_PASSWORD }}
      ES_INDEX: ${{ secrets.ES_INDEX }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.x

    - name: Install dependencies
      run: |
         pip install --upgrade pip setuptools
         pip install -r requirements.txt

    - name: Determine script mode and arguments
      id: script_config
      run: |
        MODE="${{ github.event.inputs.mode }}"
        
        # Default to threading_update for scheduled runs and manual runs without explicit mode
        if [ -z "$MODE" ] || [ "$MODE" = "threading_update" ]; then
          SCRIPT="update_threading_structure.py"
          ARGS=""
          
          # Handle single year input
          if [ -n "${{ github.event.inputs.single_year }}" ]; then
            ARGS="$ARGS --single-year ${{ github.event.inputs.single_year }}"
          fi
          
          # Handle multiple years input
          if [ -n "${{ github.event.inputs.years }}" ]; then
            YEARS_ARG=$(echo "${{ github.event.inputs.years }}" | tr ',' ' ')
            ARGS="$ARGS --years $YEARS_ARG"
          fi
          
          # If no specific years provided, process recent years
          if [ -z "${{ github.event.inputs.single_year }}" ] && [ -z "${{ github.event.inputs.years }}" ]; then
            CURRENT_YEAR=$(date +%Y)
            LAST_YEAR=$((CURRENT_YEAR - 1))
            ARGS="--years $LAST_YEAR $CURRENT_YEAR"
          fi
          
        else
          # Full generation mode
          SCRIPT="xmls_generator_production.py"
          ARGS=""
        fi
        
        echo "script=$SCRIPT" >> $GITHUB_OUTPUT
        echo "args=$ARGS" >> $GITHUB_OUTPUT
        echo "Selected script: $SCRIPT with args: $ARGS"

    - name: Execute Python script
      run: python ${{ steps.script_config.outputs.script }} ${{ steps.script_config.outputs.args }}
    
    - name: Configure Git
      run: |
         git config user.email "${{ secrets.GIT_AUTHOR_EMAIL }}"
         git config user.name "${{ secrets.GIT_AUTHOR_NAME }}"

    - name: Add and commit changes
      run: |
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          if [ "${{ steps.script_config.outputs.script }}" = "update_threading_structure.py" ]; then
            git commit -m "Updated XML files with threading structure"
          else
            git commit -m "Updated newly generated xml files"
          fi
          git push
        fi
