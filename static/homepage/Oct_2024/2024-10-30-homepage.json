{
    "header_summary": "Peter Todd raises concerns about adversaries manipulating the Lightning Network by predicting and using specific addresses to hamper transaction flows, likening this issue to transaction pinning which compromises network reliability and efficiency. He argues that creating transaction packages, a practice intended for chainalysis, inadvertently compromises privacy by revealing transaction linkages without offering substantial privacy benefits, thus questioning the necessity of avoiding address reuse in packages for minimal privacy gains. [More insights](https://petertodd.org).\n\nAdamISZ discusses the design considerations for cryptographic protocols, suggesting enhancements to the Fiat Shamir challenge to accommodate future applications and stressing the importance of flexibility in protocol design. He proposes the inclusion of message space in Zero-Knowledge Proofs of Knowledge to make them transferable and highlights the utility of Nothing-Up-My-Sleeve (NUMS) generators, advocating for a dedicated Bitcoin Improvement Proposal for their standardization, given their critical role in reproducibility and security within Bitcoin protocols. [Full discussion](https://gnusha.org/pi/bitcoindev/b0f40eab-42f3-4153-8083-b455fbd17e19n@googlegroups.com/T/#m903607c29c7d1e810f169b3d617dca41a7783917).\n\nGarlo Nicon delves into the complexities of generating Bitcoin addresses with specific criteria through \"grinding,\" illustrating the exponential difficulty increase with more stringent requirements. This exploration sheds light on adjusting security mechanisms in multisignature setups by leveraging cryptographic properties, thereby offering scalable security solutions tailored to transaction or wallet needs. [Explore the details](https://gnusha.org/pi/bitcoindev/9e48edb6-1909-4eee-a0c7-48123f42a198n@googlegroups.com/T/#m3121af5099843ceb99e310b08276efd74f65190b).\n\nAjtowns discusses the challenges associated with writing and debugging btclisp code, exploring racket-lang as a potential solution despite its limitations. The development of a basic Lisp language, \"bll,\" and its debugging shell, \"bllsh,\" signifies progress towards integrating high-level programming ease with debugging capabilities, aiming for a balance between high and low-level code representations. This initiative underscores the evolving landscape of scripting languages in blockchain technology. [Project repository](https://github.com/ajtowns/bllsh).",
    "recent_posts": [
        {
            "id": "m6b32453afca1a36826405583f4ddf272bbf00cdf",
            "title": "Redefine packages to discourage address reuse",
            "link": "https://gnusha.org/pi/bitcoindev/ZyEQn6UzyC9rQebc@petertodd.org/T/#m6b32453afca1a36826405583f4ddf272bbf00cdf",
            "authors": [
                "Peter Todd"
            ],
            "published_at": "2024-10-29T16:43:00+00:00",
            "summary": "- Adversaries can disrupt Lightning network transactions by predicting and using specific addresses.\n- Transaction packages do not significantly enhance privacy due to linkage visibility.\n- Peter Todd's work on Bitcoin development discusses transaction privacy and security intricacies.",
            "n_threads": 5,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "/dev /fd0",
                "Abubakar Ismail"
            ],
            "file_path": "static/bitcoin-dev/Oct_2024/m6b32453afca1a36826405583f4ddf272bbf00cdf_Redefine-packages-to-discourage-address-reuse.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2024/combined_Redefine-packages-to-discourage-address-reuse.xml"
        },
        {
            "id": "m903607c29c7d1e810f169b3d617dca41a7783917",
            "title": "BIP: DLEQ",
            "link": "https://gnusha.org/pi/bitcoindev/b0f40eab-42f3-4153-8083-b455fbd17e19n@googlegroups.com/T/#m903607c29c7d1e810f169b3d617dca41a7783917",
            "authors": [
                "waxwing/ AdamISZ"
            ],
            "published_at": "2024-10-25T14:49:00+00:00",
            "summary": "- The email discusses enhancing cryptographic protocol flexibility, suggesting space for messages in Fiat Shamir challenges.\n- It highlights the importance of incorporating various base pairs for Discrete Logarithm Equality proofs in protocols.\n- The sender proposes a Bitcoin Improvement Proposal for standardizing Nothing-Up-My-Sleeve generators, citing Bitcoin's needs.",
            "n_threads": 1,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Andrew Toth"
            ],
            "file_path": "static/bitcoin-dev/Oct_2024/m903607c29c7d1e810f169b3d617dca41a7783917_BIP-DLEQ.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2024/combined_BIP-DLEQ.xml"
        },
        {
            "id": "m3121af5099843ceb99e310b08276efd74f65190b",
            "title": "Signing a Bitcoin Transaction with Lamport Signatures (no changes needed)",
            "link": "https://gnusha.org/pi/bitcoindev/9e48edb6-1909-4eee-a0c7-48123f42a198n@googlegroups.com/T/#m3121af5099843ceb99e310b08276efd74f65190b",
            "authors": [
                "Garlo Nicon"
            ],
            "published_at": "2024-10-25T09:58:00+00:00",
            "summary": "- Bitcoin development explores the challenge of generating addresses with multiple private keys.\n- The complexity of creating multisignature setups in Bitcoin wallets increases security and customization.\n- Leveraging cryptographic properties allows for scalable security tailored to transaction or wallet needs.",
            "n_threads": 19,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Andrew Poelstra",
                "Ethan Heilman",
                "Antoine Riard",
                "David Harding",
                "Ben Carman",
                "Matthew Zipkin",
                "Vicky"
            ],
            "file_path": "static/bitcoin-dev/Oct_2024/m3121af5099843ceb99e310b08276efd74f65190b_Signing-a-Bitcoin-Transaction-with-Lamport-Signatures-no-changes-needed-.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2024/combined_Signing-a-Bitcoin-Transaction-with-Lamport-Signatures-no-changes-needed-.xml"
        },
        {
            "id": "3438",
            "title": "Debuggable Lisp Scripts",
            "link": "https://delvingbitcoin.org/t/debuggable-lisp-scripts/1224",
            "authors": [
                "ajtowns"
            ],
            "published_at": "2024-10-29T12:14:36.989000+00:00",
            "summary": "- The focus is on improving btclisp code debugging, exploring [racket-lang](https://racket-lang.org/) for better DSL creation.\n- Challenges include macros complicating debugging and a lack of cryptographic libraries for key functions.\n- New developments include \"bll\" and \"symbll\" languages with a debugging-friendly \"bllsh\" environment, detailed at [https://github.com/ajtowns/bllsh](https://github.com/ajtowns/bllsh).",
            "n_threads": 0,
            "dev_name": "delvingbitcoin",
            "contributors": [],
            "file_path": "static/delvingbitcoin/Oct_2024/3438_Debuggable-Lisp-Scripts.xml",
            "combined_summ_file_path": ""
        }
    ],
    "active_posts": [
        {
            "id": "mb7511d27ee5a8e00005dd4a71830839d97004ecf",
            "title": "Signing a Bitcoin Transaction with Lamport Signatures (no changes needed)",
            "link": "https://gnusha.org/pi/bitcoindev/CAEM=y+XyW8wNOekw13C5jDMzQ-dOJpQrBC+qR8-uDot25tM=XA@mail.gmail.com/T/#u#mb7511d27ee5a8e00005dd4a71830839d97004ecf",
            "authors": [
                "Ethan Heilman"
            ],
            "published_at": "2024-04-29T00:30:00+00:00",
            "summary": "- An innovative method uses Lamport signatures to enable direct Bitcoin transactions signing without OP_CAT.\n- This technique relies on the variable length of ECDSA signatures and necessitates around 1000 signatures for security.\n- Despite potential vulnerabilities to tuning attacks, proposed improvements aim to enhance the scheme's security.",
            "n_threads": 19,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Andrew Poelstra",
                "Antoine Riard",
                "David Harding",
                "Ben Carman",
                "Garlo Nicon",
                "Matthew Zipkin",
                "Vicky"
            ],
            "file_path": "static/bitcoin-dev/April_2024/mb7511d27ee5a8e00005dd4a71830839d97004ecf_Signing-a-Bitcoin-Transaction-with-Lamport-Signatures-no-changes-needed-.xml",
            "combined_summ_file_path": "static/bitcoin-dev/April_2024/combined_Signing-a-Bitcoin-Transaction-with-Lamport-Signatures-no-changes-needed-.xml"
        },
        {
            "id": "ma5658318128c12ee3958e6713df5d809230c7d5f",
            "title": "Redefine packages to discourage address reuse",
            "link": "https://gnusha.org/pi/bitcoindev/b383aad2-1abc-4b82-9851-1750b1b52f12n@googlegroups.com/T/#u#ma5658318128c12ee3958e6713df5d809230c7d5f",
            "authors": [
                "/dev /fd0"
            ],
            "published_at": "2024-10-20T06:19:00+00:00",
            "summary": "- Address reuse in Bitcoin transactions threatens privacy, suggesting mempool policy modifications.\n- BIP 331's package transactions, avoiding address reuse, present a more viable privacy solution.\n- Challenges include increased scan times for reuse and the complexity of implementing changes.",
            "n_threads": 5,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Peter Todd",
                "Abubakar Ismail"
            ],
            "file_path": "static/bitcoin-dev/Oct_2024/ma5658318128c12ee3958e6713df5d809230c7d5f_Redefine-packages-to-discourage-address-reuse.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2024/combined_Redefine-packages-to-discourage-address-reuse.xml"
        },
        {
            "id": "md54f948a215a1d828571be3122954b53fdf40b96",
            "title": "BIP: DLEQ",
            "link": "https://gnusha.org/pi/bitcoindev/b0f40eab-42f3-4153-8083-b455fbd17e19n@googlegroups.com/T/#u#md54f948a215a1d828571be3122954b53fdf40b96",
            "authors": [
                "Andrew Toth"
            ],
            "published_at": "2024-10-24T01:51:00+00:00",
            "summary": "- The BIP aims to enhance Bitcoin's security by standardizing DLEQ proofs on secp256k1.\n- It introduces 64-byte zero-knowledge proofs for verifying secret key usage without disclosure.\n- The proposal supports correct output script generation in PSBTs, addressing BIP352 requirements.",
            "n_threads": 1,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "waxwing/ AdamISZ"
            ],
            "file_path": "static/bitcoin-dev/Oct_2024/md54f948a215a1d828571be3122954b53fdf40b96_BIP-DLEQ.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2024/combined_BIP-DLEQ.xml"
        },
        {
            "id": "3401",
            "title": "OP_PAIRCOMMIT as a candidate for addition to LNhance",
            "link": "https://delvingbitcoin.org/t/op-paircommit-as-a-candidate-for-addition-to-lnhance/1216",
            "authors": [
                "moonsettler"
            ],
            "published_at": "2024-10-25T14:34:33.286000+00:00",
            "summary": "- Optimizing SHA256 for LN-Symmetry by pre-computing Tags reduces hash cycles needed.\n- Length redistribution attacks are worried due to CTV's design flaw with non-32-byte templates.\n- A custom hash function employing a prime number multiplier is proposed to prevent attacks.",
            "n_threads": 11,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "1440000bytes",
                "ajtowns"
            ],
            "file_path": "static/delvingbitcoin/Oct_2024/3401_OP-PAIRCOMMIT-as-a-candidate-for-addition-to-LNhance.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Oct_2024/combined_OP-PAIRCOMMIT-as-a-candidate-for-addition-to-LNhance.xml"
        },
        {
            "id": "3315",
            "title": "Non-disclosure of a consensus bug in btcd",
            "link": "https://delvingbitcoin.org/t/non-disclosure-of-a-consensus-bug-in-btcd/1177",
            "authors": [
                "AntoineP"
            ],
            "published_at": "2024-10-03T14:19:37.759000+00:00",
            "summary": "- In March 2024, a consensus bug in btcd was fixed and awarded a bounty.\n- Transparency in security vulnerability handling is stressed, with adherence to disclosure schedules.\n- Analysis indicated 16 btcd nodes at risk; users are urged to upgrade for security.",
            "n_threads": 7,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "ajtowns",
                "ariard",
                "josibake",
                "real-or-random",
                "roasbeef"
            ],
            "file_path": "static/delvingbitcoin/Oct_2024/3315_Non-disclosure-of-a-consensus-bug-in-btcd.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Oct_2024/combined_Non-disclosure-of-a-consensus-bug-in-btcd.xml"
        },
        {
            "id": "3432",
            "title": "Libbitcoin for Core people",
            "link": "https://delvingbitcoin.org/t/libbitcoin-for-core-people/1222",
            "authors": [
                "AntoineP"
            ],
            "published_at": "2024-10-28T19:09:55.723000+00:00",
            "summary": "- Eric Voskuil showcased Libbitcoin's IBD outperforming Bitcoin Core, up to 15 times faster with `-assumevalid`.\n- Libbitcoin employs an asynchronous, event-based system and relational database structure for efficient block validation.\n- Despite technological advances, Libbitcoin lacks full DoS protection and uses outdated components, affecting its performance comparison.",
            "n_threads": 2,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "instagibbs"
            ],
            "file_path": "static/delvingbitcoin/Oct_2024/3432_Libbitcoin-for-Core-people.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Oct_2024/combined_Libbitcoin-for-Core-people.xml"
        }
    ],
    "today_in_history_posts": [
        {
            "id": "015231",
            "title": "Simplicity: An alternative to Script",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-November/015231.html",
            "authors": [
                "Mark Friedenbach"
            ],
            "published_at": "2017-11-01T01:46:54+00:00",
            "summary": "- Simplicity is a new Bitcoin Script alternative with formal semantics proven in Coq.\n- It includes privacy-enhancing MAST pruning and resource-efficient jets for common expressions.\n- Future plans involve developing an SDK and experimenting with Simplicity in sidechains before Bitcoin inclusion.",
            "n_threads": 11,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "M",
                "Russell O'Connor",
                "Greg Maxwell"
            ],
            "file_path": "static/bitcoin-dev/Nov_2017/015231_Simplicity-An-alternative-to-Script.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Nov_2017/combined_Simplicity-An-alternative-to-Script.xml"
        },
        {
            "id": "000774",
            "title": "(no subject)",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-November/000774.html",
            "authors": [
                "Mark Botley"
            ],
            "published_at": "2017-11-09T08:22:10+00:00",
            "summary": "- Mark Botley reported a technical glitch with the email system.\n- No context was provided in the message for summarization.\n- He requested additional information or context to proceed.",
            "n_threads": 10,
            "dev_name": "lightning-dev",
            "contributors": [
                "Nongluck Loyha",
                "Chris Malloy",
                "D",
                "Victor Umobi"
            ],
            "file_path": "static/lightning-dev/Nov_2017/000774_-no-subject-.xml",
            "combined_summ_file_path": "static/lightning-dev/Nov_2017/combined_-no-subject-.xml"
        },
        {
            "id": "332",
            "title": "Project categories?",
            "link": "https://delvingbitcoin.org/t/project-categories/162",
            "authors": [
                "ajtowns"
            ],
            "published_at": "2023-11-04T11:20:07.942000+00:00",
            "summary": "- Categories for bitcoin projects on GitHub are drawing interest.\n- The idea aims to centralize discussions and updates for projects like [bitcoin-inquisition](https://github.com/bitcoin-inquisition/bitcoin/wiki).\n- It proposes an organized space with moderation to enhance project discussion management.",
            "n_threads": 10,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "David Harding",
                "dgpv",
                "josibake"
            ],
            "file_path": "static/delvingbitcoin/Nov_2023/332_Project-categories-.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Nov_2023/combined_Project-categories-.xml"
        }
    ]
}