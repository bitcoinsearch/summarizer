{
    "header_summary": "Ava Chow announces the availability of Bitcoin Core's latest release candidate, v28.3rc1, emphasizing the critical role of release candidates in the development cycle and the significance of this update for the Bitcoin ecosystem. The binaries and source code for this version can be accessed through provided [links](https://bitcoincore.org/bin/bitcoin-core-28.3/test.rc1/), with preliminary release notes available for those interested in the changes and improvements made. This release candidate is a step toward the official release of version v28.3, pending the identification of any critical issues.\n\nAnthony Towns et al. delve into the complexities of naming and functionality within Tapscript v2, proposing more accurate naming conventions and the addition of new selectors to enhance Bitcoin's scripting capabilities. The discussion includes technical suggestions aimed at refining transaction mechanisms and facilitating state finalization in blockchain protocols, with a comprehensive exploration available at [delvingbitcoin.org](https://delvingbitcoin.org/t/contract-level-relative-timelocks-or-lets-talk-about-ancestry-proofs-and-singletons/1353). These proposals reflect ongoing efforts to evolve Bitcoin scripting and transaction validation processes.\n\nErik Aronesty focuses on the security and efficiency benefits of using the UTXO set root from prior intervals for lightweight synchronization, highlighting the potential of incremental hashing and various data structures to improve update mechanisms. This approach aims to minimize the risk of reorganization while enhancing process efficiency, demonstrating a proactive strategy towards maintaining blockchain security and resource management. The conversation underscores innovation in data handling and synchronization within the Bitcoin network, pointing towards advancements in blockchain technology infrastructure.\n\nJoseSK999 and ademan contribute to the broader discussion on blockchain data composition and protocol efficiency, respectively, revealing insights into the dominance of witness-produced data and querying the structuring of transactions within Bitcoin Improvement Proposals. These discussions underline the continuous exploration of blockchain functionality, security models, and the balance between usability and technical precision in protocol development, signifying a vibrant and collaborative effort among participants to address emerging challenges and optimize blockchain technology.",
    "recent_posts": [
        {
            "id": "m010390425297011644344786b6704f9609523a6f",
            "title": "Bitcoin Core 28.3 Release Candidate 1 Available",
            "link": "https://gnusha.org/pi/bitcoindev/1aa0ea1e-a836-46c3-b644-602702a32b94@achow101.com/T/#u#m010390425297011644344786b6704f9609523a6f",
            "authors": [
                "Ava Chow"
            ],
            "published_at": "2025-10-06T19:02:00+00:00",
            "summary": "- Bitcoin Core's latest release candidate, v28.3rc1, is now ready for download.\n- Release notes detailing changes and improvements are available for further insight.\n- No critical issues found will promote it to the official v28.3 version.",
            "n_threads": 0,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/Oct_2025/m010390425297011644344786b6704f9609523a6f_Bitcoin-Core-28-3-Release-Candidate-1-Available.xml",
            "combined_summ_file_path": ""
        },
        {
            "id": "m07e2b3743429cfdffa1d1f3f88a4d308e25f02ef",
            "title": "[0/4] A Bitcoin Scripting Proposal BIP Quartet",
            "link": "https://gnusha.org/pi/bitcoindev/877bxknwk6.fsf@rustcorp.com.au/T/#m07e2b3743429cfdffa1d1f3f88a4d308e25f02ef",
            "authors": [
                "Anthony Towns"
            ],
            "published_at": "2025-10-06T11:41:00+00:00",
            "summary": "- Rusty Russell's email discusses Tapscript v2 naming, targeting clearer script selection for Bitcoin.\n- It suggests renaming selectors for clarity and adding TXSELECT_INPUT_OUTPOINT_HEIGHT for eltoo support.\n- The email also explores enhancing drivechains and references deeper technical discussions on Bitcoin development.",
            "n_threads": 7,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Rusty Russell",
                "Brandon Black"
            ],
            "file_path": "static/bitcoin-dev/Oct_2025/m07e2b3743429cfdffa1d1f3f88a4d308e25f02ef_-0-4-A-Bitcoin-Scripting-Proposal-BIP-Quartet.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2025/combined_-0-4-A-Bitcoin-Scripting-Proposal-BIP-Quartet.xml"
        },
        {
            "id": "m96412373b0efd17e954d65d9ed50b097d2e2d5be",
            "title": "OP_CHECKUTXOSETHASH idea",
            "link": "https://gnusha.org/pi/bitcoindev/CAJowKgLpix4KjzJGKNzR3JpiKLDJKSiuuOdcebCyGJnDuw0wJw@mail.gmail.com/T/#m96412373b0efd17e954d65d9ed50b097d2e2d5be",
            "authors": [
                "Erik Aronesty"
            ],
            "published_at": "2025-10-03T22:15:00+00:00",
            "summary": "- Using a prior UTXO set root enhances security and lightweight sync without central checkpoints.\n- Incremental hashing with structures like Merkleized trees can improve update efficiency.\n- This method updates only changed UTXOs, making the process faster and less resource-intensive.",
            "n_threads": 4,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Peter Todd",
                "moonsettler"
            ],
            "file_path": "static/bitcoin-dev/Oct_2025/m96412373b0efd17e954d65d9ed50b097d2e2d5be_OP-CHECKUTXOSETHASH-idea.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2025/combined_OP-CHECKUTXOSETHASH-idea.xml"
        },
        {
            "id": "6002",
            "title": "Optimal Threshold Signatures in Bitcoin",
            "link": "https://delvingbitcoin.org/t/optimal-threshold-signatures-in-bitcoin/2023/4",
            "authors": [
                "sindurasaraswathi"
            ],
            "published_at": "2025-10-03T18:30:21.135000+00:00",
            "summary": "- The relationship between user access probability ($p(\\tau)$) and attacker access probability ($q(\\tau)$) is fundamentally linked.\n- Despite their interconnection, current models assume $p(\\tau)$ and $q(\\tau)$ are independent for simplicity.\n- Future research is encouraged to use statistical analysis for finding an optimal threshold in signature schemes.",
            "n_threads": 3,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "AdamISZ",
                "pyth"
            ],
            "file_path": "static/delvingbitcoin/Oct_2025/6002_Optimal-Threshold-Signatures-in-Bitcoin.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Oct_2025/combined_Optimal-Threshold-Signatures-in-Bitcoin.xml"
        },
        {
            "id": "5998",
            "title": "Witnessless Sync for Pruned Nodes",
            "link": "https://delvingbitcoin.org/t/witnessless-sync-for-pruned-nodes/1742/3",
            "authors": [
                "JoseSK999"
            ],
            "published_at": "2025-10-02T19:49:14.098000+00:00",
            "summary": "- Approximately 53% of all block data comes from witnesses over four years.\n- Witnesses are crucial for transaction validation and blockchain integrity.\n- Their role emphasizes trust in upholding the blockchain's decentralized nature.",
            "n_threads": 2,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "gmaxwell"
            ],
            "file_path": "static/delvingbitcoin/Oct_2025/5998_Witnessless-Sync-for-Pruned-Nodes.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Oct_2025/combined_Witnessless-Sync-for-Pruned-Nodes.xml"
        },
        {
            "id": "5989",
            "title": "JIT fees with TXHASH: comparing options for sponsorring and stacking",
            "link": "https://delvingbitcoin.org/t/jit-fees-with-txhash-comparing-options-for-sponsorring-and-stacking/1760/2",
            "authors": [
                "ademan"
            ],
            "published_at": "2025-09-30T20:25:10.596000+00:00",
            "summary": "- The inquiry questions the non-contiguous output indices in Bitcoin's transaction protocol.\n- It suggests a contiguous sequence method for output indices within transactions.\n- The sender seeks clarification on the benefits or drawbacks of both methods.",
            "n_threads": 1,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "stevenroose"
            ],
            "file_path": "static/delvingbitcoin/Sept_2025/5989_JIT-fees-with-TXHASH-comparing-options-for-sponsorring-and-stacking.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Sept_2025/combined_JIT-fees-with-TXHASH-comparing-options-for-sponsorring-and-stacking.xml"
        }
    ],
    "active_posts": [
        {
            "id": "ma857d9dd9fcdd4c6bd14078d55c72a8c6d72aefc",
            "title": "[BIP Proposal] Mempool Validation and Relay Policies via User-Defined Scripts",
            "link": "https://gnusha.org/pi/bitcoindev/b5688bf9-f872-4655-ae68-8876348479e1@dashjr.org/T/#ma857d9dd9fcdd4c6bd14078d55c72a8c6d72aefc",
            "authors": [
                "[BIP Proposal] Mempool Validation and Relay Policies via User-Defined Scripts Aiden McClelland"
            ],
            "published_at": "2025-09-24T18:18:00+00:00",
            "summary": "- Aiden McClelland proposed a new Bitcoin Improvement Proposal for a modular mempool/relay policy.\n- McClelland faces challenges with C++ after a long hiatus, affecting initial code quality.\n- The proposal aims to harmonize Bitcoin community conflicts over relay policies with a flexible framework.",
            "n_threads": 31,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Greg Maxwell",
                "Aiden McClelland",
                "Chris Guida",
                "Chris Riley",
                "/dev /fd0",
                "Andrew Poelstra",
                "Anthony Towns",
                "Bryan Bishop",
                "Dingocoin",
                "Garlo Nicon",
                "Luke Dashjr",
                "OJ",
                "bigshiny",
                "jeremy",
                "yes_please"
            ],
            "file_path": "static/bitcoin-dev/Sept_2025/ma857d9dd9fcdd4c6bd14078d55c72a8c6d72aefc_-BIP-Proposal-Mempool-Validation-and-Relay-Policies-via-User-Defined-Scripts.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Sept_2025/combined_-BIP-Proposal-Mempool-Validation-and-Relay-Policies-via-User-Defined-Scripts.xml"
        },
        {
            "id": "m30947b71789e88b7e483a70ed3e9935f63c0cf7e",
            "title": "[BIP Proposal] Limit ScriptPubkey Size >= 520 Bytes Consensus.",
            "link": "https://gnusha.org/pi/bitcoindev/2e5be000-c054-44ea-818c-653dc11f0901@reardencode.com/T/#m30947b71789e88b7e483a70ed3e9935f63c0cf7e",
            "authors": [
                "PortlandHODL"
            ],
            "published_at": "2025-10-02T20:42:00+00:00",
            "summary": "- Brandon Black proposes a Bitcoin soft fork to limit ScriptPubkey size for better security.\n- The rule, based on BIP 0002 data, targets rare 'large' ScriptPubkey uses over 15 years.\n- The change aims to enhance network efficiency while maintaining flexibility for future advancements.",
            "n_threads": 21,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "/dev /fd0",
                "Andrew Poelstra",
                "moonsettler",
                "Anthony Towns",
                "Brandon Black",
                "Luke Dashjr",
                "jeremy",
                "Garlo Nicon",
                "Guus Ellenkamp"
            ],
            "file_path": "static/bitcoin-dev/Oct_2025/m30947b71789e88b7e483a70ed3e9935f63c0cf7e_-BIP-Proposal-Limit-ScriptPubkey-Size-520-Bytes-Consensus-.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2025/combined_-BIP-Proposal-Limit-ScriptPubkey-Size-520-Bytes-Consensus-.xml"
        },
        {
            "id": "m27239f8a634b8db07be258948dba65795f3af9ef",
            "title": "On (in)ability to embed data into Schnorr",
            "link": "https://gnusha.org/pi/bitcoindev/aN21KbXTORgXAVH0@mail.wpsoftware.net/T/#m27239f8a634b8db07be258948dba65795f3af9ef",
            "authors": [
                "waxwing/ AdamISZ"
            ],
            "published_at": "2025-10-01T14:24:00+00:00",
            "summary": "- AdamISZ explores Schnorr signatures' data embedding potential, focusing on security compromises.\n- The analysis concludes embedding data compromises private key security, undermining UTXO integrity.\n- AdamISZ invites discussions on the cryptographic methodology, with further details available on GitHub.",
            "n_threads": 8,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Greg Maxwell",
                "Andrew Poelstra",
                "Peter Todd"
            ],
            "file_path": "static/bitcoin-dev/Oct_2025/m27239f8a634b8db07be258948dba65795f3af9ef_On-in-ability-to-embed-data-into-Schnorr.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2025/combined_On-in-ability-to-embed-data-into-Schnorr.xml"
        },
        {
            "id": "5412",
            "title": "Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)",
            "link": "https://delvingbitcoin.org/t/changes-to-bip-360-pay-to-quantum-resistant-hash-p2qrh/1811",
            "authors": [
                "EthanHeilman"
            ],
            "published_at": "2025-07-07T16:01:15.275000+00:00",
            "summary": "- BIP-360's update enhances Bitcoin's defense against quantum computing by modifying P2QRH to use Taproot.\n- The changes simplify implementation, improve security against quantum attacks, and offer a non-emergency adaptation strategy.\n- A future plan for Post-Quantum signatures is outlined, allowing separate development and integration into Bitcoin's protocol.",
            "n_threads": 29,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "sipa",
                "stevenroose",
                "conduition",
                "cryptoquick",
                "dr-orlovsky",
                "jesseposner",
                "moonsettler",
                "murch",
                "vazertuche"
            ],
            "file_path": "static/delvingbitcoin/July_2025/5412_Changes-to-BIP-360-Pay-to-Quantum-Resistant-Hash-P2QRH-.xml",
            "combined_summ_file_path": "static/delvingbitcoin/July_2025/combined_Changes-to-BIP-360-Pay-to-Quantum-Resistant-Hash-P2QRH-.xml"
        },
        {
            "id": "5233",
            "title": "Where does the 33.33% threshold for selfish mining come from?",
            "link": "https://delvingbitcoin.org/t/where-does-the-33-33-threshold-for-selfish-mining-come-from/1757",
            "authors": [
                "AntoineP"
            ],
            "published_at": "2025-06-05T20:26:39.357000+00:00",
            "summary": "- Selfish mining strategy allows miners to gain more than their fair network share.\n- Profitability of selfish mining depends on the miner's hashrate and block propagation speed.\n- Analysis and simulation show profitability threshold lies around 36%-37% of network hashrate.",
            "n_threads": 11,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "zawy",
                "ajtowns",
                "sipa"
            ],
            "file_path": "static/delvingbitcoin/June_2025/5233_Where-does-the-33-33-threshold-for-selfish-mining-come-from-.xml",
            "combined_summ_file_path": "static/delvingbitcoin/June_2025/combined_Where-does-the-33-33-threshold-for-selfish-mining-come-from-.xml"
        },
        {
            "id": "5419",
            "title": "Stealth addresses using nostr",
            "link": "https://delvingbitcoin.org/t/stealth-addresses-using-nostr/1816",
            "authors": [
                "1440000bytes"
            ],
            "published_at": "2025-07-09T17:13:25.556000+00:00",
            "summary": "- Nostr uses cryptographic techniques like Bitcoin for key generation and receiving Bitcoin payments.\n- It introduces a method to improve user experience by notifying through encrypted messages via NIP-17.\n- The proof of concept with Python code demonstrates creating stealth keys for private transactions within Nostr.",
            "n_threads": 9,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "setavenger",
                "AdamISZ"
            ],
            "file_path": "static/delvingbitcoin/July_2025/5419_Stealth-addresses-using-nostr.xml",
            "combined_summ_file_path": "static/delvingbitcoin/July_2025/combined_Stealth-addresses-using-nostr.xml"
        }
    ],
    "today_in_history_posts": [
        {
            "id": "013210",
            "title": "DPL is not only not enough, but brings unfounded confidence to Bitcoin users",
            "link": "https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-October/013210.html",
            "authors": [
                "Sergio Lerner"
            ],
            "published_at": "2016-10-14T10:38:07+00:00",
            "summary": "- Sergio warns the DPL v1.1 could make Bitcoin proprietary, risking lawsuits against users.\n- He suggests adding a clause to BIPs for a free, irrevocable license to use the content.\n- Sergio clarifies he's not a lawyer, urging readers to evaluate the DPL v1.1 themselves.",
            "n_threads": 7,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Daniel Robinson",
                "Peter Todd",
                "Nick ODell",
                "Tom Zander"
            ],
            "file_path": "static/bitcoin-dev/Oct_2016/013210_DPL-is-not-only-not-enough-but-brings-unfounded-confidence-to-Bitcoin-users.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2016/combined_DPL-is-not-only-not-enough-but-brings-unfounded-confidence-to-Bitcoin-users.xml"
        },
        {
            "id": "000644",
            "title": "Single channel on mobile clients",
            "link": "https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-November/000644.html",
            "authors": [
                "Anton Kumaigorodskiy"
            ],
            "published_at": "2016-11-01T11:53:12+00:00",
            "summary": "- Multiple phone channels for third-party payments introduce several user challenges.\n- Issues include managing channels, fees, and maximum relayable funds without hindering payments.\n- Solutions involve educating users on balance complexities or simplifying channel management.",
            "n_threads": 5,
            "dev_name": "lightning-dev",
            "contributors": [
                "Christian Decker",
                "Rusty Russell"
            ],
            "file_path": "static/lightning-dev/Nov_2016/000644_Single-channel-on-mobile-clients.xml",
            "combined_summ_file_path": "static/lightning-dev/Nov_2016/combined_Single-channel-on-mobile-clients.xml"
        },
        {
            "id": "279",
            "title": "B'SST plugins for covenant opcodes",
            "link": "https://delvingbitcoin.org/t/bsst-plugins-for-covenant-opcodes/137",
            "authors": [
                "dgpv"
            ],
            "published_at": "2023-10-04T09:21:19.100000+00:00",
            "summary": "- A developer created a plugin for `CHECKCONTRACTVERIFY` to test B'SST and find API limits.\n- The plugin, showcasing `CHECKCONTRACTVERIFY` usage in B'SST, is shared on GitHub for feedback.\n- They encourage community feedback on opcodes, aiming to improve B'SST through collaboration.",
            "n_threads": 5,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "ajtowns"
            ],
            "file_path": "static/delvingbitcoin/Oct_2023/279_B-SST-plugins-for-covenant-opcodes.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Oct_2023/combined_B-SST-plugins-for-covenant-opcodes.xml"
        }
    ]
}