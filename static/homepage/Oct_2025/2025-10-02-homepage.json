{
    "header_summary": "Andrew Poelstra and Ethan Heilman discussed the implications of embedding data within PQ signatures, highlighting a particular strategy that could balance incentives and mitigate the risks of embedding malicious data. The conversation also delved into the complexities of embedding data in Schnorr signatures, underscoring the technical barriers that safeguard against unauthorized manipulation. Poelstra's insights contribute to the larger conversation on enhancing cryptographic security practices, with further details available on his [website](https://www.wpsoftware.net/andrew).\n\nThe idea of an emoji wallet for Bitcoin transactions generated skepticism among developers, including /dev /fd0, concerning its practicality and potential for widespread adoption within the Bitcoin community. Despite the novelty of the concept, as documented on [GitHub](https://github.com/stepansnigirev/emoji-wallet), the discussion suggested that such innovations might face challenges in achieving serious usage due to their perceived novelty rather than functional advancements.\n\nErik Aronesty proposed `OP_CHECKUTXOSETHASH`, a new opcode to enhance Bitcoin's efficiency without compromising security, suggesting a soft fork for its implementation. This approach, aimed at reducing the resource demands on nodes, introduces a voluntary, fee-driven mechanism for embedding a deterministic hash of the UTXO set within a block, with detailed discussion available [here](https://gnusha.org/pi/bitcoindev/CAJowKgLE4kb7qT1NxXrmEssr8+fQGd-=7=m-BAsjePoti8TRRg@mail.gmail.com).\n\nA diverse range of topics from the potential of nostr-based wallets and new standards for cryptocurrency wallets to questions about transaction protocols and updates to the Bitcoin network underscore the ongoing exploration and debate within the Bitcoin development community. These discussions reflect a continuous effort to address privacy, functionality, and efficiency in digital currency systems, with links to specific projects and proposals providing avenues for deeper engagement.",
    "recent_posts": [
        {
            "id": "mfb632a3cafaaa48ef3e352ea54f57ab990c586a9",
            "title": "On (in)ability to embed data into Schnorr",
            "link": "https://gnusha.org/pi/bitcoindev/aN21KbXTORgXAVH0@mail.wpsoftware.net/T/#mfb632a3cafaaa48ef3e352ea54f57ab990c586a9",
            "authors": [
                "Andrew Poelstra"
            ],
            "published_at": "2025-10-01T23:11:00+00:00",
            "summary": "- A 12% embedding rate in PQ signatures offers significant savings for legitimate signatures.\n- Schnorr signatures' structure complicates data embedding, ensuring signature integrity.\n- Andrew Poelstra's insights contribute to enhancing cryptographic security measures.",
            "n_threads": 2,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Greg Maxwell",
                "waxwing/ AdamISZ"
            ],
            "file_path": "static/bitcoin-dev/Oct_2025/mfb632a3cafaaa48ef3e352ea54f57ab990c586a9_On-in-ability-to-embed-data-into-Schnorr.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2025/combined_On-in-ability-to-embed-data-into-Schnorr.xml"
        },
        {
            "id": "m21d2614d0619d145de5ea0745166995962e7362c",
            "title": "[BIP Draft] Emoji Seed Mnemonics for Deterministic Keys",
            "link": "https://gnusha.org/pi/bitcoindev/66bd5da8-9114-4ddc-b926-c9349c57e8c3n@googlegroups.com/T/#m21d2614d0619d145de5ea0745166995962e7362c",
            "authors": [
                "/dev /fd0"
            ],
            "published_at": "2025-10-01T11:06:00+00:00",
            "summary": "- The email discusses an experimental emoji wallet for Bitcoin transactions.\n- Skepticism exists about its practicality and potential widespread acceptance.\n- The project, documented on GitHub, draws parallels with historically novelty tech ideas.",
            "n_threads": 1,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Coperbyte Solutions"
            ],
            "file_path": "static/bitcoin-dev/Oct_2025/m21d2614d0619d145de5ea0745166995962e7362c_-BIP-Draft-Emoji-Seed-Mnemonics-for-Deterministic-Keys.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2025/combined_-BIP-Draft-Emoji-Seed-Mnemonics-for-Deterministic-Keys.xml"
        },
        {
            "id": "m0a81d64fddff932c1bc7d2ddb4645d5011931f4d",
            "title": "OP_CHECKUTXOSETHASH idea",
            "link": "https://gnusha.org/pi/bitcoindev/CAJowKgLE4kb7qT1NxXrmEssr8+fQGd-=7=m-BAsjePoti8TRRg@mail.gmail.com/T/#u#m0a81d64fddff932c1bc7d2ddb4645d5011931f4d",
            "authors": [
                "Erik Aronesty"
            ],
            "published_at": "2025-09-30T00:09:00+00:00",
            "summary": "- Erik Aronesty proposed adding `OP_CHECKUTXOSETHASH` to enhance Bitcoin efficiency without security compromise.\n- The hash inclusion is optional, aiming for voluntary, fee-driven checkpoint enforcement without mandatory every-block inclusion.\n- This approach aims to reduce node resource demands while preserving the blockchain's integrity and improving usability.",
            "n_threads": 0,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/Sept_2025/m0a81d64fddff932c1bc7d2ddb4645d5011931f4d_OP-CHECKUTXOSETHASH-idea.xml",
            "combined_summ_file_path": ""
        },
        {
            "id": "5991",
            "title": "Stealth addresses using nostr",
            "link": "https://delvingbitcoin.org/t/stealth-addresses-using-nostr/1816/10",
            "authors": [
                "1440000bytes"
            ],
            "published_at": "2025-10-01T10:30:46.778000+00:00",
            "summary": "- Skepticism exists about a nostr platform wallet's lack of a fallback mechanism.\n- The discussion includes NIP-17's role in preventing metadata leakage in the amethyst project.\n- Plans are underway to develop an Electrum plugin introducing \"color addresses\" for bitcoin wallets.",
            "n_threads": 9,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "setavenger",
                "AdamISZ"
            ],
            "file_path": "static/delvingbitcoin/Oct_2025/5991_Stealth-addresses-using-nostr.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Oct_2025/combined_Stealth-addresses-using-nostr.xml"
        },
        {
            "id": "5989",
            "title": "JIT fees with TXHASH: comparing options for sponsorring and stacking",
            "link": "https://delvingbitcoin.org/t/jit-fees-with-txhash-comparing-options-for-sponsorring-and-stacking/1760/2",
            "authors": [
                "ademan"
            ],
            "published_at": "2025-09-30T20:25:10.596000+00:00",
            "summary": "- The email questions the non-contiguous output indexing in Bitcoin's protocol.\n- It suggests a contiguous sequencing method for output indices.\n- The sender seeks insight on the efficiency of both methods.",
            "n_threads": 1,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "stevenroose"
            ],
            "file_path": "static/delvingbitcoin/Sept_2025/5989_JIT-fees-with-TXHASH-comparing-options-for-sponsorring-and-stacking.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Sept_2025/combined_JIT-fees-with-TXHASH-comparing-options-for-sponsorring-and-stacking.xml"
        },
        {
            "id": "5987",
            "title": "Bitcoin Inquisition 29.1",
            "link": "https://delvingbitcoin.org/t/bitcoin-inquisition-29-1/2019",
            "authors": [
                "ajtowns"
            ],
            "published_at": "2025-09-30T07:27:09.138000+00:00",
            "summary": "- Bitcoin Inquisition version 29.1 introduces major enhancements like SIGHASH_ANYPREVOUT and OP_CHECKTEMPLATEVERIFY.\n- These updates have been progressively activated, with new features to be fully operational by 2024.\n- The release also improves network efficiency by supporting template sharing for block reconstruction.",
            "n_threads": 0,
            "dev_name": "delvingbitcoin",
            "contributors": [],
            "file_path": "static/delvingbitcoin/Sept_2025/5987_Bitcoin-Inquisition-29-1.xml",
            "combined_summ_file_path": ""
        }
    ],
    "active_posts": [
        {
            "id": "ma857d9dd9fcdd4c6bd14078d55c72a8c6d72aefc",
            "title": "[BIP Proposal] Mempool Validation and Relay Policies via User-Defined Scripts",
            "link": "https://gnusha.org/pi/bitcoindev/b5688bf9-f872-4655-ae68-8876348479e1@dashjr.org/T/#ma857d9dd9fcdd4c6bd14078d55c72a8c6d72aefc",
            "authors": [
                "[BIP Proposal] Mempool Validation and Relay Policies via User-Defined Scripts Aiden McClelland"
            ],
            "published_at": "2025-09-24T18:18:00+00:00",
            "summary": "- Aiden McClelland proposed a new BIP for a modular mempool/relay policy on GitHub.\n- The proposal aims to resolve Bitcoin relay policy conflicts without requiring multiple node versions.\n- Despite coding challenges, McClelland is developing a reference implementation using QuickJS.",
            "n_threads": 30,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Greg Maxwell",
                "Aiden McClelland",
                "Chris Guida",
                "Chris Riley",
                "/dev /fd0",
                "Andrew Poelstra",
                "Bryan Bishop",
                "Dingocoin",
                "Garlo Nicon",
                "Luke Dashjr",
                "OJ",
                "bigshiny",
                "jeremy",
                "yes_please"
            ],
            "file_path": "static/bitcoin-dev/Sept_2025/ma857d9dd9fcdd4c6bd14078d55c72a8c6d72aefc_-BIP-Proposal-Mempool-Validation-and-Relay-Policies-via-User-Defined-Scripts.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Sept_2025/combined_-BIP-Proposal-Mempool-Validation-and-Relay-Policies-via-User-Defined-Scripts.xml"
        },
        {
            "id": "mb4ad1fe9f693076c604d72a54087e635c2dff6b7",
            "title": "Re: [BIP Proposal] Mempool Validation and Relay Policies via User-Defined Scripts]",
            "link": "https://gnusha.org/pi/bitcoindev/CAAANnUz3V-ciTB1+9tUz8yByhd66UpyPJTZEQFrPRMjLXZfdwQ@mail.gmail.com/T/#mb4ad1fe9f693076c604d72a54087e635c2dff6b7",
            "authors": [
                "Andrew Poelstra"
            ],
            "published_at": "2025-09-26T13:26:00+00:00",
            "summary": "- The email discusses Bitcoin's scalability and node network management concerns.\n- It reviews challenges like the potential removal of outdated mechanisms and the importance of mempool policy.\n- Solutions for issues like data carrier overload and the non-compensation of nodes are also explored.",
            "n_threads": 5,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "/dev /fd0",
                "Chris Guida",
                "L\u0151rinc",
                "Russell OConnor"
            ],
            "file_path": "static/bitcoin-dev/Sept_2025/mb4ad1fe9f693076c604d72a54087e635c2dff6b7_Re-BIP-Proposal-Mempool-Validation-and-Relay-Policies-via-User-Defined-Scripts-.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Sept_2025/combined_Re-BIP-Proposal-Mempool-Validation-and-Relay-Policies-via-User-Defined-Scripts-.xml"
        },
        {
            "id": "m20f4efc6f3423e540b6d43644db14cc2b4db5581",
            "title": "[0/4] A Bitcoin Scripting Proposal BIP Quartet",
            "link": "https://gnusha.org/pi/bitcoindev/877bxknwk6.fsf@rustcorp.com.au/T/#m20f4efc6f3423e540b6d43644db14cc2b4db5581",
            "authors": [
                "Rusty Russell"
            ],
            "published_at": "2025-09-27T08:12:00+00:00",
            "summary": "- Rusty Russell and Julian Moik aim to enhance Bitcoin's scripting language, expanding its functionalities.\n- Their project proposes a variable operations budget and new opcodes like OP_TX for data introspection.\n- Feedback is sought on the draft, showcasing new opcodes for Tapscript v2 and a prototype implementation.",
            "n_threads": 5,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Brandon Black"
            ],
            "file_path": "static/bitcoin-dev/Sept_2025/m20f4efc6f3423e540b6d43644db14cc2b4db5581_-0-4-A-Bitcoin-Scripting-Proposal-BIP-Quartet.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Sept_2025/combined_-0-4-A-Bitcoin-Scripting-Proposal-BIP-Quartet.xml"
        },
        {
            "id": "5412",
            "title": "Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)",
            "link": "https://delvingbitcoin.org/t/changes-to-bip-360-pay-to-quantum-resistant-hash-p2qrh/1811",
            "authors": [
                "EthanHeilman"
            ],
            "published_at": "2025-07-07T16:01:15.275000+00:00",
            "summary": "- BIP-360 modifications enhance Bitcoin's defense against quantum threats by adopting P2TR.\n- The approach simplifies security, avoiding key-spend vulnerabilities and facilitating easier integration.\n- It separates Post-Quantum signature development, with plans for future-proofing through new opcodes.",
            "n_threads": 29,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "sipa",
                "stevenroose",
                "conduition",
                "cryptoquick",
                "dr-orlovsky",
                "jesseposner",
                "moonsettler",
                "murch",
                "vazertuche"
            ],
            "file_path": "static/delvingbitcoin/July_2025/5412_Changes-to-BIP-360-Pay-to-Quantum-Resistant-Hash-P2QRH-.xml",
            "combined_summ_file_path": "static/delvingbitcoin/July_2025/combined_Changes-to-BIP-360-Pay-to-Quantum-Resistant-Hash-P2QRH-.xml"
        },
        {
            "id": "5233",
            "title": "Where does the 33.33% threshold for selfish mining come from?",
            "link": "https://delvingbitcoin.org/t/where-does-the-33-33-threshold-for-selfish-mining-come-from/1757",
            "authors": [
                "AntoineP"
            ],
            "published_at": "2025-06-05T20:26:39.357000+00:00",
            "summary": "- The 2013 paper critically examines selfish mining, showing it profits with significant hashrate.\n- Findings show profitability occurs when hashrate exceeds one-third, with block propagation speed critical.\n- The study uses Markov Chains for analysis, confirming theoretical and simulation results on profitability thresholds.",
            "n_threads": 11,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "zawy",
                "ajtowns",
                "sipa"
            ],
            "file_path": "static/delvingbitcoin/June_2025/5233_Where-does-the-33-33-threshold-for-selfish-mining-come-from-.xml",
            "combined_summ_file_path": "static/delvingbitcoin/June_2025/combined_Where-does-the-33-33-threshold-for-selfish-mining-come-from-.xml"
        },
        {
            "id": "5907",
            "title": "Response to Pieter Wuille's StackExchange Answer Re: Nuking the Opreturn Filter",
            "link": "https://delvingbitcoin.org/t/response-to-pieter-wuilles-stackexchange-answer-re-nuking-the-opreturn-filter/1991/2",
            "authors": [
                "mechanic"
            ],
            "published_at": "2025-09-17T17:50:38.543000+00:00",
            "summary": "- Bitcoin's fee estimation process is complex and uncertain due to miner unpredictability.\n- Efforts to standardize mempools may increase vulnerability to censorship and centralization.\n- A shift towards network-wide heuristics is urged, embracing the inherent uncertainties in transaction processes.",
            "n_threads": 9,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "AdamISZ",
                "cguida",
                "ismaelsadeeq"
            ],
            "file_path": "static/delvingbitcoin/Sept_2025/5907_Response-to-Pieter-Wuille-s-StackExchange-Answer-Re-Nuking-the-Opreturn-Filter.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Sept_2025/combined_Response-to-Pieter-Wuille-s-StackExchange-Answer-Re-Nuking-the-Opreturn-Filter.xml"
        }
    ],
    "today_in_history_posts": [
        {
            "id": "016448",
            "title": "Request: OP_CHECKTXOUTSCRIPTHASHVERIFY",
            "link": "https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-October/016448.html",
            "authors": [
                "kim juan"
            ],
            "published_at": "2018-10-17T04:26:34+00:00",
            "summary": "- A new Bitcoin opcode, OP_CHECKTXOUTSCRIPTHASHVERIFY, enhances transaction security by enforcing predefined spending.\n- It introduces a dual key system, mitigating risks even if the primary key is compromised.\n- Despite potential privacy concerns, this opcode could notably deter attacks and secure transactions.",
            "n_threads": 7,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "ZmnSCPxj",
                "[bitcoin-dev] Request: OP_CHECKTXOUTSCRIPTHASHVERIFY kim juan"
            ],
            "file_path": "static/bitcoin-dev/Oct_2018/016448_Request-OP-CHECKTXOUTSCRIPTHASHVERIFY.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Oct_2018/combined_Request-OP-CHECKTXOUTSCRIPTHASHVERIFY.xml"
        },
        {
            "id": "001425",
            "title": "RouteBoost: Adding 'r=' fields to BOLT 11 invoices to flag capacity",
            "link": "https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001425.html",
            "authors": [
                "Pierre"
            ],
            "published_at": "2018-10-04T12:01:55+00:00",
            "summary": "- Rusty Russell proposed adding an 'r' field to invoices in c-lightning for better routing.\n- The 'r' field aims to improve payment routing by using weighted probability across peers.\n- ACINQ supported the idea, revealing they had conceived it two months earlier.",
            "n_threads": 14,
            "dev_name": "lightning-dev",
            "contributors": [
                "Rusty Russell",
                "Johan Tor\u00e5s Halseth",
                "Olaoluwa Osuntokun",
                "Christian Decker",
                "M",
                "ZmnSCPxj"
            ],
            "file_path": "static/lightning-dev/Oct_2018/001425_RouteBoost-Adding-r-fields-to-BOLT-11-invoices-to-flag-capacity.xml",
            "combined_summ_file_path": "static/lightning-dev/Oct_2018/combined_RouteBoost-Adding-r-fields-to-BOLT-11-invoices-to-flag-capacity.xml"
        },
        {
            "id": "3315",
            "title": "Non-disclosure of a consensus bug in btcd",
            "link": "https://delvingbitcoin.org/t/non-disclosure-of-a-consensus-bug-in-btcd/1177",
            "authors": [
                "AntoineP"
            ],
            "published_at": "2024-10-03T14:19:37.759000+00:00",
            "summary": "- In March 2024, a btcd consensus bug was found and fixed in version 0.24.2.\n- The authors stress the need for transparency and timely public disclosures of vulnerabilities.\n- Despite minimal network impact, 16 nodes remain at risk, urging immediate upgrades.",
            "n_threads": 7,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "ajtowns",
                "ariard",
                "josibake",
                "real-or-random",
                "roasbeef"
            ],
            "file_path": "static/delvingbitcoin/Oct_2024/3315_Non-disclosure-of-a-consensus-bug-in-btcd.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Oct_2024/combined_Non-disclosure-of-a-consensus-bug-in-btcd.xml"
        }
    ]
}