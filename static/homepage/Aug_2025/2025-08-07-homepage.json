{
    "header_summary": "Christopher Allen's announcement regarding Blockchain Commons' efforts to integrate FROST signing with Bitcoin transactions signifies a notable advancement in enhancing Bitcoin's resilience and efficiency in multisignature processes. The forthcoming demonstration at the Gordian meeting will not only spotlight this integration but also delve into the architectural and security nuances necessitated by FROST signatures' incorporation with Bitcoin's Taproot. This initiative underscores Blockchain Commons' dedication to fostering innovation within the Bitcoin ecosystem and their commitment to education, aiming to extend their \"Learning Bitcoin From the Command Line\" course to include FROST and BDK technologies, thereby promoting broader developer engagement and adoption. [Source](https://gnusha.org/pi/bitcoindev/CACrqygC5925FrJ5WN=986Bni5+0zZ7YeC_EqAXyao=u5rK3P_A@mail.gmail.com/T/#u#m9cde5186fa3252c00d5051a72924b5931f416660)\n\nSanket1729 discusses an innovative shift in SimplicityHL programming model through the potential use of a custom sighash implementation, enabling deferred program commitment decisions until signing via a mechanism termed *delegation*. Despite the theoretical groundwork laid out for incorporating a more adaptable sighash-based check into SimplicityHL, practical implementation remains unexplored, hinting at the possibility of enhancing the programming model's utility and versatility. [Source](https://delvingbitcoin.org/t/writing-simplicity-programs-with-simplicityhl/1900/3)\n\nGarlonicon's exploration into the challenges of implementing cryptocurrency ownership restrictions highlights the impracticality and potential counterproductivity of such measures. Drawing parallels with real-world regulatory circumventions, the discussion points to the fundamental difficulties and trust issues that would arise from enforcing ownership limits through mechanisms like a hard fork, suggesting that such attempts could ultimately undermine the foundational principles and reliability of cryptocurrencies. [Source](https://delvingbitcoin.org/t/solutions-for-this-new-centralization-inside-bitcoin/1907/2)\n\nRoconnor-blockstream's elaboration on the activation of Simplicity on the Liquid Network delves into the nuanced requirements of programming language design for Bitcoin's transaction validation. The discussion emphasizes the importance of compact, efficient programming and outlines the core composition techniques \u2014 sequential, parallel, and conditional composition \u2014 that are instrumental in navigating the constraints of blockchain technology. This advancement marks a significant step in refining blockchain programming paradigms, highlighting Simplicity's potential to facilitate a broader range of operations within these constraints. [Source](https://delvingbitcoin.org/t/delving-simplicity-part-three-fundamental-ways-of-combining-computations/1902)",
    "recent_posts": [
        {
            "id": "m9cde5186fa3252c00d5051a72924b5931f416660",
            "title": "[ann] FROST Signing for Bitcoin: Demo + Taproot Integration Discussion @ Aug 6 Gordian Call",
            "link": "https://gnusha.org/pi/bitcoindev/CACrqygC5925FrJ5WN=986Bni5+0zZ7YeC_EqAXyao=u5rK3P_A@mail.gmail.com/T/#u#m9cde5186fa3252c00d5051a72924b5931f416660",
            "authors": [
                "Christopher Allen"
            ],
            "published_at": "2025-07-31T01:52:00+00:00",
            "summary": "- Blockchain Commons leads in FROST integration for Bitcoin, enhancing resilience and efficiency.\n- An upcoming Gordian meeting will demonstrate FROST's integration, aiming for community input on challenges.\n- Educational efforts extend to FROST and BDK technologies, with resources for developers available online.",
            "n_threads": 0,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/July_2025/m9cde5186fa3252c00d5051a72924b5931f416660_-ann-FROST-Signing-for-Bitcoin-Demo-Taproot-Integration-Discussion-Aug-6-Gordian-Call.xml",
            "combined_summ_file_path": ""
        },
        {
            "id": "5667",
            "title": "Writing Simplicity Programs with SimplicityHL",
            "link": "https://delvingbitcoin.org/t/writing-simplicity-programs-with-simplicityhl/1900/3",
            "authors": [
                "sanket1729"
            ],
            "published_at": "2025-08-06T22:37:56.383000+00:00",
            "summary": "- The email discusses an innovative approach in SimplicityHL programming model.\n- It introduces a custom sighash implementation for deferred program commitment.\n- Despite feasibility, this approach remains unexplored in practical applications.",
            "n_threads": 2,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "niftynei"
            ],
            "file_path": "static/delvingbitcoin/Aug_2025/5667_Writing-Simplicity-Programs-with-SimplicityHL.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Aug_2025/combined_Writing-Simplicity-Programs-with-SimplicityHL.xml"
        },
        {
            "id": "5656",
            "title": "Solutions for this new centralization INSIDE Bitcoin?",
            "link": "https://delvingbitcoin.org/t/solutions-for-this-new-centralization-inside-bitcoin/1907/2",
            "authors": [
                "garlonicon"
            ],
            "published_at": "2025-08-06T06:01:50.120000+00:00",
            "summary": "- The discourse evaluates challenges in limiting cryptocurrency ownership to prevent \"whale\" dominance.\n- It highlights how easily individuals can circumvent regulatory measures, comparing to SIM card and travel restrictions.\n- The conversation questions the impact of hard-forks and technical efforts on cryptocurrency trust and distribution.",
            "n_threads": 1,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "davidtaubmann"
            ],
            "file_path": "static/delvingbitcoin/Aug_2025/5656_Solutions-for-this-new-centralization-INSIDE-Bitcoin-.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Aug_2025/combined_Solutions-for-this-new-centralization-INSIDE-Bitcoin-.xml"
        },
        {
            "id": "5647",
            "title": "Delving Simplicity Part \u2160: Three Fundamental Ways of Combining Computations",
            "link": "https://delvingbitcoin.org/t/delving-simplicity-part-three-fundamental-ways-of-combining-computations/1902",
            "authors": [
                "roconnor-blockstream"
            ],
            "published_at": "2025-08-05T14:41:08.061000+00:00",
            "summary": "- Simplicity's activation on Liquid Network tackles Bitcoin programming challenges with unique language design.\n- It introduces compact programs using sequential, parallel, and conditional composition methods for Bitcoin transactions.\n- Aims for a comprehensive language within blockchain constraints, excluding recursive composition for efficiency and predictability.",
            "n_threads": 0,
            "dev_name": "delvingbitcoin",
            "contributors": [],
            "file_path": "static/delvingbitcoin/Aug_2025/5647_Delving-Simplicity-Part-Three-Fundamental-Ways-of-Combining-Computations.xml",
            "combined_summ_file_path": ""
        }
    ],
    "active_posts": [
        {
            "id": "m33a098d6f38bd6c79f650854f7b40996d8799ede",
            "title": "A Taproot-native (re-)bindable transaction bundle proposal",
            "link": "https://gnusha.org/pi/bitcoindev/CAKwYL5GjrOp5QbwMF+vS6dDYPjc7tBNPAZsqVBzb1DcY_h4FpQ@mail.gmail.com/T/#m33a098d6f38bd6c79f650854f7b40996d8799ede",
            "authors": [
                "Greg Sanders"
            ],
            "published_at": "2025-07-09T18:19:00+00:00",
            "summary": "- Antoine Poinsot, Steven Roose, and Greg Sanders developed a Bitcoin technical proposal.\n- The proposal introduces `OP_TEMPLATEHASH` to enhance Bitcoin's capabilities including transaction and signature verification.\n- Their work, documented in BIPs and GitHub, aims to make Bitcoin's infrastructure more efficient and secure.",
            "n_threads": 17,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Antoine Poinsot",
                "James OBeirne",
                "Peter Todd",
                "Rijndael",
                "/dev /fd0",
                "Ademan",
                "Brandon Black",
                "Garlo Nicon",
                "Greg Maxwell",
                "Murch",
                "Sjors Provoost"
            ],
            "file_path": "static/bitcoin-dev/July_2025/m33a098d6f38bd6c79f650854f7b40996d8799ede_A-Taproot-native-re-bindable-transaction-bundle-proposal.xml",
            "combined_summ_file_path": "static/bitcoin-dev/July_2025/combined_A-Taproot-native-re-bindable-transaction-bundle-proposal.xml"
        },
        {
            "id": "mfc6aaf4d0686c1b0a34e9e7eea325a94f6986fa3",
            "title": "[BIP Proposal] Utreexo Nodes",
            "link": "https://gnusha.org/pi/bitcoindev/3452b63c-ff2b-4dd9-90ee-83fd9cedcf4an@googlegroups.com/T/#u#mfc6aaf4d0686c1b0a34e9e7eea325a94f6986fa3",
            "authors": [
                "Calvin Kim"
            ],
            "published_at": "2025-07-29T23:20:00+00:00",
            "summary": "- Tadge Dryja, Davidson Souza, and Calvin Kim propose three BIPs aimed at Bitcoin's scalability.\n- Their proposals introduce Utreexo for efficient transaction verification without a full UTXO set.\n- They seek community feedback on the proposals, accessible for review on GitHub.",
            "n_threads": 3,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Javier Mateos",
                "K Calvin",
                "Murch"
            ],
            "file_path": "static/bitcoin-dev/July_2025/mfc6aaf4d0686c1b0a34e9e7eea325a94f6986fa3_-BIP-Proposal-Utreexo-Nodes.xml",
            "combined_summ_file_path": "static/bitcoin-dev/July_2025/combined_-BIP-Proposal-Utreexo-Nodes.xml"
        },
        {
            "id": "m92bcdcb0b0b26ea0138d2e09b8c1d2bbbc3eccb3",
            "title": "Taproot is post-quantum secure when restricted to script-path spends",
            "link": "https://gnusha.org/pi/bitcoindev/bee6b897379b9ae0c3d48f53d40a6d70fe7915f0.camel@real-or-random.org/T/#u#m92bcdcb0b0b26ea0138d2e09b8c1d2bbbc3eccb3",
            "authors": [
                "Tim Ruffing"
            ],
            "published_at": "2025-07-23T11:03:00+00:00",
            "summary": "- A study highlights the post-quantum security of Bitcoin's Taproot, showing quantum attacks can't reveal unexpected Merkle roots.\n- It suggests a two-phase softfork for Bitcoin, incorporating post-quantum signatures, validated by the research's findings.\n- Despite quantum threats, the current security level of Taproot is deemed adequate, with more concern placed on classical computing advancements.",
            "n_threads": 2,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Ethan Heilman",
                "Maxim Orlovsky"
            ],
            "file_path": "static/bitcoin-dev/July_2025/m92bcdcb0b0b26ea0138d2e09b8c1d2bbbc3eccb3_Taproot-is-post-quantum-secure-when-restricted-to-script-path-spends.xml",
            "combined_summ_file_path": "static/bitcoin-dev/July_2025/combined_Taproot-is-post-quantum-secure-when-restricted-to-script-path-spends.xml"
        },
        {
            "id": "2911",
            "title": "Stats on compact block reconstructions",
            "link": "https://delvingbitcoin.org/t/stats-on-compact-block-reconstructions/1052",
            "authors": [
                "0xB10C"
            ],
            "published_at": "2024-08-02T11:58:02.413000+00:00",
            "summary": "- Investigation shows insights on Bitcoin block reconstructions' efficiency via `debug=cmpctblock`.\n- Node adjustments, like `dave` increasing connections, impact block reconstruction processes and outcomes.\n- Periods of high mempool activity correlate with decreased additional transaction requests for reconstructions.",
            "n_threads": 33,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "ajtowns",
                "Crypt-iQ",
                "davidgumberg",
                "instagibbs",
                "andrewtoth",
                "gmaxwell",
                "jungly",
                "sipa",
                "glozow",
                "ismaelsadeeq"
            ],
            "file_path": "static/delvingbitcoin/Aug_2024/2911_Stats-on-compact-block-reconstructions.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Aug_2024/combined_Stats-on-compact-block-reconstructions.xml"
        },
        {
            "id": "4805",
            "title": "A simple backup scheme for wallet accounts",
            "link": "https://delvingbitcoin.org/t/a-simple-backup-scheme-for-wallet-accounts/1607/2",
            "authors": [
                "reardencode"
            ],
            "published_at": "2025-04-16T13:52:53.883000+00:00",
            "summary": "- Josh's method is distinct in inscription and location attributes.\n- Standardizing Salvatore's method before adding Josh's unique aspects is suggested.\n- Combining both methods aims to create a comprehensive solution.",
            "n_threads": 26,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "salvatoshi",
                "sjors",
                "josh",
                "kloaec",
                "pyth",
                "1440000bytes",
                "dr-orlovsky",
                "jdlcdl",
                "securitybrahh"
            ],
            "file_path": "static/delvingbitcoin/April_2025/4805_A-simple-backup-scheme-for-wallet-accounts.xml",
            "combined_summ_file_path": "static/delvingbitcoin/April_2025/combined_A-simple-backup-scheme-for-wallet-accounts.xml"
        },
        {
            "id": "5425",
            "title": "Exploring Extended Relative Timelocks",
            "link": "https://delvingbitcoin.org/t/exploring-extended-relative-timelocks/1818",
            "authors": [
                "pyth"
            ],
            "published_at": "2025-07-10T04:50:02.872000+00:00",
            "summary": "- Discussion on extending Bitcoin timelocks to ~10 years initiated by user feedback.\n- Proposed method involves adjusting `nSequence` field to use bit 21 for longer timelocks.\n- Tool and code modification developed for experimental use, with feedback sought on implementation.",
            "n_threads": 23,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "stevenroose",
                "scgbckbone",
                "kloaec",
                "sjors",
                "AntoineP",
                "chris",
                "fjahr",
                "rafael"
            ],
            "file_path": "static/delvingbitcoin/July_2025/5425_Exploring-Extended-Relative-Timelocks.xml",
            "combined_summ_file_path": "static/delvingbitcoin/July_2025/combined_Exploring-Extended-Relative-Timelocks.xml"
        }
    ],
    "today_in_history_posts": [
        {
            "id": "010198",
            "title": "[BIP-draft] CHECKSEQUENCEVERIFY - An opcode for relative locktime",
            "link": "https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010198.html",
            "authors": [
                "Btc Drak"
            ],
            "published_at": "2015-08-13T11:06:44+00:00",
            "summary": "- BIP XX CHECKSEQUENCEVERIFY introduces a new opcode restricting script execution by output age.\n- It features a mechanism for automatic escrow timeout and suggests deployment via a double-threshold switchover.\n- Credit for applying sequence numbers for relative lock-time is attributed to Mark Friedenbach.",
            "n_threads": 33,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Mark Friedenbach",
                "Johnson Lau",
                "Jorge Tim\u00f3n",
                "Rusty Russell",
                "Greg Maxwell",
                "Joseph Poon",
                "David Harding",
                "Eric Lombrozo",
                "M",
                "Peter Todd",
                "Tier Nolan",
                "Tom Harding"
            ],
            "file_path": "static/bitcoin-dev/Aug_2015/010198_-BIP-draft-CHECKSEQUENCEVERIFY-An-opcode-for-relative-locktime.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Aug_2015/combined_-BIP-draft-CHECKSEQUENCEVERIFY-An-opcode-for-relative-locktime.xml"
        },
        {
            "id": "000127",
            "title": "Pure No-Trust Solution using only OP_CLTV",
            "link": "https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000127.html",
            "authors": [
                "M"
            ],
            "published_at": "2015-08-13T18:37:18+00:00",
            "summary": "- The Thunder proposal integrates OP_CLTV and CSV to solve malleability and improve channel design.\n- Refund efficiency is increased by incorporating refunds into opening transactions, eliminating risk.\n- Innovations allow for simpler implementation, addressing HTLC revocability and ensuring payment security.",
            "n_threads": 5,
            "dev_name": "lightning-dev",
            "contributors": [
                "Btc Drak",
                "Joseph Poon",
                "Rusty Russell"
            ],
            "file_path": "static/lightning-dev/Aug_2015/000127_Pure-No-Trust-Solution-using-only-OP-CLTV.xml",
            "combined_summ_file_path": "static/lightning-dev/Aug_2015/combined_Pure-No-Trust-Solution-using-only-OP-CLTV.xml"
        },
        {
            "id": "2932",
            "title": "Zawy\u2019s Alternating Timestamp Attack",
            "link": "https://delvingbitcoin.org/t/zawy-s-alternating-timestamp-attack/1062",
            "authors": [
                "murch"
            ],
            "published_at": "2024-08-09T14:21:27.879000+00:00",
            "summary": "- Zawy's attack exploits Bitcoin Testnet by manipulating block timestamps to reduce mining difficulty.\n- It accelerates block production by alternating future and past timestamps, diverging from previous attacks.\n- Proposed mitigation includes a softfork to enforce consistent timestamp increases, preventing network destabilization.",
            "n_threads": 27,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "zawy",
                "sipa",
                "sjors",
                "AntoineP",
                "MentalNomad",
                "harding"
            ],
            "file_path": "static/delvingbitcoin/Aug_2024/2932_Zawy-s-Alternating-Timestamp-Attack.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Aug_2024/combined_Zawy-s-Alternating-Timestamp-Attack.xml"
        }
    ]
}