{
    "header_summary": "Ethan Heilman et al. have developed a novel method for constructing and spending Bitcoin covenants using Tapscript, without the need for soft forks. This technique, although computationally intensive, enables the creation of covenants with ease but requires significant resources to spend, hinting at the potential necessity for specialized ASICs for practical deployment. The approach also allows for arbitrary computation within Bitcoin transactions, potentially making them quantum-resistant through the use of Lamport signatures, and introduces a function, dGen, to optimize script validation, pushing the boundaries of Bitcoin's scripting capabilities without exceeding the 4MB transaction limit ([Read more](https://colliderscript.co/colliderscript.pdf)).\n\nAntoine Poinsot highlights the release of security advisories for Bitcoin Core, iterating the project's dedication to transparent and responsible disclosure of vulnerabilities. The move is part of Bitcoin Core's ongoing effort to enhance security protocols, with all details and future advisories accessible on their official website, encouraging community engagement and review ([Security advisories](https://bitcoincore.org/en/2024/11/05/cb-stall-hindering-propagation)).\n\nAdam Borcany introduces an innovative method for creating proof-of-work (PoW) locked Bitcoin outputs that allow for granular difficulty adjustments beyond current signature grinding techniques. This method utilizes a fixed set of signatures, short nonces, and specific private keys to adjust difficulty, providing a more flexible and efficient approach to secure Bitcoin transactions against unauthorized changes. A Node.JS application showcases the practical application of this concept, marking a significant advancement in Bitcoin transaction security ([Explore the method](https://gnusha.org/pi/bitcoindev/CAOY=fzk-ksDGT_oyCKF=EJnnXaXoCbfCzxW+9PBQV=us-K=PuQ@mail.gmail.com/T/#u#m6466fc7480c6cde4dc938a788051920242c7231c)).\n\nLastly, ZmnSCPxj proposes the SuperScalar mechanism as a solution to the Lightning Network's LSP Last-Mile Problem, offering a nuanced approach to liquidity provisioning, scalability, and security without blockchain consensus changes. This construction utilizes Decker-Wattenhofer channel factories, timeout trees, pseudo-Spilman leaves, and laddering to ensure a decentralized, secure, and scalable system for managing liquidity, emphasizing the importance of aligning LSP incentives with network integrity ([SuperScalar details](https://delvingbitcoin.org/t/superscalar-laddered-timeout-tree-structured-decker-wattenhofer-factories-with-pseudo-spilman-leaves/1242)).",
    "recent_posts": [
        {
            "id": "m22239cd0ba6fec6bb835522be315d50496fefa1c",
            "title": "ColliderScript: Covenants in Bitcoin via 160-bit hash collisions",
            "link": "https://gnusha.org/pi/bitcoindev/CAEM=y+W2jyFoJAq9XrE9whQ7EZG4HRST01TucWHJtBhQiRTSNQ@mail.gmail.com/T/#u#m22239cd0ba6fec6bb835522be315d50496fefa1c",
            "authors": [
                "Ethan Heilman"
            ],
            "published_at": "2024-11-07T17:44:00+00:00",
            "summary": "- The team introduced a novel Bitcoin covenant creation method without requiring soft forks.\n- This method demands significant computational effort, more so than current Bitcoin mining.\n- It offers potential for quantum-resistant transactions and enhances Bitcoin's scripting capabilities.",
            "n_threads": 0,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/Nov_2024/m22239cd0ba6fec6bb835522be315d50496fefa1c_ColliderScript-Covenants-in-Bitcoin-via-160-bit-hash-collisions.xml",
            "combined_summ_file_path": ""
        },
        {
            "id": "m1bab216dee18c20e39cbf90f1261a736c18cd3a1",
            "title": "Public disclosure of one vulnerability affecting Bitcoin Core <26.0",
            "link": "https://gnusha.org/pi/bitcoindev/uJpfg8UeMOfVUATG4YRiGmyz5MALtZq68FCBXA6PT-BNstodivpqQfDxD1JAv5Qny_vuNr-A1m8jIDNHQLhAQt8hj8Ee9OT6ZFE5Z16O97A=@protonmail.com/T/#u#m1bab216dee18c20e39cbf90f1261a736c18cd3a1",
            "authors": [
                "Antoine Poinsot"
            ],
            "published_at": "2024-11-05T16:00:00+00:00",
            "summary": "- Latest Bitcoin Core security advisories are released on their official website.\n- The advisories detail past issues and can be reviewed at [https://bitcoincore.org/en/2024/11/05/cb-stall-hindering-propagation].\n- Bitcoin Core commits to transparency with a detailed disclosure policy for new vulnerabilities.",
            "n_threads": 0,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/Nov_2024/m1bab216dee18c20e39cbf90f1261a736c18cd3a1_Public-disclosure-of-one-vulnerability-affecting-Bitcoin-Core-26-0.xml",
            "combined_summ_file_path": ""
        },
        {
            "id": "m6466fc7480c6cde4dc938a788051920242c7231c",
            "title": "Bitcoin PoW locked outputs with arbitrary difficulty",
            "link": "https://gnusha.org/pi/bitcoindev/CAOY=fzk-ksDGT_oyCKF=EJnnXaXoCbfCzxW+9PBQV=us-K=PuQ@mail.gmail.com/T/#u#m6466fc7480c6cde4dc938a788051920242c7231c",
            "authors": [
                "Adam Borcany"
            ],
            "published_at": "2024-11-04T15:34:00+00:00",
            "summary": "- A novel approach enhances Bitcoin transaction security by refining proof-of-work difficulty adjustment.\n- The method employs a unique combination of signatures, nonces, and private keys, avoiding traditional limitations.\n- It introduces a more precise difficulty adjustment for PoW-locked outputs, improving scalability and adaptability.",
            "n_threads": 0,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/Nov_2024/m6466fc7480c6cde4dc938a788051920242c7231c_Bitcoin-PoW-locked-outputs-with-arbitrary-difficulty.xml",
            "combined_summ_file_path": ""
        },
        {
            "id": "3494",
            "title": "Empirical Data Analysis of Fee Rate Forecasters for ASAP (next-block) Fee Estimation",
            "link": "https://delvingbitcoin.org/t/empirical-data-analysis-of-fee-rate-forecasters-for-asap-next-block-fee-estimation/1022/2",
            "authors": [
                "murch"
            ],
            "published_at": "2024-11-06T19:16:16.740000+00:00",
            "summary": "- The discussion introduces a Smart Mempool-Based Forecaster to predict next block transactions.\n- It questions prioritizing transactions based on confirmation status over recentness.\n- Suggests using transactions from the last 10 minutes might improve block creation efficiency.",
            "n_threads": 1,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "ismaelsadeeq"
            ],
            "file_path": "static/delvingbitcoin/Nov_2024/3494_Empirical-Data-Analysis-of-Fee-Rate-Forecasters-for-ASAP-next-block-Fee-Estimation.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Nov_2024/combined_Empirical-Data-Analysis-of-Fee-Rate-Forecasters-for-ASAP-next-block-Fee-Estimation.xml"
        },
        {
            "id": "3490",
            "title": "Research Paper on LN Payment Censorship",
            "link": "https://delvingbitcoin.org/t/research-paper-on-ln-payment-censorship/1248",
            "authors": [
                "cndolo"
            ],
            "published_at": "2024-11-05T11:57:11.703000+00:00",
            "summary": "- Significant findings reveal Lightning Network's vulnerability to censorship by network-level adversaries.\n- Research shows the network's structure allows centralized entities to potentially disrupt payments discreetly.\n- Mitigation strategies include using Tor, adaptive padding techniques, and modifying pathfinding algorithms.",
            "n_threads": 0,
            "dev_name": "delvingbitcoin",
            "contributors": [],
            "file_path": "static/delvingbitcoin/Nov_2024/3490_Research-Paper-on-LN-Payment-Censorship.xml",
            "combined_summ_file_path": ""
        },
        {
            "id": "3469",
            "title": "SuperScalar: Laddered Timeout-Tree-Structured Decker-Wattenhofer Factories With Pseudo-Spilman Leaves",
            "link": "https://delvingbitcoin.org/t/superscalar-laddered-timeout-tree-structured-decker-wattenhofer-factories-with-pseudo-spilman-leaves/1242",
            "authors": [
                "ZmnSCPxj"
            ],
            "published_at": "2024-11-04T15:40:11.090000+00:00",
            "summary": "- SuperScalar aims to resolve Bitcoin Lightning Network's Last-Mile Problem without blockchain consensus changes.\n- It uses Decker-Wattenhofer channel factories and laddering for secure, scalable liquidity provisioning.\n- The mechanism protects against fund theft and old state poisoning, ensuring security and incentive alignment.",
            "n_threads": 0,
            "dev_name": "delvingbitcoin",
            "contributors": [],
            "file_path": "static/delvingbitcoin/Nov_2024/3469_SuperScalar-Laddered-Timeout-Tree-Structured-Decker-Wattenhofer-Factories-With-Pseudo-Spilman-Leaves.xml",
            "combined_summ_file_path": ""
        }
    ],
    "active_posts": [
        {
            "id": "mb513065fc5985f1a474e7537ca7720288d8f9579",
            "title": "libsecp256k1 v0.6.0 released",
            "link": "https://gnusha.org/pi/bitcoindev/f96dfed1-4185-42c2-ae71-738255da005e@gmail.com/T/#u#mb513065fc5985f1a474e7537ca7720288d8f9579",
            "authors": [
                "Jonas Nick"
            ],
            "published_at": "2024-11-04T17:45:00+00:00",
            "summary": "- The latest libsecp256k1 version 0.6.0 features important updates and a MuSig2 module.\n- Enhanced security measures include a robust method for clearing stack secrets.\n- Unused secp256k1_scratch_space functions were removed, streamlining the library.",
            "n_threads": 0,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/Nov_2024/mb513065fc5985f1a474e7537ca7720288d8f9579_libsecp256k1-v0-6-0-released.xml",
            "combined_summ_file_path": ""
        },
        {
            "id": "m0927acdfbd44f01a5509d914c9d12e44f95fe033",
            "title": "File Format for Wallet Inheritance and Recovery",
            "link": "https://gnusha.org/pi/bitcoindev/4c51d18b-2444-4939-8f12-d0abe6d11e20n@googlegroups.com/T/#u#m0927acdfbd44f01a5509d914c9d12e44f95fe033",
            "authors": [
                "Robert Netzke"
            ],
            "published_at": "2024-11-04T18:29:00+00:00",
            "summary": "- The proposal introduces a format for easier descriptor-based wallet inheritance and interoperability.\n- A reference implementation in Rust aims to facilitate file reading/writing simplicity for developers.\n- Feedback is sought to refine this approach, enhancing wallet data management and recovery.",
            "n_threads": 0,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/Nov_2024/m0927acdfbd44f01a5509d914c9d12e44f95fe033_File-Format-for-Wallet-Inheritance-and-Recovery.xml",
            "combined_summ_file_path": ""
        },
        {
            "id": "mdabc1118c9d2fe5e0e777e50d77308aa3fab2c41",
            "title": "Bitcoin Core 27.2 released",
            "link": "https://gnusha.org/pi/bitcoindev/CAFyhPjWx0qSuBgBqboxWwWjkFZPbsWrEx8sW0Me8=kXQRppbbg@mail.gmail.com/T/#u#mdabc1118c9d2fe5e0e777e50d77308aa3fab2c41",
            "authors": [
                "Michael Ford"
            ],
            "published_at": "2024-11-04T13:06:00+00:00",
            "summary": "- Bitcoin Core version 27.2 has been released, featuring bug fixes and performance enhancements.\n- The update is compatible with multiple operating systems, focusing on Linux, macOS, and Windows.\n- Significant changes include P2P improvements, initialization fixes, and building adjustments.",
            "n_threads": 0,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/Nov_2024/mdabc1118c9d2fe5e0e777e50d77308aa3fab2c41_Bitcoin-Core-27-2-released.xml",
            "combined_summ_file_path": ""
        },
        {
            "id": "1996",
            "title": "Great Consensus Cleanup Revival",
            "link": "https://delvingbitcoin.org/t/great-consensus-cleanup-revival/710",
            "authors": [
                "AntoineP"
            ],
            "published_at": "2024-03-24T19:53:27.073000+00:00",
            "summary": "- The proposal examines Bitcoin's vulnerabilities, suggesting improvements for network security and performance.\n- It includes fixing the timewarp exploit and crafting constraints on legacy transactions to enhance efficiency.\n- Community collaboration is encouraged to fix bugs and contentious suggestions, like reducing block size, spark debate.",
            "n_threads": 49,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "ajtowns",
                "evoskuil",
                "David Harding",
                "sjors",
                "MattCorallo",
                "recent798",
                "1440000bytes",
                "ariard",
                "benthecarman",
                "kcalvinalvin",
                "plebhash"
            ],
            "file_path": "static/delvingbitcoin/March_2024/1996_Great-Consensus-Cleanup-Revival.xml",
            "combined_summ_file_path": "static/delvingbitcoin/March_2024/combined_Great-Consensus-Cleanup-Revival.xml"
        },
        {
            "id": "3432",
            "title": "Libbitcoin for Core people",
            "link": "https://delvingbitcoin.org/t/libbitcoin-for-core-people/1222",
            "authors": [
                "AntoineP"
            ],
            "published_at": "2024-10-28T19:09:55.723000+00:00",
            "summary": "- Eric Voskuil showcased Libbitcoin's IBD being up to 15 times faster than Bitcoin Core.\n- Libbitcoin utilizes an event-based system and a relational database for efficiency.\n- The system's design allows for parallel processing and simplified reorganization, enhancing speed.",
            "n_threads": 10,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "josibake",
                "andrewtoth",
                "evoskuil",
                "instagibbs"
            ],
            "file_path": "static/delvingbitcoin/Oct_2024/3432_Libbitcoin-for-Core-people.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Oct_2024/combined_Libbitcoin-for-Core-people.xml"
        },
        {
            "id": "3457",
            "title": "A Fast, Scalable Protocol For Resolving Lightning Payments",
            "link": "https://delvingbitcoin.org/t/a-fast-scalable-protocol-for-resolving-lightning-payments/1233",
            "authors": [
                "JohnLaw"
            ],
            "published_at": "2024-10-31T22:50:15.637000+00:00",
            "summary": "- The OPR protocol ensures rapid, off-chain resolution of Lightning payments, improving efficiency and security.\n- It introduces a novel mechanism to deter dishonesty, enhancing trustworthiness through a griefer-penalized system.\n- The protocol aims to make the Lightning Network more scalable and accessible, supporting small transactions without on-chain fees.",
            "n_threads": 5,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "harding",
                "morehouse"
            ],
            "file_path": "static/delvingbitcoin/Oct_2024/3457_A-Fast-Scalable-Protocol-For-Resolving-Lightning-Payments.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Oct_2024/combined_A-Fast-Scalable-Protocol-For-Resolving-Lightning-Payments.xml"
        }
    ],
    "today_in_history_posts": [
        {
            "id": "015292",
            "title": "Making OP_CODESEPARATOR and FindAndDelete in non-segwit scripts non-standard",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-November/015292.html",
            "authors": [
                "Johnson Lau"
            ],
            "published_at": "2017-11-15T18:02:48+00:00",
            "summary": "- Johnson Lau proposes disabling OP_CODESEPARATOR and FindAndDelete in non-segwit scripts.\n- FindAndDelete is seen as unnecessary and complex, only used in rare cases.\n- A softfork could eventually remove these functions entirely from consensus code.",
            "n_threads": 5,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "M",
                "Mark Friedenbach",
                "Sjors Provoost"
            ],
            "file_path": "static/bitcoin-dev/Nov_2017/015292_Making-OP-CODESEPARATOR-and-FindAndDelete-in-non-segwit-scripts-non-standard.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Nov_2017/combined_Making-OP-CODESEPARATOR-and-FindAndDelete-in-non-segwit-scripts-non-standard.xml"
        },
        {
            "id": "000774",
            "title": "(no subject)",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-November/000774.html",
            "authors": [
                "Mark Botley"
            ],
            "published_at": "2017-11-09T08:22:10+00:00",
            "summary": "- Mark Botley mentioned a technical glitch in the email system.\n- He requested more information or context for summary generation.\n- No specific context was provided in the original message.",
            "n_threads": 10,
            "dev_name": "lightning-dev",
            "contributors": [
                "Nongluck Loyha",
                "Chris Malloy",
                "D",
                "Victor Umobi"
            ],
            "file_path": "static/lightning-dev/Nov_2017/000774_-no-subject-.xml",
            "combined_summ_file_path": "static/lightning-dev/Nov_2017/combined_-no-subject-.xml"
        },
        {
            "id": "342",
            "title": "Batched Splicing Considered Risky",
            "link": "https://delvingbitcoin.org/t/batched-splicing-considered-risky/170",
            "authors": [
                "ZmnSCPxj"
            ],
            "published_at": "2023-11-08T20:33:13.829000+00:00",
            "summary": "- Splicing on the Lightning Network increases batching efficiency but faces security risks.\n- Malicious actors can disrupt splicing transactions, impacting all involved parties negatively.\n- Solutions like `SIGHASH_ANYPREVOUT` mitigate risks but complicate operations and trust.",
            "n_threads": 10,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "ajtowns",
                "Greg Sanders",
                "t-bast"
            ],
            "file_path": "static/delvingbitcoin/Nov_2023/342_Batched-Splicing-Considered-Risky.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Nov_2023/combined_Batched-Splicing-Considered-Risky.xml"
        }
    ]
}