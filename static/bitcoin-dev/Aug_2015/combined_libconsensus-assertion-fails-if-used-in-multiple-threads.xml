<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - libconsensus assertion fails if used in multiple threads</title>
  <updated>2025-10-17T02:34:04.952345+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Aug_2015/010377_libconsensus-assertion-fails-if-used-in-multiple-threads.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010365_libconsensus-assertion-fails-if-used-in-multiple-threads.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010363_libconsensus-assertion-fails-if-used-in-multiple-threads.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010359_libconsensus-assertion-fails-if-used-in-multiple-threads.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010351_libconsensus-assertion-fails-if-used-in-multiple-threads.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010222_libconsensus-assertion-fails-if-used-in-multiple-threads.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2015/010219_libconsensus-assertion-fails-if-used-in-multiple-threads.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010219.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010219.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010219.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010219.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010219.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010219.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010219.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - libconsensus assertion fails if used in multiple threads</title>
    <updated>2025-10-17T02:34:04.952451+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010219.html" rel="alternate"/>
    <published>2015-08-18T21:40:27+00:00</published>
    <summary>In an email exchange, Tamas Blummer confirms that libconsensus is running stable within the Bits of Proof stack and its performance is close to the Java-based implementation. Cory Fields notes that Core is switching to libsecp256k1 for speed and there is no timeline for integration. Fields also disputes Blummer's claim that modern implementations validating transactions in multiple threads are affected by the OpenSSL race issue. Blummer hopes that the pull request will be included in the next release of Core and asks about the timeline for secp256k1 integration, to which Fields avoids guessing. Fields has discovered an issue in OpenSSL relating to the secp256k1 curve used by Bitcoin and other cryptocurrencies. He has prepared a patch for anyone who may encounter the issue, but since Bitcoin Core and libbitcoinconsensus are switching away from OpenSSL, it is not seen as a major problem. Blummer confirms that libconsensus works correctly within the Bits of Proof stack and its performance is close to the Java version. However, he disagrees with Fields' claim that the problem is rare in the real-world. Tamas Blummer posts on the bitcoin-dev mailing list stating that while integrating libconsensus into bits of proof, it worked well for all test cases with their Java engine and was about 50% faster on a single thread. However, an error occurred when executed on several threads simultaneously due to the lack of registration of thread callbacks as advised for OpenSSL. The integration of libconsensus into bits of proof is successful and works well with the Java engine, but an error occurs when executed on multiple threads simultaneously due to the lack of registration of thread callbacks as advised for OpenSSL. A workaround is being sought.</summary>
  </entry>
</feed>