<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Great Consensus Cleanup Revival</title>
  <updated>2024-07-12T11:56:04.552452+00:00</updated>
  <author>
    <name>Eric Voskuil 2024-06-17 22:15:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Great Consensus Cleanup Revival</title>
    <updated>2024-07-12T11:56:04.552452+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/gnM89sIQ7MhDgI62JciQEGy63DassEv7YZAMhj0IEuIo0EdnafykF6RH4OqjTTHIHsIoZvC2MnTUzJI7EfET4o-UQoD-XAQRDcct994VarE=@protonmail.com/T/#m6dec29bec3381ff204750be005abca958c60940f" rel="alternate"/>
    <summary>Eric raises a question concerning the sufficiency of a deserialization phase check for the coinbase input as a null point in mitigating potential malleability issues in blocks that contain only 64-byte transactions. He queries why this method would not be adequate for implementations aiming to permanently mark invalidity, given the computational infeasibility of bypassing such a check. The inquiry is rooted in concerns about weaknesses in Bitcoinâ€™s Merkle Root Construction, with Eric referencing a document that details these vulnerabilities. The document he refers to can be found at [here](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20190225/a27d8837/attachment-0001.pdf), which provides further insight into the technical aspects and implications of the discussed weakness in Bitcoin's architecture.</summary>
    <published>2024-06-17T22:15:00+00:00</published>
  </entry>
</feed>
