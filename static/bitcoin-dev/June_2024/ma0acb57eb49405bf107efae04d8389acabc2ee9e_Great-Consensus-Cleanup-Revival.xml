<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Great Consensus Cleanup Revival</title>
  <updated>2024-07-12T11:55:00.046349+00:00</updated>
  <author>
    <name>Antoine Poinsot 2024-06-27 09:35:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Great Consensus Cleanup Revival</title>
    <updated>2024-07-12T11:55:00.046349+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/gnM89sIQ7MhDgI62JciQEGy63DassEv7YZAMhj0IEuIo0EdnafykF6RH4OqjTTHIHsIoZvC2MnTUzJI7EfET4o-UQoD-XAQRDcct994VarE=@protonmail.com/T/#ma0acb57eb49405bf107efae04d8389acabc2ee9e" rel="alternate"/>
    <summary>The discussion revolves around the strategies for handling invalid blocks in blockchain technology, specifically focusing on the idea of caching the hash of a non-malleated invalid block to prevent unnecessary re-downloads and re-validations. The concern about potential implementation bugs is acknowledged but deemed not significant in this context. The simplicity of verifying transactions within a block is highlighted, pointing out that ensuring no transaction is 64 bytes is a straightforward process. 

However, there's an underlying assumption made about the knowledge level of individuals involved in this verification process. It's considered unrealistic to expect these individuals to understand the nuances of merkle tree construction, particularly the possibility that an inner node could be mistaken for a 64-byte transaction. This introduces a debate on the proposal to invalidate 64-byte transactions to avoid such confusion and the associated risks it might entail.

The conversation then shifts to the implications of making 64-byte transactions invalid. By doing so, it would eliminate the possibility of two valid blocks having the same hash, addressing a specific vulnerability (CVE-2012-2459) that has been present since 2012. This suggestion is put forward as a solution to enhance the security and integrity of blockchain operations by preventing duplicate transaction IDs and thereby, duplicate block hashes.</summary>
    <published>2024-06-27T09:35:00+00:00</published>
  </entry>
</feed>
