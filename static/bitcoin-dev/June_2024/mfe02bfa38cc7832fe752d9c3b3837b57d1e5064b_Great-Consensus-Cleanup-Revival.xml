<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Great Consensus Cleanup Revival</title>
  <updated>2024-07-12T11:55:46.546728+00:00</updated>
  <author>
    <name>Eric Voskuil 2024-06-18 13:02:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Great Consensus Cleanup Revival</title>
    <updated>2024-07-12T11:55:46.546728+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/gnM89sIQ7MhDgI62JciQEGy63DassEv7YZAMhj0IEuIo0EdnafykF6RH4OqjTTHIHsIoZvC2MnTUzJI7EfET4o-UQoD-XAQRDcct994VarE=@protonmail.com/T/#mfe02bfa38cc7832fe752d9c3b3837b57d1e5064b" rel="alternate"/>
    <summary>Eric raises a pertinent question regarding transaction malleability. He points out the existing solution to a problem related to transaction (tx) malleability, which involves a simple verification step ensuring that the first input of a transaction is not null. His inquiry delves into why this approach, characterized by its simplicity, might not be deemed sufficient, particularly when considering the parallels with another issue within the same domain that necessitates a comparable straightforward checkâ€”verifying that a transaction's size is not 64 bytes. Eric's query underscores a comparison between two seemingly minimalistic yet crucial validation checks in the context of transaction malleability, inviting further examination of their adequacy and efficiency in safeguarding against potential vulnerabilities.</summary>
    <published>2024-06-18T13:02:00+00:00</published>
  </entry>
</feed>
