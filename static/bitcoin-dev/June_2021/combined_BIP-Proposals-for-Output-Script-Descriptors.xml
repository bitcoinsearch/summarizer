<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP Proposals for Output Script Descriptors</title>
  <updated>2025-09-26T15:39:30.525763+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m48d31bdf89c722366045923e93920de251300861">
      <author>[bitcoin-dev] BIP Proposals for Output Script Descriptors Andrew Chow</author>
      <timestamp>2021-06-29T21:14:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] BIP Proposals for Output Script Descriptors Andrew Chow" parent_id="mailing-list-2021-06-m48d31bdf89c722366045923e93920de251300861" anchor="m116fa7fd30968cf8bfa84b6fdc2dc1163d353cb9">
      <author>Christopher Allen</author>
      <timestamp>2021-06-29T22:22:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="Christopher Allen" parent_id="mailing-list-2021-06-m116fa7fd30968cf8bfa84b6fdc2dc1163d353cb9" anchor="m3a4f3e4edec7102a1ad3e4e920421101de446330">
      <author>Andrew Chow</author>
      <timestamp>2021-06-29T22:35:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="2" position="3" reply_to="Christopher Allen" parent_id="mailing-list-2021-07-m116fa7fd30968cf8bfa84b6fdc2dc1163d353cb9" anchor="mbdafd0095d49ecd892a549cb9f3bb580e878ec39">
      <author>Andrew Chow</author>
      <timestamp>2021-07-02T20:05:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="1" position="4" reply_to="[bitcoin-dev] BIP Proposals for Output Script Descriptors Andrew Chow" parent_id="mailing-list-2021-07-m48d31bdf89c722366045923e93920de251300861" anchor="mc668c32547a6bd4c84ccc6f189baf2744e460890">
      <author>David A. Harding</author>
      <timestamp>2021-07-03T03:24:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="2" position="5" reply_to="David A. Harding" parent_id="mailing-list-2021-07-mc668c32547a6bd4c84ccc6f189baf2744e460890" anchor="m32df9370f44a977ada4d82ad68f1d0ef76f22cf1">
      <author>Andrew Chow</author>
      <timestamp>2021-07-03T05:12:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="3" position="6" reply_to="Andrew Chow" parent_id="mailing-list-2021-07-m32df9370f44a977ada4d82ad68f1d0ef76f22cf1" anchor="m620f1fb39829ca8405f16978263315b09da9a6ec">
      <author>Craig Raw</author>
      <timestamp>2021-07-03T08:35:00.000Z</timestamp>
    </message>
    <message id="msg_8" depth="4" position="7" reply_to="Craig Raw" parent_id="mailing-list-2021-07-m620f1fb39829ca8405f16978263315b09da9a6ec" anchor="m20188955bf3b262e614469a71c0bdd103d9ed562">
      <author>David A. Harding</author>
      <timestamp>2021-07-03T10:05:00.000Z</timestamp>
    </message>
    <message id="msg_9" depth="5" position="8" reply_to="David A. Harding" parent_id="mailing-list-2021-07-m20188955bf3b262e614469a71c0bdd103d9ed562" anchor="m87070640660db6af3ed7ca5761841d4545a069ef">
      <author>Craig Raw</author>
      <timestamp>2021-07-03T14:00:00.000Z</timestamp>
    </message>
    <message id="msg_10" depth="6" position="9" reply_to="Craig Raw" parent_id="mailing-list-2021-07-m87070640660db6af3ed7ca5761841d4545a069ef" anchor="m14e80a39dc252235624c5cb746df20e6197bca59">
      <author>Daniel Bayerdorffer</author>
      <timestamp>2021-07-04T17:56:00.000Z</timestamp>
    </message>
    <message id="msg_11" depth="1" position="10" reply_to="[bitcoin-dev] BIP Proposals for Output Script Descriptors Andrew Chow" parent_id="mailing-list-2021-08-m48d31bdf89c722366045923e93920de251300861" anchor="m12208fe156fe5617697a69b31679bb76cd60e1e8">
      <author>Sjors Provoost</author>
      <timestamp>2021-08-05T14:27:00.000Z</timestamp>
    </message>
    <message id="msg_12" depth="2" position="11" reply_to="Sjors Provoost" parent_id="mailing-list-2021-08-m12208fe156fe5617697a69b31679bb76cd60e1e8" anchor="m643216ef45efafce3a1563ec9bc472cdbdbd7619">
      <author>Christopher Allen</author>
      <timestamp>2021-08-05T20:49:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Aug_2021/019305_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2021/019304_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2021/019201_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2021/019191_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2021/019188_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2021/019189_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2021/019185_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2021/019183_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2021/019180_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019155_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019156_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019151_BIP-Proposals-for-Output-Script-Descriptors.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019151.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP Proposals for Output Script Descriptors</title>
    <updated>2025-09-26T15:39:30.527227+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-June/019151.html" rel="alternate"/>
    <published>2021-08-05T20:49:43+00:00</published>
    <summary>In a discussion on the bitcoin-dev mailing list, Sjors Provoost proposed adding a birth date or minimum block height to the BIP 32 and BIP 88 standards for Hierarchical Deterministic Path Templates. He suggested using a metadata format to track this information alongside descriptors.The Airgap Wallet Community supports metadata in their UR standards, which use CBOR's tagging capability. The UR standards also provide efficient transport via QR codes or URLs. Interested parties can learn more about these standards by watching a video on Blockchain Commons Technology Overview or reading articles on URs, including guides for key material and SSKRs, as well as UR Request &amp; Response. Additionally, there are specs available on Uniform Resources (UR) and HD Keys. For further questions, individuals can visit the Airgapped Wallet Community on GitHub.Bitcoin Core developer Andrew Chow has proposed formalizing the Output Script Descriptors in a set of 7 BIPs. These descriptors are used to describe collections of output scripts and offer a generic solution to issues with wallet backups and exports. The 7 BIPs specify various descriptors such as non-segwit descriptors (pk, pkh, sh), segwit descriptors (wpkh, wsh), multisig descriptors (multi, sortedmulti), the taproot descriptor (tr), the combo descriptor, and opaque descriptors (raw, addr). The proposal also suggests including a birth date and metadata format to track birth data, gap limits, and other necessary information for future wallets. Another document outlines specifications for Bitcoin output script descriptors, specifically for P2WPKH and P2WSH formats (wpkh() and wsh() expressions), as well as P2PK, P2PKH, and P2SH formats (pk(), pkh(), and sh() expressions).There has been a debate on whether to use an apostrophe or 'h' in Bitcoin output script descriptors. Craig Raw argued that using an apostrophe allows for more whitespace and easier visual parsing, while David A. Harding countered that the difference in space usage is negligible and that using 'h' or 'H' avoids potential errors in shell-quoting and is more efficient for metal backups. Daniel Bayerdorffer of Numberall Stamp &amp; Tool Co., Inc. recommended the Bitcoin Recovery Tag as a metal backup option that supports both apostrophes and 'h'. The discussion highlights the importance of considering user experience and practical considerations in the design of Bitcoin-related tools and protocols.The debate over using 'h' or an apostrophe in Bitcoin descriptors continued, with David A. Harding expressing concerns about using 'h' as it takes up more space and makes derivation paths and descriptors more difficult to read. However, Andrew Chow pointed out that the difference in space is only 0.7% and there are no issues with readability or transcription errors due to the use of a fixed character width font and checksums. Additionally, he mentioned that using apostrophes actually provides more whitespace and makes the path easier to parse visually. The real concern lies in using &quot;-containing descriptors in a bourne-style shell, which can lead to loss of money. Ultimately, Raw agreed with Harding's points.David A. Harding proposed making &quot;h&quot;/&quot;H&quot; the preferred aliases instead of &quot;'&quot; in Bitcoin descriptors to improve user experience. However, Andrew Chow raised concerns about increased space usage and difficulty in reading descriptors and derivation paths. David suggested alternative options like completely eliminating &quot;'&quot;, but it was not feasible due to widespread use of descriptors, or calculating the checksum over s/(h|H)/', which had been discussed before but not implemented due to the need for dumb checksum checkers that don't have to parse descriptors. In conclusion, the text was updated to use &quot;h&quot;, but alternatives were still being considered.Andrew Chow has submitted a pull request to formalize Bitcoin Core's Output Script Descriptors into BIPs. The specifications are split into seven BIPs, with the first one providing general information and the rest specifying different descriptors. These descriptors offer a generic solution to issues with wallet backups by explicitly specifying script types and key derivation paths. They include non-segwit descriptors (pk, pkh, sh), segwit descriptors (wpkh, wsh), multisig descriptors (multi, sortedmulti), taproot descriptor (tr), combo descriptor, and opaque descriptors (raw, addr). Jeremy Rubin suggested collecting feedback through WIP PRs. Bitcoin Core has implemented pk(), pkh(), sh(), and tr() descriptors since version 0.17 and version 22.0.In an email exchange between Christopher Allen and Andrew Poelstra, the possibility of supporting time locks in descriptors other than 'raw' was discussed. Andrew mentioned that he expects miniscript to be a follow-up BIP that extends these descriptors and includes timelock functionality. Christopher shared a link to a document titled &quot;Designing Multisig for Independence &amp; Resilience&quot; on Github, which discusses scenarios</summary>
  </entry>
</feed>