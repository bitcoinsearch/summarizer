<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [BIP Proposal] Add BIP-0093 (Codex32) as application to BIP-0085</title>
  <updated>2025-09-05T02:31:14.412916+00:00</updated>
  <author>
    <name>Ben Westgate 2025-09-03 00:44:00+00:00</name>
  </author>
  <author>
    <name>Javier Mateos 2025-09-02 02:30:00+00:00</name>
  </author>
  <author>
    <name>Ben Westgate 2025-09-01 18:37:00+00:00</name>
  </author>
  <author>
    <name>Javier Mateos 2025-09-01 08:41:00+00:00</name>
  </author>
  <author>
    <name>Ben Westgate 2025-08-31 22:25:00+00:00</name>
  </author>
  <link href="bitcoin-dev/Sept_2025/m06496d4fccbb817e6ea7de8ddd4e100ca282092f_-BIP-Proposal-Add-BIP-0093-Codex32-as-application-to-BIP-0085.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2025/m8c510f0d857a6cb468aa3e941aa817475e7119d4_-BIP-Proposal-Add-BIP-0093-Codex32-as-application-to-BIP-0085.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2025/m3515c1c03325873af71aa71ec3783321b498f370_-BIP-Proposal-Add-BIP-0093-Codex32-as-application-to-BIP-0085.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2025/m585051b989e217715756196a061b88f55330263d_-BIP-Proposal-Add-BIP-0093-Codex32-as-application-to-BIP-0085.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2025/mdf2c201e4c857dde1287e40d90b8cca84e3667be_-BIP-Proposal-Add-BIP-0093-Codex32-as-application-to-BIP-0085.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [BIP Proposal] Add BIP-0093 (Codex32) as application to BIP-0085</title>
    <updated>2025-09-05T02:31:14.412971+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/774faeb9-6c6b-4545-8071-56ec03e78cd0n@googlegroups.com/T/#u#mdf2c201e4c857dde1287e40d90b8cca84e3667be" rel="alternate"/>
    <summary>The recent communications within the Bitcoin Development community have shed light on significant advancements and proposals aimed at enhancing the functionality and security of wallet backups through deterministic entropy methods. The discourse primarily revolves around the integration and refinement of BIP-85 derivations in codex32 tooling, illustrating a concerted effort to establish uniformity and technical robustness in implementation practices. Acknowledgements from contributors such as Andrew Poelstra and Russell O'Connor highlight the support for the initiative, particularly emphasizing its potential to facilitate recoverable child codex32 strings for scenarios involving forgetful relatives. They advocate for the generation of initial strings by encoding RNG entropy directly, ensuring information-theoretic security, while also recognizing the utility of stretching entropy under certain user conditions. Moreover, the concept of utilizing codex32 backups for BIP-85 root keys has been well-received, underscoring the proposal's technical soundness and its adherence to established patterns for applications within BIP-85.

Further discussions have led to tangible updates to the proposal, incorporating pseudocode for character value selection and modifying documentation to clarify the implications of setting the threshold to "0". These modifications aim to eliminate ambiguity and enhance clarity for implementers, reflecting a responsive and iterative development process that values precision and accuracy. Direct links to commits and proposed changes have been shared, facilitating easy access and review by collaborators.

A notable proposition discussed involves listing BIP-0093 (codex32) as an application of BIP-0085, which is focused on generating deterministic entropy from BIP32 keychains. This approach seeks to extend the utility of BIP-0085 beyond its current applications, promoting a standardized method for creating codex32 backups from BIP-0032 master keys. Codex32's introduction brings forth features such as error correction, hand verification, and secret sharing, aimed at improving upon existing methodologies like BIP-39. The rationale behind this integration emphasizes standardization and interoperability, offering a clear path towards enhancing wallet backup solutions. Despite some challenges related to wallet adoption, there's evident support for the proposal, as demonstrated by a draft PR for importing codex32 strings into Bitcoin Core. This initiative not only highlights the collaborative nature of the Bitcoin Development community but also underscores the ongoing efforts to refine and improve secure, user-friendly solutions for wallet backups and seed management. Feedback and further contributions from the community are welcomed as these proposals continue to evolve.</summary>
    <published>2025-09-03T00:44:00+00:00</published>
  </entry>
</feed>
