<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Introducing Hourglass</title>
  <updated>2025-08-27T02:40:35.272693+00:00</updated>
  <author>
    <name>Saint Wenhao 2025-08-23 17:49:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Introducing Hourglass</title>
    <updated>2025-08-27T02:40:35.272724+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/db3d0ec4-90b8-44a4-b912-b98ec9083b10n@googlegroups.com/T/#m835c26cccd18032a4cf9d62603a2777093ac3a09" rel="alternate"/>
    <summary>In the realm of Bitcoin development, an innovative approach has been proposed to enhance security against quantum attacks without necessitating any soft forks. This solution focuses on limiting Pay-to-PubKey (P2PK) spends to one per block, potentially leading to bidding wars among miners due to the high fees associated with these transactions. This method not only aims to distribute funds accrued from quantum retrieval efforts but also seeks to restrict coin spendability by leveraging Proof of Work mechanisms.

The proposed technical implementation involves the use of OP_SIZE on DER signatures in conjunction with either OP_CHECKSEQUENCEVERIFY or OP_CHECKLOCKTIMEVERIFY. This strategy was initially suggested in a discussion on the [BitcoinTalk forum](https://bitcointalk.org/index.php?topic=5551080.msg65724436msg65724436). The simplest form of this script would incorporate OP_SIZE and OP_CHECKSEQUENCEVERIFY within a Pay-to-Witness-Script-Hash (P2WSH) transaction, effectively timelocking transactions for at least 9 blocks in the event that secp256k1 and SHA-256 cryptographic algorithms are compromised. However, the duration of this timelock could vary based on the size of the signature involved.

Further refinement of this concept can increase the granularity of the timelock mechanism, as demonstrated in the Signet faucet model which extends the timelock to approximately 280 blocks under realistic conditions. This model allows for adjustments in the lock time based on the manipulation of signature sizes. Specifically, if every private key corresponding to a secp256k1 point is known, the signature size could reduce to around 40 bytes, thereby adjusting the timelock to approximately 160 blocks while still necessitating SHA-256 grinding for faster coin movement.

This innovative approach presents a promising avenue for enhancing Bitcoin's security in the face of potential quantum computing threats, offering a practical solution that circumvents the need for significant protocol changes while ensuring incentivization for miners through elevated transaction fees.</summary>
    <published>2025-08-23T17:49:00+00:00</published>
  </entry>
</feed>
