<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] OP_TWEAKADD</title>
  <updated>2025-08-27T02:48:43.064504+00:00</updated>
  <author>
    <name>jeremy 2025-08-23 17:35:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] OP_TWEAKADD</title>
    <updated>2025-08-27T02:48:43.064540+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/bc9ff794-b11e-47bc-8840-55b2bae22cf0n@googlegroups.com/T/#m4b4c6f0d4acde46dc961aebffa74bfc49273c981" rel="alternate"/>
    <summary>Jeremy has recently shared a draft BIP (Bitcoin Improvement Proposal) that proposes a new opcode, OP_TWEAKADD, for consideration and deployment as an upgrade under the OP_SUCCESSx category. The draft, accessible on GitHub at [this link](https://github.com/bitcoin/bips/pull/1944), introduces OP_TWEAKADD as a relatively straightforward opcode aimed at enhancing Bitcoin's scripting capabilities. The design decisions surrounding this opcode focus on three main areas: the choice between verify versus push semantics, the order of arguments, and the nature of the tweak to be applied.

The decision to opt for push semantics over verify is driven by the goal of achieving succinctness in on-chain operations. By placing the key on top of the argument stack, with the tweak in the witness, the proposed design emphasizes ease of use and efficiency in script execution. The proposal advocates for the use of a plain tweak, leaving it up to the user to apply hashing if deemed necessary. This approach is chosen for its flexibility, allowing for straightforward implementation while also keeping open the possibility of future enhancements, such as the addition of TapTree opcodes for constructing taproot tweaks.

Jeremy's message encourages feedback and discussion within the Bitcoin development community, underscoring the proposal's open-ended nature and the potential for further refinement based on community input.</summary>
    <published>2025-08-23T17:35:00+00:00</published>
  </entry>
</feed>
