<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP 118 and SIGHASH_ANYPREVOUT</title>
  <updated>2025-09-26T15:54:39.857589+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m8ff0d38038cf302d3cb08d710bb3fb80218fdbdd">
      <author>[bitcoin-dev] BIP 118 and SIGHASH_ANYPREVOUT Anthony Towns</author>
      <timestamp>2020-07-09T21:40:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] BIP 118 and SIGHASH_ANYPREVOUT Anthony Towns" parent_id="mailing-list-2020-07-m8ff0d38038cf302d3cb08d710bb3fb80218fdbdd" anchor="me9fb753eb35d7ac4287741f21f68b7786a077e3d">
      <author>Anthony Towns</author>
      <timestamp>2020-07-09T22:30:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="1" position="2" reply_to="[bitcoin-dev] BIP 118 and SIGHASH_ANYPREVOUT Anthony Towns" parent_id="mailing-list-2020-07-m8ff0d38038cf302d3cb08d710bb3fb80218fdbdd" anchor="me5e57147016da032461b830dcb5edd6725e14bef">
      <author>ZmnSCPxj</author>
      <timestamp>2020-07-10T03:29:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="2" position="3" reply_to="Anthony Towns" parent_id="mailing-list-2020-07-me9fb753eb35d7ac4287741f21f68b7786a077e3d" anchor="m120b1a008d81386ae44394c72fb239384b27ffd1">
      <author>Christian Decker</author>
      <timestamp>2020-07-10T07:46:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="2" position="4" reply_to="ZmnSCPxj" parent_id="mailing-list-2020-08-me5e57147016da032461b830dcb5edd6725e14bef" anchor="m5e582e329e7251efaa8ff63c7cfbf31f81323a07">
      <author>Richard Myers</author>
      <timestamp>2020-08-03T19:27:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="3" position="5" reply_to="Richard Myers" parent_id="mailing-list-2020-08-m5e582e329e7251efaa8ff63c7cfbf31f81323a07" anchor="m9510f0d0da88b7b8e93b6ee7bf3f1bcc97474ce2">
      <author>ZmnSCPxj</author>
      <timestamp>2020-08-04T01:38:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="1" position="6" reply_to="[bitcoin-dev] BIP 118 and SIGHASH_ANYPREVOUT Anthony Towns" parent_id="mailing-list-2020-08-m8ff0d38038cf302d3cb08d710bb3fb80218fdbdd" anchor="m131f5b0b3caac59b46a756cd2d2ecab694c2bee2">
      <author>lf-lists</author>
      <timestamp>2020-08-04T04:02:00.000Z</timestamp>
    </message>
    <message id="msg_8" depth="2" position="7" reply_to="lf-lists" parent_id="mailing-list-2020-08-m131f5b0b3caac59b46a756cd2d2ecab694c2bee2" anchor="m1d43c21eea66735e15273c779784db9d9e5f2dbc">
      <author>ZmnSCPxj</author>
      <timestamp>2020-08-04T04:23:00.000Z</timestamp>
    </message>
    <message id="msg_9" depth="3" position="8" reply_to="ZmnSCPxj" parent_id="mailing-list-2020-08-m1d43c21eea66735e15273c779784db9d9e5f2dbc" anchor="m4fd76f0ebc86b824ed1780044de0296b7c962ae0">
      <author>Christian Decker</author>
      <timestamp>2020-08-04T10:38:00.000Z</timestamp>
    </message>
    <message id="msg_10" depth="3" position="9" reply_to="ZmnSCPxj" parent_id="mailing-list-2020-08-m1d43c21eea66735e15273c779784db9d9e5f2dbc" anchor="m29c9fc5248120fdf2111515c71af0f338d9b4799">
      <author>Matt Corallo</author>
      <timestamp>2020-08-04T13:10:00.000Z</timestamp>
    </message>
    <message id="msg_11" depth="4" position="10" reply_to="Matt Corallo" parent_id="mailing-list-2020-08-m29c9fc5248120fdf2111515c71af0f338d9b4799" anchor="m84213c7208577db1106ce1c09ea8aa51339700b9">
      <author>ZmnSCPxj</author>
      <timestamp>2020-08-04T14:59:00.000Z</timestamp>
    </message>
    <message id="msg_12" depth="5" position="11" reply_to="ZmnSCPxj" parent_id="mailing-list-2020-08-m84213c7208577db1106ce1c09ea8aa51339700b9" anchor="m31071ce0799d117d1ddf20dcf36fbfb411506a28">
      <author>Matt Corallo</author>
      <timestamp>2020-08-06T15:58:00.000Z</timestamp>
    </message>
    <message id="msg_13" depth="6" position="12" reply_to="Matt Corallo" parent_id="mailing-list-2020-08-m31071ce0799d117d1ddf20dcf36fbfb411506a28" anchor="m1b8b430b22257a5ac3aa0444d1fb4fee45a5351a">
      <author>Richard Myers</author>
      <timestamp>2020-08-07T15:34:00.000Z</timestamp>
    </message>
    <message id="msg_14" depth="7" position="13" reply_to="Richard Myers" parent_id="mailing-list-2020-08-m1b8b430b22257a5ac3aa0444d1fb4fee45a5351a" anchor="mef32072d0bc07ac73f4106b7939175b13cb21f6a">
      <author>Matt Corallo</author>
      <timestamp>2020-08-11T00:14:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Aug_2020/018079_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018078_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018077_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018076_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018075_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018074_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018073_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018072_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018071_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018069_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018041_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018040_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018039_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2020/018038_BIP-118-and-SIGHASH-ANYPREVOUT.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018079.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP 118 and SIGHASH_ANYPREVOUT</title>
    <updated>2025-09-26T15:54:39.859162+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018079.html" rel="alternate"/>
    <published>2020-08-11T00:14:29+00:00</published>
    <summary>In a recent conversation on the Bitcoin-dev mailing list, Matt Corallo discussed the potential of a relay network that could handle transactions with SIGHASH_ANYPREVOUT. This network would need to rewrite transactions before passing them on to a local bitcoind. The idea is that a sender could relay a transaction with one input that is valid for any output index 0 in a transaction spending output B. The receiver would then look up which transaction spends output B and fill in the input with that outpoint.Richard Myers asked if such a relay network could be more &quot;smart about replacement&quot; in the context of ANYPREVOUT by RBF-ing parts of a package. Matt responded that SIGHASH_NOINPUT would simplify these issues if nodes could be &quot;smart&quot; about replacement when they see a SIGHASH_NOINPUT spend that can spend an output already spent by something else in the mempool. However, shoving this complexity into the Bitcoin P2P network may not be feasible. Instead, a relay network of lightning nodes could potentially handle the calculation and pass the transactions to their local full nodes.In the context of ANYPREVOUT*, a special relay network could be more intelligent about replacement. This would involve relaying only the higher up-front fee-rate transactions from a lower total fee package (Package B) which get spent by the high absolute fee child transactions from a higher total fee package (Package A). The result is Package A', which includes the higher fee rate versions of the ANYPREVOUT* transactions from Package B, but with an overall lower total fee. However, implementing this solution requires nodes to be &quot;smart&quot; about replacement when they see a SIGHASH_NOINPUT spend which can spend an output that something else in the mempool already spends.The conversation between Matt and ZmnSCPxj revolves around a relay-based attack that can compromise HTLC security in the Lightning Network. The attacker connects twice to the LN - once to any node near the victim and once to the victim. The attacker arranges for the victim-attacker channel to have most funds on the victim's side and routes a circular payment terminating in the victim-attacker channel. The attacker broadcasts a very low-fee old-state transaction of the victim-attacker channel just before the HTLC timeout, forcing the victim to broadcast a unilateral close attempt for the victim-attacker channel to enforce the HTLC on-chain. However, relay shenanigans prevent the latest commitment from being broadcast, leaving the victim at risk.ZmnSCPxj suggests that forwarding nodes drop channels on-chain &quot;early&quot; if the HTLC will time out soon. Matt notes that SIGHASH_NOINPUT makes these issues much simpler to address if nodes can be &quot;smart&quot; about replacement when they see a SIGHASH_NOINPUT spend that can spend an output already spent by something else in the mempool. They also discuss the possibility of an overlay relay network of lightning nodes that do calculation and pass transactions to their local full nodes.Christian discusses a feasible attack that can be executed without the victim's knowledge in a Lightning universe primarily utilizing SIGHASH_NOINPUT-based mechanisms. He suggests monitoring on-chain events and ignoring mempool events to react to confirmed transactions. To ensure security, deep timeouts for mechanisms are necessary so that a SIGHASH_NOINPUT signature can be &quot;locked&quot; to a confirmed txid, unless a reorg unconfirms the transaction. Additionally, implementing scorch-the-earth, keep-bumping-the-fee strategies can help keep rebroadcasting new versions of the spending transaction.In the context of recent relay-based attacks, there have been concerns about the security of Hash Time-Locked Contract (HTLC) transactions. ZmnSCPxj raises a design consideration for the p2p protocol layer that would allow relaying a transaction to a full node without knowing which input transaction that full node has in its mempool or active chain. This is important for systems like lighting where you may not know which counterparty commitment transaction(s) are in a random node’s mempool and you should be able to describe to that node that you are spending them nonetheless.Richard expresses his interest in implementing a Taproot version of Decker-Russell-Osuntokun (eltoo) and discusses the differences between ANYPREVOUT vs. ANYPREVOUTANYSCRIPT and their exploitation. ZmnSCPxj provides clarifications on key-path spending, reducing the round trips for MuSig signing sessions, and the security implications of chaperone signatures for SIGHASH_NOINPUT/SIGHASH_ANYPREVOUT. They also discuss the implementation of scorch-the-earth, keep-bumping-the-fee strategies.In another email thread, Anthony Towns opens a draft pull request to update BIP 118 with the ANYPREVOUT bip, including significant changes since previous discussions. The complete lack of chaperone signatures in the new BIP text is noted.Overall,</summary>
  </entry>
</feed>