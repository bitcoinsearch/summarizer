<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Smaller Transactions with PubRef</title>
  <updated>2025-10-12T01:51:06.984743+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m74ec92878a86194cd74a46cab05e917d5413023d">
      <author>[bitcoin-dev] Smaller Transactions with PubRef Mike Brooks</author>
      <timestamp>2020-08-01T05:09:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Smaller Transactions with PubRef Mike Brooks" parent_id="mailing-list-2020-08-m74ec92878a86194cd74a46cab05e917d5413023d" anchor="m6fb9358df1734e270dd8c7dd1d082a049cfab7a0">
      <author>ZmnSCPxj</author>
      <timestamp>2020-08-02T00:36:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="ZmnSCPxj" parent_id="mailing-list-2020-08-m6fb9358df1734e270dd8c7dd1d082a049cfab7a0" anchor="mf2ba09a2294cde57f4debb3e41d946cd4903a534">
      <author>Mike Brooks</author>
      <timestamp>2020-08-02T01:12:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="3" position="3" reply_to="Mike Brooks" parent_id="mailing-list-2020-08-mf2ba09a2294cde57f4debb3e41d946cd4903a534" anchor="mb751487a80941f83be03584d4ed29da9b09df4c4">
      <author>ZmnSCPxj</author>
      <timestamp>2020-08-02T14:22:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Aug_2020/018068_Smaller-Transactions-with-PubRef.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018067_Smaller-Transactions-with-PubRef.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018066_Smaller-Transactions-with-PubRef.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2020/018065_Smaller-Transactions-with-PubRef.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018065.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018065.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Smaller Transactions with PubRef</title>
    <updated>2025-10-12T01:51:06.985386+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-August/018065.html" rel="alternate"/>
    <published>2020-08-02T14:22:30+00:00</published>
    <summary>In an email exchange, ZmnSCPxj discussed the issue with SCRIPT re-evaluation and reorgs. They explained that reorgs cause nodes to do more processing even with Floating-point Nakamoto Consensus. This is because a node can still observe a reorg if it first receives a lower-scored block before a higher-scored block. This increases the processing load on validating fullnodes and prevents pruning from working for them.Miners can also mount a DoS on validating fullnodes with `OP_PUBREF` and Floating-Point Nakamoto Consensus by re-mining the same block and broadcasting it if it has a higher score than the previous chain tip. This locks the blockchain and increases the load on fullnodes, which have to re-validate uses of `OP_PUBREF` that might refer to the chain tip.ZmnSCPxj responded to Michael's suggestion for solving re-orgs in a different way by saying &quot;Hard NAK.&quot; They pointed out important problems with Michael's proposal, such as encouraging address reuse, hurting fungibility and privacy, preventing pruning, requiring the creation of another index to previous block data, increasing requirements on fullnodes, and needing SCRIPT to be re-evaluated on transactions arriving in new blocks to protect against reorgs of the chaintip, particularly `OP_PUBREF` references near the chaintip. ZmnSCPxj noted that none of these issues were addressed in Michael's proposal and that the proposal only considered clients without considering the implications for validators.The email thread includes an HTML attachment and a non-text attachment titled &quot;Floating-Point Nakamoto Consensus.pdf,&quot; which may contain further information related to the discussion.In response to an original posting, ZmnSCPxj highlighted several important issues with the proposed opcode called Hard NAK. These issues include hurting fungibility and privacy by encouraging address reuse, preventing pruning, requiring the creation of another index to previous block data, which increases requirements on fullnodes, and needing SCRIPT to be re-evaluated on transactions arriving in new blocks to protect against reorgs of the chaintip. ZmnSCPxj noted that none of these issues have been addressed in the current proposal and that it only considers clients without considering what validators would need to implement to validate new blocks with this opcode.The email thread also mentions a BIP that describes a new opcode enabling transactions that are about 37% smaller than traditional single-source segwit transactions. The size savings vary based on the number of inputs. This pursuit of smaller transactions is important for Inclusive Accountability as it reduces the amount of data recorded on the chain, leading to improved frugality by allowing more transactions to be confirmed in a block and enabling small value inputs to be referenced without losing unrecoverable value due to transaction overhead. The BIP can be found on GitHub at https://github.com/TheRook/bip-pubref/blob/master/bip-PubRef.mediawiki.On the Ethereum side, a variant of this technology called Ditto Transactions is described, which can be found at https://ethereum-magicians.org/t/eip-ditto-transactions/4455.</summary>
  </entry>
</feed>