<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Transcript: Online Socratic on MuSig2</title>
  <updated>2025-09-25T23:05:43.578958+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Sept_2022/020917_Transcript-Online-Socratic-on-MuSig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020915_Transcript-Online-Socratic-on-MuSig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020910_Transcript-Online-Socratic-on-MuSig2.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020910.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Transcript: Online Socratic on MuSig2</title>
    <updated>2025-09-25T23:05:43.579061+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020910.html" rel="alternate"/>
    <published>2022-09-12T16:00:52+00:00</published>
    <summary>In a conversation between Ali Sherief and Michael Folkson, the issue of theft and online connectivity with signature generation is discussed. Michael explains that generating a signature requires private keys, which raises concerns about security and theft. However, he suggests that using multisig arrangements can prevent loss of funds in case of theft of a single private key. Additionally, he mentions that key aggregation multisig increases interactivity requirements.Michael clarifies that while there isn't a concept of a &quot;lite node&quot; in signature generation, it makes more sense in the realm of verification. He gives an example of Liquid, where currently 11 signatures go onchain when funds are moved. However, if Liquid used a key aggregation scheme like FROST, only a single signature would be required onchain. He also suggests the possibility of increasing the number of signatures or implementing a nested MuSig/FROST scheme for added security.Ali contacts Michael regarding the detailed and comprehensive Socratic transcript, which covers various problems including theft and offline issues. Ali inquires if any research has been done that doesn't involve a trade-off between theft and online connectivity. While ROAST and Liquid provide solutions, they rely on centralized nodes. Ali proposes the idea of decentralizing federated nodes into &quot;lite nodes&quot; managed by each service wanting payment, creating a threshold signature from multiple subscribers paying simultaneously.On August 11th, an online Socratic session was held featuring Tim Ruffing and Elizabeth Crites, discussing topics related to MuSig(2), FROST, ROAST, and more. The transcript of the session can be found on btctranscripts.com, and the video is available on YouTube. A reading list has also been compiled, containing resources on MuSig(2), FROST, and ROAST. During the discussion, participants covered various subjects, including BIP340, handling x-only public keys in MuSig2, the proposed TLUV covenant opcode, the history and improvements of MuSig, comparisons between MuSig2 and FROST for multisig schemes, the absence of proofs of possession in MuSig2, and the current state of the draft MuSig2 BIP.Although the session was lengthy (approximately 2.5 hours), it offered valuable insights into these topics, making the transcript or video useful for anyone interested in the discussed subjects. Jonas Nick also tweeted that the MuSig2 BIP is nearing a stable version 1.0, which will be beneficial for those implementing it. All relevant sources and links have been provided for further reference.</summary>
  </entry>
</feed>