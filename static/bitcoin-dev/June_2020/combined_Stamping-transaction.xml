<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Stamping transaction</title>
  <updated>2025-09-26T16:00:19.018102+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m9e9fb3511bd4809ec85ae9705a04899d8e3e40c0">
      <author>[bitcoin-dev] Stamping transaction Mostafa Sedaghat joo</author>
      <timestamp>2020-06-05T12:05:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Stamping transaction Mostafa Sedaghat joo" parent_id="mailing-list-2020-06-m9e9fb3511bd4809ec85ae9705a04899d8e3e40c0" anchor="me191f0e6a501c26c536dc670af6780eab1a8794a">
      <author>ZmnSCPxj</author>
      <timestamp>2020-06-07T00:40:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="ZmnSCPxj" parent_id="mailing-list-2020-06-me191f0e6a501c26c536dc670af6780eab1a8794a" anchor="m73b61fbc60ba1b6280fad3f9b7a6dfb0323386eb">
      <author>Mostafa Sedaghat joo</author>
      <timestamp>2020-06-07T07:27:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="3" position="3" reply_to="Mostafa Sedaghat joo" parent_id="mailing-list-2020-06-m73b61fbc60ba1b6280fad3f9b7a6dfb0323386eb" anchor="m81d22e25cc27f48d63b16dbb44d3cd0c97bae2e7">
      <author>ZmnSCPxj</author>
      <timestamp>2020-06-07T15:01:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="4" position="4" reply_to="ZmnSCPxj" parent_id="mailing-list-2020-06-m81d22e25cc27f48d63b16dbb44d3cd0c97bae2e7" anchor="me4b9fb0e2db4356aa2a39af877ccc7bb636f2c16">
      <author>Mostafa Sedaghat joo</author>
      <timestamp>2020-06-09T09:34:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="5" position="5" reply_to="Mostafa Sedaghat joo" parent_id="mailing-list-2020-06-me4b9fb0e2db4356aa2a39af877ccc7bb636f2c16" anchor="ma4eed14a5c123f0c0d443d06615f25c439b3d452">
      <author>Chris Riley</author>
      <timestamp>2020-06-09T14:16:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/June_2020/017945_Stamping-transaction.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017944_Stamping-transaction.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017933_Stamping-transaction.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017932_Stamping-transaction.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017931_Stamping-transaction.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017930_Stamping-transaction.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/017930.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Stamping transaction</title>
    <updated>2025-09-26T16:00:19.018929+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/017930.html" rel="alternate"/>
    <published>2020-06-09T14:16:27+00:00</published>
    <summary>In a recent email exchange on the Bitcoin-dev mailing list, Mostafa Sedaghat joo proposed the idea of stamping transactions to decouple them from blocks and keep the size of the blockchain as small as possible. He argued that blockchain size matters, even though data storage is cheap and easy, and suggested that if you need a data-center to keep a copy of a blockchain, then you are far from a decentralization system.However, ZmnSCPxj countered that the entire history of Bitcoin is needed when starting a new node to prove ownership of current coins, and that existing currency systems have not only the &quot;official&quot; minter but also many &quot;unofficial&quot; minters (counterfeiters) which dilute the value of the currency. ZmnSCPxj further argued that validating the stamp is still a cost on every node, and it is that cost that needs to be reflected in pricing every byte in the transaction. He pointed out that UTXOs are retained indefinitely and that outputs in SegWit are 4x more expensive than signatures because signatures are only validated once when the transaction is queued to be put in the mempool.Mostafa Sedaghat joo suggested that the proposed mechanism could be made into a softfork by using an unspendable `scriptPubKey` with 0 output value. ZmnSCPxj countered that soft fork is not possible here since the transaction will not be saved inside the block and only tx hashes will be saved. Mostafa Sedaghat joo suggested that nodes can turn on pruning if the operator doesn't desire to keep all the transactions from the genesis block. Likewise, light clients may not keep any transaction history. He also suggested that when a new node connects to the network, it doesn't need to validate all the blocks since genesis but can start validating from a checkpoint.ZmnSCPxj raised concerns about the incentives for stamped transactions, as users will prefer to run older versions and never upgrade to the new version that requires stamped transactions. He argued that if it is so good for the network, then it should be good for an individual user because the network is made up of individual users anyway. If individual users are not incentivized to use it, then that fact suggests it might not be as good for the network as one might think.In summary, Mostafa suggests decoupling transactions from the block to keep the blockchain size small. However, ZmnSCPxj argues that stamped transactions are not a solution to reduce the blockchain size. The reason why old history is retained is to prove to new nodes that one is the correct owner of the current coins. This is what separates Bitcoin from previous currency systems. Stamped transactions will require a hardfork, which is risky and unlikely to be accepted by everyone. Moreover, validation becomes more expensive as the blockchain grows. Stamped transactions are larger and more expensive than unstamped transactions, making them less incentivized. Users may prefer running older versions and never upgrading to the new version that requires stamped transactions. Furthermore, validating the stamp on every node is still a cost, and it is an incentive problem if individual users are not incentivized to use it. Stamping transactions does not help reduce mempool size as resending the transaction with a fresh stamp increases bandwidth usage. The article discusses the idea of stamping transactions to keep the size of the blockchain as small as possible. However, it is argued that stamping transaction is not how one can be able to keep blockchain size low since very old history is retained to prove that you are the correct owner of the current coins when starting a new node. The proposal would require a hardfork and validation is expected to become more expensive as the blockchain grows. Stamped transactions are more expensive than unstamped transactions due to their larger size. This creates an incentives problem because users will prefer to run older versions and never upgrade to the new version that requires stamped transactions. Finally, it is pointed out that the stamp does not reduce mempool size and re-sending the same transaction with a fresh stamp increases bandwidth use.The proposed mechanism can be made into a softfork by using an unspendable `scriptPubKey` with 0 output value. For instance, a stamp could be any 0-value output whose `scriptPubKey` is `OP_0`, which should be unspendable. Post-softfork nodes would reject blocks where some transaction is stamped and the stamped `` is not within the last N blocks. Block validation now needs to memorize the last N block hashes. The mempool design currently assumes that a transaction that enters the mempool is always valid unless any UTXOs it spends have been removed.If transactions are stamped with a block that has dropped from the stamp TTL, there is an additional need to drop transactions from the mempool. Further, the creator of the transaction gains no advantage from the stamped transaction; it is others who gain an advantage (the</summary>
  </entry>
</feed>