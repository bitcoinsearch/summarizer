<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - CoinPool, exploring generic payment pools for Fun and Privacy</title>
  <updated>2025-10-11T02:31:58.778410+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/June_2020/017983_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017977_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017976_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017978_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017975_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017971_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017968_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2020/017964_CoinPool-exploring-generic-payment-pools-for-Fun-and-Privacy.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/017964.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - CoinPool, exploring generic payment pools for Fun and Privacy</title>
    <updated>2025-10-11T02:31:58.778505+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/017964.html" rel="alternate"/>
    <published>2020-06-16T05:23:01+00:00</published>
    <summary>ZmnSCPxj's message discusses various ideas related to CoinPool, multiparticipant channels, channel factories, and nodelets. The CoinPool idea allows for better flexibility in forwarding, while channel factories ensure that channels remain usable for forwarding even if one participant goes offline. The use of &quot;virtual nodes&quot; in CoinPool helps pathfinding algorithms work seamlessly, without realizing that these nodes represent the CoinPool.The email also explores the use of WabiSabi and Taproot in a CoinPool to enable interoperation with Lightning Network. This allows for the instantiation of HTLCs (or PTLCs) inside a CoinPool &quot;alias&quot; pubkey identity. If a timelock expires, the other party can request a partial signature to recover the HTLC value. If the signature share is not provided, the CoinPool is dropped onchain, instantiating the HTLC Taproot output onchain.WabiSabi is also discussed as a means to improve anonymity in CoinJoin transactions by allowing participants to pretend to be multiple people. This creates ambiguity and reduces the possibility of tracing leaves by value weight or identifying sockpuppets. The feature of equal-value leaves may come with a higher onchain cost in case of pool breakage.The CoinPool proposal involves a multiparticipant offchain update mechanism, where participants must sign off on the new state. The WabiSabi protocol can be used during the negotiation of a new state, allowing participants to perform value transfers inside the WabiSabi construction. To maintain privacy, participants can move coins randomly across two coins they own at each state update.Antoine and Jeremy have been working on payment pool designs for the Lightning Network. Antoine discussed the use of OP_CTV, while Jeremy proposed a new type of payment pool called &quot;CheckTemplateVerify (CTV) Pools.&quot; CTV pools aim to improve efficiency and security by using radix trees and allowing non-interactive any-order withdrawal. They discuss trade-offs between security and performance and the need for better definitions of non-interactivity and privacy optimization.Gleb Naumenko and a collaborator are studying privacy issues in second-layer protocols like Lightning Network. They propose CoinPool as a solution to address privacy leaks and protocol-specific metadata. CoinPool is a low-latency, offchain protocol that can improve on-chain privacy without requiring timelocking coins or extensive use of on-chain space.The email also mentions challenges in deploying CoinPools, such as scalability and the need for new on-chain primitives. However, CoinPool offers scalability benefits by reducing the UTXO set size and batching activities from different users. It provides privacy by breaking payment sender/receiver linkability and keeping internal transfers private. The proposal acknowledges the work of others in the privacy community, such as Greg Maxwell and Dave Harding, who suggested payment pools.Overall, the email discusses various ideas related to CoinPool, WabiSabi, Taproot, and payment pool designs for the Lightning Network. These ideas aim to enhance flexibility, privacy, and efficiency in off-chain transactions while addressing privacy leaks and scalability challenges.</summary>
  </entry>
</feed>