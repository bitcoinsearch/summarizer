<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - op_checktemplateverify and number of inputs</title>
  <updated>2025-09-26T15:50:46.151356+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m2a801578b5f5a2f6f02d9e78d12757b0dfa5a145">
      <author>[bitcoin-dev] op_checktemplateverify and number of inputs Billy</author>
      <timestamp>2020-01-25T01:50:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] op_checktemplateverify and number of inputs Billy" parent_id="mailing-list-2020-01-m2a801578b5f5a2f6f02d9e78d12757b0dfa5a145" anchor="ma99ec5034f7533f0fcabdcc99128d0834265da86">
      <author>Jeremy</author>
      <timestamp>2020-01-26T17:23:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Jan_2020/017598_op-checktemplateverify-and-number-of-inputs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2020/017597_op-checktemplateverify-and-number-of-inputs.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017597.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - op_checktemplateverify and number of inputs</title>
    <updated>2025-09-26T15:50:46.151827+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017597.html" rel="alternate"/>
    <published>2020-01-26T17:23:57+00:00</published>
    <summary>In an email exchange between Billy and Jeremy Rubin, the two delve into a discussion regarding the necessity of restricting the number of inputs in order to prevent TXID malleability. It is established that committing to all required information entails committing to the number of inputs in a transaction, which enables non-interactive layer 2 protocols that rely on TXID non-malleability.Billy raises the point that allowing any number of inputs could be advantageous. However, Jeremy suggests that the flexibility should be kept separate from the OP directly. He proposes using something like OP_CAT, where users can utilize an any number of inputs template by passing in the # of inputs and sequences hash as arguments to the function. Furthermore, Jeremy offers to address Billy's post on bitcointalk.org separately as it raises a different set of questions.The crux of the issue revolves around the op_ctv Bitcoin script code and the requirement to specify a number of inputs. The poster expresses skepticism regarding the need for this requirement and questions why it is being enforced. While they acknowledge the potential benefits of specifying a number of inputs, they fail to comprehend why it should be mandatory for users of the op. They propose that if the op allowed for both cases, allowing users to specify a number of inputs or allow any number, it would offer the best of both worlds.To facilitate further discussion on this matter, the poster initiates a conversation on bitcointalk.org and provides a link to the forum. Although the specific outcome they hope to achieve through this discussion remains unclear, their intention is to explore the topic in greater depth and foster dialogue among the community.</summary>
  </entry>
</feed>