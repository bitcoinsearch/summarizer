<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>ReadCompactSize without range check</title>
  <updated>2024-09-03T02:15:09.061306+00:00</updated>
  <author>
    <name>Tobin Harding 2024-09-02 23:18:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>ReadCompactSize without range check</title>
    <updated>2024-09-03T02:15:09.061341+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/ZtZHrc3XvTXEvHf6@alke/T/#u#m15f4fa202b2e64786a698d31fe0084c878c59dcd" rel="alternate"/>
    <summary>The `ReadCompactSize` function, as defined in `serialize.h`, includes an optional `range_check` parameter that is set to `true` by default. This setting ensures that the value read by the function does not exceed 0x02000000, effectively enforcing a limit that keeps the compact size value within the bounds of a 32-bit unsigned integer. An examination of the codebase reveals that there are no instances where `ReadCompactSize` is invoked with the `range_check` parameter set to `false`. This information raises a pertinent inquiry regarding the necessity of adhering to the constraints of a 32-bit integer for values encoded using CompactSize, and questions the utility of the 0xFF or 9-byte encoding scheme for compact sizes, suggesting a potential reevaluation of whether this approach remains necessary.</summary>
    <published>2024-09-02T23:18:00+00:00</published>
  </entry>
</feed>
