<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>BIP54 implementation and test vectors</title>
  <updated>2025-10-22T02:47:28.308065+00:00</updated>
  <author>
    <name>UTC | newest] 2025-10-21 15:46:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>BIP54 implementation and test vectors</title>
    <updated>2025-10-22T02:47:28.308096+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/V0qeILOW1CuH3NS2O8IUdQBK8i3o8LwzLNGf7xh1UO0S_Gzui1CpdP5NhdT3EtrW6NgqxJ538egeag6bVZoBX8C8E46ZYTCyPg1qBxkwCXs=@protonmail.com/T/#u#m26a9bf263d0cfd4b247a8226d2a72f65753effa5" rel="alternate"/>
    <summary>Antoine Poinsot recently provided an update on the Consensus Cleanup work, now known as BIP54, highlighting significant progress in its development and testing phases. A key milestone was the opening of an implementation against Bitcoin Inquisition version 29.1, which is thoroughly documented at the provided [link](0). This implementation is noteworthy for its comprehensive testing of the four proposed mitigations outlined in BIP54, serving as a foundation for generating test vectors added to the BIP54 documentation through a PR in the BIPs repository, accessible [here](1).

The test vectors introduced are extensive, covering the transaction-level sigops limit through various usage combinations and scenarios that might trigger the limit. These vectors not only include historical violations but also pathological transactions that reveal the nuances of the sigop accounting logic, originally derived from BIP16. This aspect underscores the continuity and compatibility efforts within Bitcoin's evolving protocol, given that BIP16's logic is integral to all current Bitcoin implementations.

Furthermore, the new witness-stripped transaction size restriction is meticulously tested, demonstrating the check's effectiveness across different transaction conditions, including those with and without a witness. The inclusion of historical violations enriches the test vectors, thanks to contributions from Chris Stewart, ensuring a robust evaluation of the new mechanisms introduced in BIP54.

The test vectors extend to the new timestamp restrictions, uniquely designed around the mainnet difficulty adjustment parameters. They encompass a series of mainnet header chains from genesis, evaluating each against BIP54's criteria. These chains were produced using a custom miner, detailed in a [link](2), and incorporated into the implementation as a JSON data file. Similarly, the coinbase restriction tests incorporate a chain of mainnet blocks to examine the context-dependent timelock check, generated through a similar mining process available at the same [link](2).

Poinsot is actively seeking feedback on these test vectors, especially from developers of alternative Bitcoin clients. The emphasis on compatibility with Bitcoin implementations beyond Bitcoin Core highlights a strategic goal of fostering a cohesive and unified approach to Bitcoin protocol enhancements. This initiative underlines the collaborative effort required to refine and advance the Bitcoin ecosystem, ensuring that improvements like BIP54 are comprehensively vetted and accessible for integration across diverse platforms.</summary>
    <published>2025-10-21T15:46:00+00:00</published>
  </entry>
</feed>
