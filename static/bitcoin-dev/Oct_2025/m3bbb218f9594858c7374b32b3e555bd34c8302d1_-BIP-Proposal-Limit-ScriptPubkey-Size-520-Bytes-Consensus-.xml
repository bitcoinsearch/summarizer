<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
  <updated>2025-10-31T02:50:10.008027+00:00</updated>
  <author>
    <name>Tom Harding 2025-10-30 16:10:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
    <updated>2025-10-31T02:50:10.008061+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CALeFGL0PDjtRt2rfbY4gTkoc+5oNQ0mn_obraE7PrtHuNYFpQw@mail.gmail.com/T/#m3bbb218f9594858c7374b32b3e555bd34c8302d1" rel="alternate"/>
    <summary>The discussion revolves around the implications and considerations of proposed changes to Bitcoin's core software, particularly focusing on minimizing the Unspent Transaction Output (UTXO) set size. This concern originated from a shift in optimization priorities towards mining rather than holding and transfers back in 2012, an era that did not include Satoshi among the developers making these critical changes. The debate touches on the technical repercussions such as the potential for a significant increase in UTXO set size, the necessity for network-wide resynchronization, and the substantial downtime required for reindexing nodes.

There is skepticism about the effectiveness of introducing Merkle Hash Tree (MHT) tracking as a mechanism for UTXO set reduction due to its limited impact on outputs over 520 bytes and the risk of creating a new class of scarce assets, which could be highly attractive to NFT enthusiasts. The conversation also delves into more invasive proposals beyond script size limitation, highlighting concerns over their broader impacts on Bitcoin's utility and the economic dynamics of spam transactions. It is noted that high transaction costs, driven by scarcity, hold value for certain user groups, suggesting that responses to spam must consider varied economic incentives.

Key technical suggestions include allowing a maximum scriptPubKey size within blocks to non-confiscatorily control output sizes, alongside recognizing the challenges in mitigating unintended consequences such as DoS attack vectors and preserving Bitcoin's programmability. The complexity of ensuring backward compatibility and addressing confiscatory concerns without undermining the network's integrity is acknowledged.

Further, the dialogue extends to the strategic aspect of block validation times, proposing adjustments to transaction weight limits as documented on platforms like [DelvingBitcoin.org](https://delvingbitcoin.org/t/non-confiscatory-transaction-weight-limit/1732/8). These discussions are part of a broader attempt to balance innovation with the foundational principles of Bitcoin, ensuring any changes do not disproportionately benefit or harm specific user bases.

Overall, the conversation encapsulates a nuanced examination of proposed Bitcoin core modifications, emphasizing the need for a careful approach that considers both technical feasibility and the diverse interests within the Bitcoin ecosystem.</summary>
    <published>2025-10-30T16:10:00+00:00</published>
  </entry>
</feed>
