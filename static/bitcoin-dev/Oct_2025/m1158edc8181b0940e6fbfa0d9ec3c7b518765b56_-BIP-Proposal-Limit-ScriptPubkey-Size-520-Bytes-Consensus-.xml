<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
  <updated>2025-10-23T02:30:22.953377+00:00</updated>
  <author>
    <name>moonsettler' 2025-10-22 08:07:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
    <updated>2025-10-23T02:30:22.953417+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CALeFGL0PDjtRt2rfbY4gTkoc+5oNQ0mn_obraE7PrtHuNYFpQw@mail.gmail.com/T/#m1158edc8181b0940e6fbfa0d9ec3c7b518765b56" rel="alternate"/>
    <summary>The recent discussions in the Bitcoin Development community have led to a proposal concerning the `scriptPubKey` size within each block. The suggestion is to allow up to 10,000 bytes of total `scriptPubKey` size per block. However, this would only include outputs that are larger than a specific threshold, currently proposed at 520 bytes. This approach aims to introduce a change that is technically non-confiscatory and minimizes the impact on the existing system. The code modification required to implement this rule is described as minimal, suggesting an efficient integration into the current blockchain framework.

This update, while still considered non-standard, offers a solution for those who might have unintentionally created transactions that do not comply with typical standards. The developers' intention seems to be to accommodate such cases without compromising the network's integrity or functionality. Despite its non-standard nature, this proposed adjustment appears to be a thoughtful response to potential issues faced by users, demonstrating a balance between innovation and user protection within the development community.</summary>
    <published>2025-10-22T08:07:00+00:00</published>
  </entry>
</feed>
