<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
  <updated>2025-10-04T02:24:09.401911+00:00</updated>
  <author>
    <name>Andrew Poelstra 2025-10-03 13:59:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
    <updated>2025-10-04T02:24:09.401937+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CALiT-Zo8wiZGCFeMwfd92zptw_cKz7ajMOjFWW=rdS9by3zYHQ@mail.gmail.com/T/#maf53831e66f86bde3b982fb105126a494bb48aea" rel="alternate"/>
    <summary>In a recent discussion on the Bitcoin Development Mailing List, a significant point was raised regarding the limitations of using script for purposes other than proof-of-publication, such as data storage directly in the UTXO set. It was highlighted that functionalities currently achieved through the use of scripts could be equally or more effectively accomplished using Segwit v0 or Taproot scripts. This conversation brings to light the redundancy of imposing restrictions specifically on OP_RETURN outputs for the purpose of preventing scripts from being used for data storage. The argument made clear that if restrictions were placed on OP_RETURN, users would simply migrate to one of the many alternative methods available for embedding data within scriptpubkeys. These alternatives include but are not limited to the 65 or so equivalents to OP_RETURN, progressing through options like OP_RESERVED, OP_FALSE, and the sequence `0 1 EQVERIFY` among others.

This dialogue underscores a broader concern within the Bitcoin development community regarding the futility of narrowly targeted restrictions on certain script operations. Such measures are seen as ineffective in curbing the use of scripts for unintended purposes, given the wide array of alternatives that developers might resort to. Andrew Poelstra, the Director of Blockstream Research, contributed to this conversation, emphasizing the adaptability of users in circumventing specific restrictions by shifting towards other available script functions. This exchange sheds light on the complexity of regulating script usage within the Bitcoin protocol and the challenges of enforcing limitations that can easily be bypassed by switching to different script operations.

For further details on this topic, Andrew Poelstra can be contacted via email at apoelstra@wpsoftware.net, and additional information can be found on his webpage [here](https://www.wpsoftware.net/andrew).</summary>
    <published>2025-10-03T13:59:00+00:00</published>
  </entry>
</feed>
