<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>On (in)ability to embed data into Schnorr</title>
  <updated>2025-10-08T02:28:39.772995+00:00</updated>
  <author>
    <name>Anthony Towns 2025-10-07 08:22:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>On (in)ability to embed data into Schnorr</title>
    <updated>2025-10-08T02:28:39.773027+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/e4d271ad-9ea3-41e5-96e2-6cb0118943e4n@googlegroups.com/T/#m85785a0bb24dd2628b9f61fc806238b9c2d69c7f" rel="alternate"/>
    <summary>The discussion among the programmers revolves around innovative methods for leveraging Bitcoin's scriptPubKeys and utxo set for purposes beyond simple value transfers, specifically focusing on data embedding and the potential challenges and solutions associated with it. One proposed method involves using scriptPubKeys with conditions akin to HTLC/atomic swaps, allowing for conditional execution based on either the revelation of a private key or the passing of a specified block height. This approach, however, is critiqued for potentially encouraging undesirable practices like key reuse or complicating the process for certain transactions, such as requiring cold key signatures for fund requests.

A particular scheme is detailed for embedding data within the blockchain in a cryptographically secure manner that minimizes the risk of lost funds. The process entails splitting data into blocks, calculating a series of hashes and nonces from secret keys, and signing a chain of transactions that ultimately reveal the embedded data without compromising the security of the involved private keys. This method relies on the unique hashing of each nonce and the final revelation of a specific public nonce to recover the data. Moreover, this technique suggests modifications to avoid pubkey reuse and proposes utilizing multisig transactions for more efficient data embedding.

Additionally, the discourse touches on the detectability and efficiency of this data embedding approach compared to other methods, such as OP_RETURN outputs or inscriptions. The suggested scheme aims for lower detectability and relatively higher efficiency under certain constraints, offering a novel way to incorporate additional bytes of data per block at a cost that, while not as low as other methods, presents a viable alternative for specific applications. The conversation implies a broader exploration of blockchain capabilities, pushing the boundaries of what can be achieved within the existing framework and standardness constraints of Bitcoin transactions.</summary>
    <published>2025-10-07T08:22:00+00:00</published>
  </entry>
</feed>
