<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP54 implementation and test vectors</title>
  <updated>2025-10-28T02:46:18.505269+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0">
      <author>UTC | newest]</author>
      <timestamp>2025-10-21 15:46:00+00:00</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="BIP54 implementation and test vectors 'Antoine Poinsot'" parent_id="mailing-list-2025-10-m26a9bf263d0cfd4b247a8226d2a72f65753effa5" anchor="me452efeffe3d1976b6b6d23c0d5297fcf2243d5f">
      <author>Antoine Riard</author>
      <timestamp>2025-10-27 05:21:00+00:00</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Oct_2025/m26a9bf263d0cfd4b247a8226d2a72f65753effa5_BIP54-implementation-and-test-vectors.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2025/me452efeffe3d1976b6b6d23c0d5297fcf2243d5f_BIP54-implementation-and-test-vectors.xml" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP54 implementation and test vectors</title>
    <updated>2025-10-28T02:46:18.505851+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/V0qeILOW1CuH3NS2O8IUdQBK8i3o8LwzLNGf7xh1UO0S_Gzui1CpdP5NhdT3EtrW6NgqxJ538egeag6bVZoBX8C8E46ZYTCyPg1qBxkwCXs=@protonmail.com/T/#me452efeffe3d1976b6b6d23c0d5297fcf2243d5f" rel="alternate"/>
    <published>2025-10-21 15:46:00+00:00</published>
    <summary>Antoine Poinsot recently shared an update on the Consensus Cleanup initiative, now designated as BIP54. This update marks significant progress in its development and testing, with an implementation launched against Bitcoin Inquisition version 29.1. The documentation for this implementation is detailed thoroughly at a specific [link](0), which features comprehensive testing of the four proposed mitigations outlined in BIP54. These tests have contributed to the generation of test vectors that have been added to the BIP54 documentation through a PR in the BIPs repository, available [here](1). These test vectors are extensive and cover various scenarios, including transaction-level sigops limits, highlighting both historical violations and pathological transactions. This aspect emphasizes the continuity and compatibility within Bitcoin's evolving protocol, particularly noting that the logic from BIP16 is integral to all current Bitcoin implementations.
The newly introduced witness-stripped transaction size restriction has been rigorously tested, demonstrating its effectiveness across different transaction conditions. Historical violations contribute to the robustness of these test vectors, with Chris Stewart's contributions ensuring a thorough evaluation of the new mechanisms introduced by BIP54. Moreover, the test vectors extend to new timestamp restrictions designed around the mainnet difficulty adjustment parameters and include evaluations of mainnet header chains from genesis against BIP54â€™s criteria. These chains were produced using a custom miner, details of which are provided in a [link](2), and incorporated into the implementation as a JSON data file. The coinbase restriction tests also utilize a chain of mainnet blocks to examine the context-dependent timelock check, generated through a similar mining process.
Poinsot is actively seeking feedback on these test vectors from developers of alternative Bitcoin clients, emphasizing compatibility with Bitcoin implementations beyond Bitcoin Core. This strategy aims to foster a cohesive and unified approach to Bitcoin protocol enhancements, underlining the collaborative effort required to refine and advance the Bitcoin ecosystem. Such initiatives ensure that improvements like BIP54 are comprehensively vetted and accessible for integration across diverse platforms.
In a related discussion, concerns were raised about the proposed 2500 sigops limit per transaction in BIP54 and its implications on full-node performance, considering factors such as fees, CPU time, and disk space. A hypothetical scenario was presented where an adversary could exploit this limit to create transactions that, while adhering to the new sigops limit, would still impose significant validation burdens on full nodes due to the necessity of fetching multiple UTXOs. This raises questions about the trade-off between reducing the complexity of signature operations and the potential increase in UTXO fetch operations, which may not be as trivial as presumed, especially for devices with limited resources. It was suggested that BIP54 might benefit from further clarification or adjustment regarding its impact on full-node performance metrics, acknowledging that while the new sigops limit aims to mitigate CPU DoS attacks, other dimensions such as memory management and IO operations may also warrant consideration.</summary>
  </entry>
</feed>