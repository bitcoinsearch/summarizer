<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>OP_CHECKUTXOSETHASH idea</title>
  <updated>2025-10-03T02:25:51.423541+00:00</updated>
  <author>
    <name>moonsettler 2025-10-02 22:40:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>OP_CHECKUTXOSETHASH idea</title>
    <updated>2025-10-03T02:25:51.423584+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAJowKg+et-84+BvkwE=Kjkms-gX-2peT+jvDJSXbHT-MLXan7w@mail.gmail.com/T/#m8143d44d7fc48a1efdabab9591aec4f831652cd1" rel="alternate"/>
    <summary>The email from moonsettler addresses concerns regarding the computational costliness of nodes computing and suggests a potential vulnerability to denial-of-service (DOS) attacks within Bitcoin's development. To mitigate these risks, the suggestion is made to limit UTXO set commitments to every 2016 blocks, aligning with the difficulty adjustment epochs in Bitcoin's blockchain. This would entail committing to the UTXO set either at the beginning or end of these epochs to avoid interference with mining operations. The proposed method involves calculating the hash well in advance and ensuring its consistency across checks to prevent its use in DOS attacks.

Moonsettler also highlights a unique challenge in that scripts cannot be fully validated until they are included in an actual block. This opens up the possibility for transactions that might be invalid for mining to enter the mempool, necessitating additional steps for their eviction. This situation raises questions about the potential for new types of pinning attacks that could exploit this vulnerability without incurring costs.

The email concludes with moonsettler expressing low confidence in integrating this solution directly into the script and suggests instead that it may be more appropriate to address these concerns through a soft fork targeting the coinbase transaction structure. This approach implies a preference for a more targeted and specific modification to the protocol to address the vulnerabilities discussed, rather than a broad change to the scripting language itself.</summary>
    <published>2025-10-02T22:40:00+00:00</published>
  </entry>
</feed>
