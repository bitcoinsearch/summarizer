<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
  <updated>2025-10-19T02:52:33.321549+00:00</updated>
  <author>
    <name>/dev /fd0 2025-10-18 16:54:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
    <updated>2025-10-19T02:52:33.321580+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CALeFGL0PDjtRt2rfbY4gTkoc+5oNQ0mn_obraE7PrtHuNYFpQw@mail.gmail.com/T/#m71f77a0a1db5f61337d6176f8fc2fb14dca1655d" rel="alternate"/>
    <summary>In a discussion focusing on the utilization of scriptPubkey for embedding arbitrary data within the Bitcoin network, concerns were raised regarding the potential adverse effects on the UTXO (Unspent Transaction Output) set. The argument presented suggests that if individuals are determined to use scriptPubkey for arbitrary data storage, they might resort to employing multiple outputs, akin to practices observed with DNS records. An alternative suggestion was made to utilize a different op_code to circumvent these issues.

The conversation then shifted towards the incentives for users opting to store data within the scriptPubkey, especially when considering the cost-efficiency of storing data in the witness section of a transaction. This point highlights the need for a balanced approach between enabling functionality and maintaining the efficiency and integrity of the blockchainâ€™s core structures.

For further details on these discussions, engaging with the Bitcoin Development Mailing List could provide additional insights into the ongoing debates and proposed solutions within the community.</summary>
    <published>2025-10-18T16:54:00+00:00</published>
  </entry>
</feed>
