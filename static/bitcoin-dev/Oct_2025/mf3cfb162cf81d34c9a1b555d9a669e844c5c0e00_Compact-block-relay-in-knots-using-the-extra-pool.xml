<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Compact block relay in knots using the extra pool</title>
  <updated>2025-10-16T02:33:19.965572+00:00</updated>
  <author>
    <name>UTC | newest] 2025-10-14 21:52:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Compact block relay in knots using the extra pool</title>
    <updated>2025-10-16T02:33:19.965603+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CALiT-ZoZFZskPhA6HHguOFyD4=4uEXO-mvXq+FxURO8ELDueZA@mail.gmail.com/T/#u#mf3cfb162cf81d34c9a1b555d9a669e844c5c0e00" rel="alternate"/>
    <summary>In an intriguing exploration of compact block relay within the Bitcoin network, a developer conducted tests using a specifically configured node in Knots. The configuration aimed at assessing compact block relay performance included enabling debug for compact blocks (`debug=cmpctblock`), setting no minimum fee filter (`feefilter=0`), and increasing the block reconstruction extra transaction size to 300 (`blockreconstructionextratxnsize=300`). Over approximately 10 hours, the node maintained eight full relay outbound connections, among which two were with Bitcoin Core nodes - versions 29.1 and 30.0. These nodes were notable for relaying transactions below the standard minimal fee rate of 1 satoshi per byte (sat/vB), which is typically considered the lowest fee rate that transactions are transmitted at on the network.

The experiment yielded promising results, demonstrating that 90% of blocks experienced no issues during the reconstruction process. This success rate was attributed to a lower number of transactions requiring retrieval, suggesting efficient synchronization between the tested nodesâ€™ mempools and the broader network. A specific example provided detailed metrics of block 919005's handling via compact block relay, showcasing the composition of the block as it was relayed and reconstructed. This block, identified by its hash `00000000000000000000f76ea0d9598e36231496c732a95fab75fc91c8d5bcf2`, encapsulates the effectiveness of the compact block relay mechanism under the test conditions. It was relayed with one pre-filled transaction, a significant portion of transactions (4440) directly matched from the mempool (including at least 3845 from an additional pool of transactions set aside for this purpose), and a relatively small number (235) of transactions requested from peers for block completion.

Further insights and technical details about the experiment, along with the implications for improving compact block relay efficiency, can be found in the shared post on [Uncensored Tech Substack](https://uncensoredtech.substack.com/p/compact-block-relay-with-extra-pool). Additionally, the ongoing development and proposed improvements related to this area of Bitcoin's protocol are documented through related pull requests on GitHub, specifically in the proposals [#217](https://github.com/bitcoinknots/bitcoin/pull/217) and [#218](https://github.com/bitcoinknots/bitcoin/pull/218) on the Bitcoin Knots repository.

This initiative invites feedback and further discussion from the development community to refine and enhance the compact block relay process, which is crucial for maintaining the efficiency and scalability of the Bitcoin network. The effort underscores the collaborative nature of open-source development and the continuous pursuit of optimization in blockchain technology.</summary>
    <published>2025-10-14T21:52:00+00:00</published>
  </entry>
</feed>
