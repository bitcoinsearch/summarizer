<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
  <updated>2025-10-05T02:45:03.739356+00:00</updated>
  <author>
    <name>jeremy 2025-10-04 23:12:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
    <updated>2025-10-05T02:45:03.739387+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/1e0f9843-0f08-4dea-b037-24df38bf8ed0n@googlegroups.com/T/#m209ee1e870ada73e0c5756c092d0bffefa58d2a2" rel="alternate"/>
    <summary>The discussion revolves around the optimization of taproot control block sizes within the Bitcoin protocol, specifically addressing concerns over the current limit which allows for an excessively large number of scripts, theoretically up to 340e36. The critique centers on a common misunderstanding of the purpose behind taptree's depth, which isn't aimed at directly limiting the number of script elements but rather optimizing on-chain costs by considering the likelihood of script execution. It's suggested that a more practical approach to constraining taproot should involve setting limits based on the minimum probability of a script's execution rather than on a sheer number of allowable scripts.

For instance, it's argued that if the execution probability of a script falls to one-in-4 billion, a depth of 32 would be appropriate. The choice of a 128-depth limitation is further explained by comparing it to the negligible likelihood of certain events, such as brute-forcing a key, indicating that if the chance of executing a branch is as low as (2^128 -1)/2^128, it should be considered sufficiently unlikely to occur. This perspective suggests that constraints on taproot should be nuanced and informed by a balance between security, efficiency, and the realistic probabilities of script execution, rather than by arbitrary numerical limits.</summary>
    <published>2025-10-04T23:12:00+00:00</published>
  </entry>
</feed>
