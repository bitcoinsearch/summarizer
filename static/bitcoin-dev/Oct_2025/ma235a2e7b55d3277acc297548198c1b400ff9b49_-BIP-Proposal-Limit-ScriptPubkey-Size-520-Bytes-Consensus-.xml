<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
  <updated>2025-10-04T02:24:18.967486+00:00</updated>
  <author>
    <name>jeremy 2025-10-03 13:35:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Limit ScriptPubkey Size &gt;= 520 Bytes Consensus.</title>
    <updated>2025-10-04T02:24:18.967513+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CALiT-Zo8wiZGCFeMwfd92zptw_cKz7ajMOjFWW=rdS9by3zYHQ@mail.gmail.com/T/#ma235a2e7b55d3277acc297548198c1b400ff9b49" rel="alternate"/>
    <summary>In the ongoing discussion about potential restrictions on Bitcoin's scriptpubkey sizes, a proposal has been put forward that considers implementing a temporary restriction rather than a permanent one. The idea is to introduce what is referred to as a "sunsetting" restriction, which would be active for a predetermined number of blocks, equivalent to a set period like 2, 5, or 10 years. This approach stems from the acknowledgment that our understanding of Bitcoin transaction programming and the utility of large scriptpubkeys is still in its infancy. There's an openness to the possibility that compelling uses for larger scriptpubkeys might emerge, especially considering that interactions between different key types could reveal non-obvious benefits.

One argument in favor of allowing larger scriptpubkeys involves scenarios where a significant script path is essential within a two-transaction protocol, and the initiating party must bear the inclusion cost. In such cases, ensuring the inclusion during the first transaction could alleviate the financial burden, except for the satisfaction cost. Although this example could be debated, it highlights the principle that the lack of current evidence for a use case does not prove that no such use case exists or will ever exist.

The proposal suggests adopting an auto-renewing restriction mechanism with a 1-2 year review cycle. This would allow the community to reassess and potentially remove the restriction if future developments or needs justify the use of larger scriptpubkeys. This strategy differs from previous temporary soft fork proposals, which typically aimed at removing access to an opcode expected to be in demand, by setting up a provisional barrier against actions believed to be unlikely in the interim, with the option to lift this barrier should circumstances change.</summary>
    <published>2025-10-03T13:35:00+00:00</published>
  </entry>
</feed>
