<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - # error "Bitcoin cannot be compiled without assertions." &lt;&lt;&lt;&lt;NOT</title>
  <updated>2023-08-01T09:26:34.933676+00:00</updated>
  <author>
    <name>Jeff Garzik 2014-06-07 00:57:04+00:00</name>
  </author>
  <author>
    <name>Pieter Wuille 2014-06-06 08:40:20+00:00</name>
  </author>
  <author>
    <name>Wladimir 2014-06-06 08:29:13+00:00</name>
  </author>
  <author>
    <name>Jeff Garzik 2014-06-04 12:15:08+00:00</name>
  </author>
  <author>
    <name>Wladimir 2014-06-04 12:13:15+00:00</name>
  </author>
  <author>
    <name>Mike Hearn 2014-06-04 10:51:15+00:00</name>
  </author>
  <author>
    <name>Jannis Froese 2014-06-04 10:42:37+00:00</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-06-04 10:31:24+00:00</name>
  </author>
  <author>
    <name>Mike Hearn 2014-06-04 10:20:43+00:00</name>
  </author>
  <author>
    <name>Gregory Maxwell 2014-06-04 10:15:04+00:00</name>
  </author>
  <author>
    <name>Wladimir 2014-06-04 10:12:29+00:00</name>
  </author>
  <author>
    <name>Mike Hearn 2014-06-04 09:51:31+00:00</name>
  </author>
  <author>
    <name>Ron 2014-06-03 19:07:01+00:00</name>
  </author>
  <link href="bitcoin-dev/June_2014/005988_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005969_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005968_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005957_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005956_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005955_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005954_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005953_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005952_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005951_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005950_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005949_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005944_-error-Bitcoin-cannot-be-compiled-without-assertions-NOT.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - # error "Bitcoin cannot be compiled without assertions." &lt;&lt;&lt;&lt;NOT</title>
    <updated>2023-08-01T09:26:34.934641+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-June/005944.html" rel="alternate"/>
    <summary>According to Jeff Garzik, a Bitcoin core developer and open source evangelist, it is important to compile in as many cheap, compiler-predictable asserts as possible into the production runtime. Expensive diagnostics should be compiled in and disabled by default at runtime to avoid slowing down the system. Jannis Froese suggested changing the current use of asserts to a definition that is independent of NDEBUG and introducing a second class of debugging asserts exclusively for expensive, redundant checks. These changes would resolve most concerns about the current use of asserts. Jannis Froese also recommended that assertion errors be handled differently, such as proposing a -reindex instead of raising an assertion error in certain cases. The writer of an email exchange agrees with the kernel's policy of using lightweight assertions and suggests using the glog library's CHECK macros to make software more robust. The current assertion system in Bitcoin Core is designed to prevent incorrect behavior, but it comes at the cost of meeting performance requirements. Assertions are intended for checks like ensuring a hash hasn't changed or that data structures are in sync. There have been concerns about the current use of assertions, and some suggest introducing debugging asserts exclusively for expensive, redundant checks. It is common for professional codebases to require assertions to be enabled, and Bitcoin Core currently fails to build if assertions are disabled. In a conversation from June 2014, Mike Hearn discusses the use of assertions with side effects in code. He explains that the codebase no longer uses them, but still requires them to be enabled to catch errors. He recommends using the glog library's CHECK macros, which print stack traces when they fail. In another email conversation, it is revealed that Ron's email was being spamfoldered due to Yahoo's DMARC policy and broken SF.net mailing list software. It is suggested to move away from SF.net for hosting mailing lists. The use of assert() in code is discussed, and it is stated that assert() should have no side effects. Bitcoin Core currently requires assertions to be enabled in order to build. The issue with the Bitcoin code for 0.9.x regarding assertions has been addressed through a commit and code with all side effects removed. Unit tests are available, along with resources on building Bitcoind.exe and alternate coin-qt.exe. The problem with assert() having side effects is explained in a book titled "Gotcha #28 Side Effects". It is questioned why these coding practices were not fixed earlier.</summary>
    <published>2014-06-07T00:57:04+00:00</published>
  </entry>
</feed>
