<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Future Feature Proposal - getgist</title>
  <updated>2025-10-11T02:27:22.185571+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/June_2014/005965_Future-Feature-Proposal-getgist.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005964_Future-Feature-Proposal-getgist.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005963_Future-Feature-Proposal-getgist.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005961_Future-Feature-Proposal-getgist.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2014/005960_Future-Feature-Proposal-getgist.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-June/005960.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Future Feature Proposal - getgist</title>
    <updated>2025-10-11T02:27:22.185675+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-June/005960.html" rel="alternate"/>
    <published>2014-06-05T19:34:15+00:00</published>
    <summary>In an email exchange, Richard Moore suggests using the name &quot;getcheckpoints()&quot; as a function in Bitcoin, but finds it too long. He proposes using &quot;getheaders()&quot; instead to quickly grab headers before downloading full blocks. However, Pieter Wuille argues against the use of &quot;getgist()&quot;, stating that the reference client's design focuses on validating received data as soon as possible. Pieter explains that &quot;getheaders()&quot; allows for immediate validation of headers and the building of a tree structure locally. This enables requesting blocks along the good branches of the tree in parallel from multiple peers. Pieter adds that there can be two independent synchronization mechanisms: downloading headers and validating them, and downloading blocks corresponding to validated headers.Richard Moore, the founder of Genetic Mistakes Software Inc., has been using &quot;getheaders()&quot; in their thick client to quickly grab all the headers before downloading full blocks. They believe there is a case for a &quot;getgist()&quot; call, where a gist of segment count 50 could be used to request 50 &quot;getblocks()&quot; each with a block_locator of one hash from the gist, providing 25,000 block hashes. The writer was considering using names like &quot;getcheckpoints()&quot; but found them too long.Richard Moore reaches out to the Bitcoin development team with an idea for implementing a &quot;getgist()&quot; command that would be fully backward compatible. The inputs to &quot;getgist()&quot; would be similar to &quot;getheaders()&quot; with an additional field, segment_count. The response would be a spaced out headers message, with block hashes aligned to every 2000th block from the first block hash. This proposed method could significantly increase the speed of syncing block headers.The discussion revolves around optimizing &quot;getheaders()&quot;, a function used by Simplified Payment Verification (SPV) clients in Bitcoin. The function allows SPV clients to download blocks without downloading the entire blockchain. A Bitcoin developer proposes a new command, &quot;getgist()&quot;, which could speed up the process of syncing block headers. The developer is currently testing the command to determine its potential speed gains.</summary>
  </entry>
</feed>