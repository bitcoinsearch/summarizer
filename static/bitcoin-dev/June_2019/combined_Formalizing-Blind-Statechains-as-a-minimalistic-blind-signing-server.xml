<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Formalizing Blind Statechains as a minimalistic blind signing server</title>
  <updated>2025-09-26T16:04:22.148724+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="ma9f374b335c4f7217c638b93a58fec7e6b61dc32">
      <author>[bitcoin-dev] Formalizing Blind Statechains as a minimalistic blind signing server Ruben Somsen</author>
      <timestamp>2019-06-04T11:28:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Formalizing Blind Statechains as a minimalistic blind signing server Ruben Somsen" parent_id="mailing-list-2019-06-ma9f374b335c4f7217c638b93a58fec7e6b61dc32" anchor="maefc0e43d76b511d6c696cc2e4f77c26719d93af">
      <author>ZmnSCPxj</author>
      <timestamp>2019-06-06T00:09:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="ZmnSCPxj" parent_id="mailing-list-2019-06-maefc0e43d76b511d6c696cc2e4f77c26719d93af" anchor="ma7e715d8bea4e48765a8eb0a54dfe33151adf63e">
      <author>Ruben Somsen</author>
      <timestamp>2019-06-06T05:20:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="3" position="3" reply_to="Ruben Somsen" parent_id="mailing-list-2019-06-ma7e715d8bea4e48765a8eb0a54dfe33151adf63e" anchor="ma9164a882d97433f58c390fd37ef8e77e181bb4f">
      <author>ZmnSCPxj</author>
      <timestamp>2019-06-06T06:31:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="4" position="4" reply_to="ZmnSCPxj" parent_id="mailing-list-2019-06-ma9164a882d97433f58c390fd37ef8e77e181bb4f" anchor="m3d22f2ccd25073d244ede2ccc4c8d571fda6acb9">
      <author>Ruben Somsen</author>
      <timestamp>2019-06-12T21:26:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="5" position="5" reply_to="Ruben Somsen" parent_id="mailing-list-2019-06-m3d22f2ccd25073d244ede2ccc4c8d571fda6acb9" anchor="me0bea46e1e218906823d4e1f2e04c7c1e69f1fb4">
      <author>ZmnSCPxj</author>
      <timestamp>2019-06-13T01:22:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="6" position="6" reply_to="ZmnSCPxj" parent_id="mailing-list-2019-06-me0bea46e1e218906823d4e1f2e04c7c1e69f1fb4" anchor="m00d31d89020ee377bda0931c979eca1282c111da">
      <author>Ruben Somsen</author>
      <timestamp>2019-06-14T07:18:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/June_2019/017029_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017026_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017025_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017010_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017009_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017008_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2019/017005_Formalizing-Blind-Statechains-as-a-minimalistic-blind-signing-server.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017005.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Formalizing Blind Statechains as a minimalistic blind signing server</title>
    <updated>2025-09-26T16:04:22.149656+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-June/017005.html" rel="alternate"/>
    <published>2019-06-14T07:18:27+00:00</published>
    <summary>The conversation between Ruben Somsen and ZmnSCPxj revolves around the concept of Statechains, which allows for off-chain transfer of UTXO ownership. They discuss the issues with channel factories, such as the &quot;Stale Factory&quot; and &quot;Broken Factory&quot; problems, and how Statechains can address these problems by utilizing `SIGHASH_NOINPUT`. Privacy concerns are also considered, and they agree that combining Statechains with MuSig is the best approach. Ruben prefers to keep the system script-free, but ZmnSCPxj suggests adding a separate smart contracting layer like Smart Contracts Unchained (SCU). They note that any updateable off-chain cryptocurrency system can achieve what Statechains does, and suggest presenting further transactions to the system in order to append them to existing unilateral-case transactions and cut-through on the next update.In their email conversation, Ruben and ZmnSCPxj discuss the problems with channel factories and propose using `SIGHASH_NOINPUT` for all unilateral paths to address these issues. They also discuss potential privacy concerns if `SIGHASH_ANYPREVOUT` requires a chaperone signature. While Ruben is not in favor of adding scripting, he suggests incorporating Smart Contracts Unchained (SCU) as a separate smart contracting layer. They highlight that anything that can be done with a UTXO on-chain can also be done off-chain via Statechains or other updateable off-chain systems like Spillman, Decker-Wattenhofer, Poon-Dryja, or Decker-Russell-Osuntokun. Trust can be distributed by turning the server into a multisig threshold key. Ruben shares an early draft of Statechains with ZmnSCPxj, explaining how it allows for off-chain transfer of Bitcoin UTXOs using blind signatures. The use of blind signatures makes it possible to transfer the signing rights of a private key without changing the key itself. Ruben proposes the use of blind signature servers with two functions that users can call. He also mentions that Statechains can still make use of the Decker-Wattenhofer construction instead of the Decker-Russell-Osuntokun construction (&quot;eltoo&quot;), as fewer updates are needed for Statechains. Trust can be distributed by turning the server into a multisig threshold key, ensuring security on par with federated sidechains.Ruben suggests using blind signatures to transfer ownership of a Bitcoin UTXO off-chain without changing the key itself. The server would sign blindly and be unaware of what it's signing. Trust can be distributed by turning the server into a multisig threshold key, making security similar to federated sidechains. The Decker-Wattenhofer construction can be used instead of &quot;eltoo&quot; for Statechains. However, there is a possibility of an exit scam once a few significant swaps are in position to be stolen.Statechains allow for the transfer of UTXOs off-chain with the help of a Statechain entity without giving them full custodial control. Ruben Somsen proposes using blind signatures to make the entity unaware of what it's signing. The functionality involves a blind signing server with two functions for users to call. Assuming the server is honest, this allows for the transfer of signing rights without changing the key. The primary use case is transferring ownership of a Bitcoin UTXO off-chain using an eltoo tx. Trust can be distributed by turning the server into a multisig threshold key, providing security comparable to federated sidechains. The blind signing server functionality is not specific to Bitcoin and can be used for non-cryptocurrency related purposes as well.</summary>
  </entry>
</feed>