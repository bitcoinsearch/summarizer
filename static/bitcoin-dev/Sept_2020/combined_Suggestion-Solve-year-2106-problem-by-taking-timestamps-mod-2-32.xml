<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Suggestion: Solve year 2106 problem by taking timestamps mod 2^32</title>
  <updated>2025-09-25T23:07:41.313929+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Oct_2020/018251_Suggestion-Solve-year-2106-problem-by-taking-timestamps-mod-2-32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2020/018172_Suggestion-Solve-year-2106-problem-by-taking-timestamps-mod-2-32.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018172.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Suggestion: Solve year 2106 problem by taking timestamps mod 2^32</title>
    <updated>2025-09-25T23:07:41.313978+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-September/018172.html" rel="alternate"/>
    <published>2020-10-16T21:58:20+00:00</published>
    <summary>In a Bitcoin-dev email thread, user yanmaani has suggested an amendment to the timestamp rules in the Bitcoin network. Currently, there are certain rules in place for block timestamps - they must not be lower than the median of the last 11 blocks, greater than the current time plus two hours, or greater than 2^32, which would cause Bitcoin to &quot;die&quot; around February 7th, 2106.Yanmaani's proposed solution involves treating block headers as having a 64-bit timestamp. The requirement is that the difference between the timestamp and the median timestamp of the past 11 blocks should be at least one and at most 2^32. To achieve this, the higher 32 bits of the timestamp are set equal to the median of the past 11 blocks on deserialization. If this violates the rule mentioned above, it is set one higher.User Pieter believes that Yanmaani's solution is in line with what will eventually be addressed and thinks it may be worth considering as a BIP (Bitcoin Improvement Proposal) in the future.Currently, Bitcoin faces a problem with its timestamp rules. There are restrictions that prevent the block timestamp from being lower than the median of the last 11 blocks, greater than the current time plus two hours, or greater than 2^32. This means that if no timestamp below 2^32 exceeds the median of the last 11 blocks, Bitcoin would &quot;die&quot; on or about February 7, 2106.One proposed solution to this problem is to change the rules so that the block timestamp plus k*2^32 may not be lower than the median of the last 11 blocks and may not be greater than the current time plus two hours. It is important to note that k is an integer with the same value for the calculations of both Rule 1 and Rule 2. However, this solution would cause a hardfork in 2106, approximately 85.5 years from now, and it is expected that 95% of nodes would have updated by then.Another proposed solution is to use 64-bit timestamps. However, this would break compatibility with other software that has specific expectations of header fields, such as ASICs' firmware. Furthermore, this solution would cause a hardfork before the date of timestamp overflow, making it less appropriate.It remains to be seen whether Yanmaani's idea is worth considering as a BIP. This discussion highlights the challenges faced by Bitcoin in relation to its timestamp rules and the potential solutions that could be explored in order to address these issues.</summary>
  </entry>
</feed>