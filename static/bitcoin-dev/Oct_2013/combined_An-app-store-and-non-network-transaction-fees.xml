<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - An &quot;app store&quot; and non-network transaction fees</title>
  <updated>2025-10-19T02:57:05.813789+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Oct_2013/003356_An-app-store-and-non-network-transaction-fees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2013/003223_An-app-store-and-non-network-transaction-fees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2013/003222_An-app-store-and-non-network-transaction-fees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2013/003220_An-app-store-and-non-network-transaction-fees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2013/003219_An-app-store-and-non-network-transaction-fees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2013/003216_An-app-store-and-non-network-transaction-fees.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2013/003213_An-app-store-and-non-network-transaction-fees.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003356.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003356.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003356.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003356.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003356.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003356.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003356.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003356.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003356.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - An &quot;app store&quot; and non-network transaction fees</title>
    <updated>2025-10-19T02:57:05.813875+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-October/003356.html" rel="alternate"/>
    <published>2013-10-18T11:56:09+00:00</published>
    <summary>A v1 API for managing pledges using Bitcoin has been released. The announcement was made by Wendell on the BitcoinTalk forum, stating that there are currently no fees and only basic features available. Mike Hearn expressed interest in the idea. Contact information for grabhive.com, Twitter, and a GPG key were provided.To use Bitcoin for managing pledges, people can either use a dedicated app or a wallet with the right features. Each option has its own pros and cons. bitcoinj makes it easy to create a new GUI wallet app written in Java. Programming contracts can be done through the link provided for Working With Contracts on the bitcoinj wiki.On Sep 5, 2013, Mike Hearn and Wendell discussed the idea of using assurance contracts to fund a public good. They referred to the 5-step model for assurance contracts described on the Bitcoin wiki and used the example of &quot;Facebook contact synchronization&quot; with a target of 50 BTC. However, they had no experience with the required scripting language. Wendell asked for an example and clarification on donor requirements, to which Hearn responded that it was a bit complicated and required software development. He also suggested that assurance contracts could be a good way to fund complex projects.The email conversation also discussed the idea of a voting system for features using Bitcoin, where users vote by sending funds to a corresponding address. Assurance contracts were considered as a funding method for complex projects. However, implementing these ideas would require significant software development. The conversation then shifted to the potential burden on users if the Bitcoin network were to start relaying blocks. It was pointed out that mobile and tablet devices have different capabilities and limitations compared to desktop computers and laptops. Running Bitcoin software in the background on these devices could negatively impact battery life and bandwidth usage. One solution suggested was using a separate device, such as a Raspberry Pi, to donate to the network without affecting the performance of the primary device.In another email conversation, Mike Hearn and an unknown recipient discussed various aspects of an app store for Bitcoin. Mike suggested thinking of the app store as a set of affiliate schemes, where businesses must have an affiliate scheme in place to be placed into the apps section. Users who refer a lot of users to that business will receive referral bonuses. The apps should be online so businesses can retain control of their features and brand. Hive also plans to have a submission/review process to ensure user experience continuity and monitor potential exploits. They plan to have a public repository for applications maintained by them. One downside is that technical judgment may be distorted if projects heavily push certain businesses due to income dependence. Another alternative funding model suggested was allowing users to bid on assurance contracts for feature development. This would allow the community to direct development and feel directly involved. However, no recurring income could support future endeavors. The use of bitcoinj with an integrated VM for the app's framework was also discussed. It was noted that relying on random end-users donating CPU time or bandwidth to the network is not ideal.In the same email exchange, Wendell proposed a new approach to monetizing apps, where businesses would need to have an affiliate scheme in place to be placed in the apps section. App developers could earn referral bonuses from businesses when they refer users to them through their app. This funding model is compatible with openness but can distort technical judgment. Another alternative funding model suggested was allowing users to bid on assurance contracts for feature development, which would allow the community to direct development and feel directly involved. The use of bitcoinj with an integrated VM was discussed, with the main advantage being SPV. However, any schemes relying on random end-users donating CPU time or bandwidth to the network may not be feasible. Bitcoin might become more like Tor, with relays run on dedicated servers by people with knowledge and community involvement.The OS X wallet Hive has an integrated application platform that allows new users to discover Bitcoin businesses such as exchanges, merchants, and games. The locally hosted HTML/JS applications feature stripped-down UIs displayed in a mobile-proportioned WebKit frame inside of Hive itself. Transaction requests within apps trigger native Cocoa dialogue boxes for a secure experience. The team hopes to sustain themselves via small fees on transactions within the app platform but wants to be as ethical and decentralized as possible. Tracking user behavior and sending bills or having users send micro-transactions are not favored approaches. The team plans to release everything as free software under a GPL license, including the app store and the apps themselves. They will be using bitcoinj with an integrated VM for the time being due to SPV, but they would prefer to support the network more through ideas like partial UTXO sets. The team will be attending a conference in Amsterdam on the 27th of this month for further discussions.</summary>
  </entry>
</feed>