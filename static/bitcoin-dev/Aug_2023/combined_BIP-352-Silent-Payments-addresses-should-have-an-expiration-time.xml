<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP-352 Silent Payments addresses should have an expiration time</title>
  <updated>2025-09-25T23:09:08.649300+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Aug_2023/021874_BIP-352-Silent-Payments-addresses-should-have-an-expiration-time.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021864_BIP-352-Silent-Payments-addresses-should-have-an-expiration-time.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021855_BIP-352-Silent-Payments-addresses-should-have-an-expiration-time.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021854_BIP-352-Silent-Payments-addresses-should-have-an-expiration-time.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021852_BIP-352-Silent-Payments-addresses-should-have-an-expiration-time.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021851_BIP-352-Silent-Payments-addresses-should-have-an-expiration-time.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021850_BIP-352-Silent-Payments-addresses-should-have-an-expiration-time.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021853_BIP-352-Silent-Payments-addresses-should-have-an-expiration-time.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021849_BIP-352-Silent-Payments-addresses-should-have-an-expiration-time.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021849.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP-352 Silent Payments addresses should have an expiration time</title>
    <updated>2025-09-25T23:09:08.649412+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021849.html" rel="alternate"/>
    <published>2023-08-10T20:58:00+00:00</published>
    <summary>The proposal suggests implementing an expiration field for silent payment addresses in Bitcoin wallets. This would prevent potential loss of funds by giving addresses a predetermined lifespan. The expiration field follows a custom compact encoding scheme that allows for different levels of granularity and maximum expiration periods. The byte length ranges from 1 to 8, with the number of usable bits increasing as the byte length increases. This flexibility ensures that various expiration periods, such as years and weeks, can be accommodated. One advantage of this encoding scheme is its ability to degrade cleanly over time, so it will continue to function properly even after many years of use. Block-based expiration is also included to enable compatibility with operations like OP_CLTV OP_VAULT_RECOVER or OP_CLTV OP_CHECKSIG.The context does not specify the reason behind the chosen 180-year limit, but it can be assumed that this timeframe is practical and avoids excessive speculation. However, there are arguments for extending the planning horizon beyond 180 years, especially for addressing long-term challenges like climate change and resource depletion. It is important to find a balance between short-term practicality and long-term vision when determining the planning horizon. The choice involves trade-offs and should consider the specific context and goals of decision-making processes.The email discusses the need for an expiration mechanism for silent payment addresses in Bitcoin wallets. It proposes using a period of 2^24 days, equivalent to 45,000 years or 2 bytes, allowing for an expiration period of 180 years. The email recommends setting a default expiration period of 1 year for newly created addresses and suggests that transactions to expired addresses should fail with a message stating &quot;address expired&quot;. The concept of expiration can also be applied to Lightning invoices. Overall, implementing an expiration mechanism is crucial to prevent fund loss and maintain the integrity of the Bitcoin system. By doing so, wallets can offer users a safer and more reliable experience.</summary>
  </entry>
</feed>