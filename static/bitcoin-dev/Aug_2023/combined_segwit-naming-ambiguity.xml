<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - segwit naming ambiguity</title>
  <updated>2023-08-12T01:48:03.298921+00:00</updated>
  <author>
    <name>Andrew Poelstra 2023-08-11 13:45:35+00:00</name>
  </author>
  <author>
    <name>Pavol Rusnak 2023-08-11 10:06:22+00:00</name>
  </author>
  <author>
    <name>Antoine Poinsot 2023-08-11 07:49:15+00:00</name>
  </author>
  <author>
    <name>symphonicbtc 2023-08-11 07:38:13+00:00</name>
  </author>
  <author>
    <name>Tobin Harding 2023-08-11 04:45:57+00:00</name>
  </author>
  <link href="bitcoin-dev/Aug_2023/021879_segwit-naming-ambiguity.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021878_segwit-naming-ambiguity.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021877_segwit-naming-ambiguity.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021876_segwit-naming-ambiguity.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021875_segwit-naming-ambiguity.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - segwit naming ambiguity</title>
    <updated>2023-08-12T01:48:03.298988+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021875.html" rel="alternate"/>
    <summary>The email discusses the naming and functionality of the `is_segwit()` function in relation to different types of Bitcoin transactions. The sender suggests that `is_segwit()` should apply to all segwit versions, including p2tr outputs. They propose a clean API design that includes functions like `segwit_version()`, `is_p2wpkh()`, `is_p2tr()`, and `is_p2wsh()` to differentiate between script types. Another suggestion is to refer to version 0 segwit as "v0". The sender also mentions Murch's BIP as a potential source for better naming conventions. The context emphasizes the need to consider witness programs nested inside P2SH and clarifies that these should be considered segwit as they have segregated witness data. It is suggested that documentation explicitly explains how these functions behave for different program types. Finally, the sender asks for input from OG bitcoin API designers on whether `is_segwit()` should return true or false for p2tr transactions and if there is an official or widely used name for segwit v0.</summary>
    <published>2023-08-11T13:45:35+00:00</published>
  </entry>
</feed>
