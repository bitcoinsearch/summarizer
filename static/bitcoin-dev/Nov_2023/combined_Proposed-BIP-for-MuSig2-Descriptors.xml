<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Proposed BIP for MuSig2 Descriptors</title>
  <updated>2025-09-25T23:08:29.902581+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Nov_2023/022132_Proposed-BIP-for-MuSig2-Descriptors.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/021989_Proposed-BIP-for-MuSig2-Descriptors.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-November/022132.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Proposed BIP for MuSig2 Descriptors</title>
    <updated>2025-09-25T23:08:29.902688+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-November/022132.html" rel="alternate"/>
    <published>2023-11-07T11:34:46+00:00</published>
    <summary>The correspondence from Salvatore underscores a critical evaluation of the proposed Bitcoin Improvement Proposal (BIP) draft for MuSig2 descriptors, a new addition to Bitcoin Core intended to streamline the process for multiple signers to jointly create a single signature. The BIP draft, found on GitHub, introduces descriptors that offer an abstraction layer for defining sets of addresses and scripts within Bitcoin software. The proposal details syntax, semantics, and usage examples of MuSig2 descriptors to ensure standardization and ease of implementation for developers.
Salvatore's main point of contention lies in the utility of supporting KEY expressions with ranged derivations in the musig descriptor. He emphasizes the inefficiency of requiring each signer to derive the child xpub for each key and execute the KeyAgg algorithm multiple times when spending inputs. He proposes a more streamlined approach where KeyAgg is executed once for all inputs by appending the derivation path after the musig policy. This suggestion aims to reduce performance impact for signing devices and simplifies the creation of descriptor parsers.
The draft itself, along with the rationale behind the proposed structure and function of MuSig2 descriptors, is accessible through the provided GitHub link. Additionally, there is an active pull request to include this BIP draft in the official list of BIPs, which can be examined via the second link shared in the email.
In conclusion, while the overall goal of the BIP draft is to facilitate the use of MuSig2 descriptors, Salvatore advocates for a minimalistic approach that eschews unnecessary complexity and computational overhead unless justified by specific use cases. He suggests that a discussion on potential use cases and associated trade-offs may be beneficial if included in the BIP proposal, ensuring that the standard remains both practical and efficient.</summary>
  </entry>
</feed>