<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Removing checkpoints in Bitcoin Core v30</title>
  <updated>2025-04-29T02:49:04.230638+00:00</updated>
  <author>
    <name>Sjors Provoost 2025-04-28 11:34:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Removing checkpoints in Bitcoin Core v30</title>
    <updated>2025-04-29T02:49:04.230671+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/F8E9B25A-5198-4A5E-B3D7-9DAD6B709825@sprovoost.nl/T/#u#me6386f7ba6b6b2d7abe0c8566a34e682db97f592" rel="alternate"/>
    <summary>The recent update to Bitcoin Core, scheduled for its v30 release this fall, involves significant changes regarding the removal of checkpoints and all related support code. This decision stems from the evaluation that checkpoints, initially introduced to safeguard against low proof-of-work header spam attacks, have become obsolete. The obsolescence is attributed to the introduction of headers pre-sync functionality in v24, which efficiently mitigates such threats without necessitating checkpoints. Moreover, the consensus within the development community leans against the addition of new checkpoints due to their insufficiency in providing adequate security against these attacks.

The discussion also touches on the broader implications of removing checkpoints, especially considering the potential for network splits caused by extremely large reorganizations (reorgs). Such reorgs, albeit highly unlikely and humorously attributed to outlandish scenarios involving aliens or the NSA, could theoretically cause a divergence between the current and older versions of Bitcoin Core and other Bitcoin implementations that still enforce checkpoints. This divergence underscores a critical vulnerability in the network's resilience against profound disruptions.

In light of these considerations, there's an acknowledgment of the existential threat these scenarios pose to Bitcoin's value and utility. The notion that Bitcoin would be deemed a total loss if subjected to such catastrophic events reflects a pragmatic view of its robustness. However, the proposal for a Bitcoin Improvement Proposal (BIP) to address these eventualities suggests a pathway forward. This BIP could outline measures to restore network consistency in the wake of such disruptions and recommend the permanent activation of certain soft fork rules from the genesis block in absence of the last checkpoint header. This approach signifies a proactive stance towards maintaining Bitcoin's integrity amidst theoretical threats to its continuity and stability.

For more information on the specifics of the pull request and the technical rationale behind these decisions, references to the original discussions and proposed changes can be found at [Bitcoin Core Pull Request](https://github.com/bitcoin/bitcoin/pull/0) and [Headers Pre-Sync Functionality](https://github.com/bitcoin/bitcoin/pull/1).</summary>
    <published>2025-04-28T11:34:00+00:00</published>
  </entry>
</feed>
