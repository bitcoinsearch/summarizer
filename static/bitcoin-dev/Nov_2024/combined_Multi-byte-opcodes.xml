<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Multi-byte opcodes</title>
  <updated>2024-11-19T02:26:52.729133+00:00</updated>
  <author>
    <name>Ethan Heilman 2024-11-18 18:54:00+00:00</name>
  </author>
  <author>
    <name>Brandon Black 2024-11-18 17:15:00+00:00</name>
  </author>
  <author>
    <name>Garlo Nicon 2024-11-18 15:10:00+00:00</name>
  </author>
  <author>
    <name>Weikeng Chen 2024-11-16 00:45:00+00:00</name>
  </author>
  <link href="bitcoin-dev/Nov_2024/mf887358af988471de6adb2bb970d75c93f118be3_Multi-byte-opcodes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2024/me7d23343fe440477941787abe3e2d7cbf83cc3e6_Multi-byte-opcodes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2024/ma4f9b12237f9da1a20f7df7bedd190ce9dd3893a_Multi-byte-opcodes.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2024/mab476bda0d92377d10cd7fb74d133991a5ddbbb4_Multi-byte-opcodes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Multi-byte opcodes</title>
    <updated>2024-11-19T02:26:52.729203+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAEM=y+VpeEwqWtXqs+RpOFrO=WGzbSkPEEqBqBxc-87Z4ruh2g@mail.gmail.com/T/#mf887358af988471de6adb2bb970d75c93f118be3" rel="alternate"/>
    <summary>The discussion on enhancing Bitcoin's opcode functionality continues with a focus on introducing multi-byte opcodes as a solution to the issue of depleting No Operation codes (NOPs). This method, proposed in response to concerns about the unsustainable practice of sacrificing NOPs for new functionalities, suggests using an opcode—tentatively named OP_OP, with alternatives like OP_SETOP or OP_NEXT considered—that would allow subsequent bytes to be interpreted as new opcodes. This approach not only aims to conserve NOPs but also introduces a flexible system for extending opcode functionality. It is proposed that three bytes be used for representation, acknowledging that most basic user needs are already covered by existing opcodes, and thus, new additions would target specific, less frequently needed functions.

There is ongoing debate over whether to implement minimal rules for the new opcode system to provide structure or to allow for unrestricted flexibility. The proposal also suggests that unenabled multi-byte opcodes should default to OP_SUCCESS to ensure continuity of operation. This shifts the focus from the scarcity of NOPs to the utility and application scope of potential new opcodes, highlighting the innovative nature of this proposal. However, there is recognition within the proposal that similar suggestions may have been previously discussed within the community, though finding such discussions in the mailing list’s history may be challenging.

The proposal is open to feedback and aims to engage the community in dialogue about sustainable ways to enhance opcode functionality. For further details and to contribute to the discussion, interested individuals can refer to the original thread on the Bitcoin Development Mailing List, available [here](https://groups.google.com/g/bitcoindev/c/usHmnXDuJQc/m/hhtvAjSdCgAJ).</summary>
    <published>2024-11-18T18:54:00+00:00</published>
  </entry>
</feed>
