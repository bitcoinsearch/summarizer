<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>File Format for Wallet Inheritance and Recovery</title>
  <updated>2024-11-05T02:24:43.495568+00:00</updated>
  <author>
    <name>Robert Netzke 2024-11-04 18:29:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>File Format for Wallet Inheritance and Recovery</title>
    <updated>2024-11-05T02:24:43.495601+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/4c51d18b-2444-4939-8f12-d0abe6d11e20n@googlegroups.com/T/#u#m0927acdfbd44f01a5509d914c9d12e44f95fe033" rel="alternate"/>
    <summary>The post on [Delving Bitcoin](https://delvingbitcoin.org/t/file-format-for-recovering-descriptor-wallets/1115) introduces a proposed file format for importing and exporting descriptor-based wallets, which the author suggests might be suitable as a Bitcoin Improvement Proposal (BIP). The motivation behind this proposal stems from the complexities surrounding inheritance of digital assets, particularly for heirs who may not possess technical knowledge. The current solutions, including mnemonic phrases, are deemed insufficient for recovering all potential configurations of a wallet's descriptor. The proposed file format aims to simplify the backup process by storing public metadata about a wallet, which could include directions, notes, and public descriptor data. This would not only facilitate easier fund recovery for heirs but also ensure interoperability between semi-custodial services that provide inheritance solutions. Such a system allows for the seamless transfer of wallet information, mitigating the risk posed by the discontinuation of these services.

In terms of implementation, the author has developed a reference implementation in Rust, which is mentioned in the original post. Considering the practical aspects of the proposal, there is an inclination towards adopting or closely following the data encoding used in Partially Signed Bitcoin Transactions (PSBT). The rationale is to simplify the process of reading and writing to files for developers, suggesting that a straightforward key-value mapping could encourage widespread adoption. The request for feedback indicates an openness to further refinement and suggestions, especially regarding the utility of such a file format in managing wallet data effectively.</summary>
    <published>2024-11-04T18:29:00+00:00</published>
  </entry>
</feed>
