<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CHECKSIGFROMSTACK(VERIFY/ADD)</title>
  <updated>2024-11-24T02:37:19.066405+00:00</updated>
  <author>
    <name>moonsettler 2024-11-23 19:45:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CHECKSIGFROMSTACK(VERIFY/ADD)</title>
    <updated>2024-11-24T02:37:19.066443+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/_p-Du0dVGx1_UqtSLb7UpQRrHWP0JVQOGFeZ3-W-m8eZNNshMsW_oFXw07nAZEnP-YZO6sBn9iF-RY7qK15jxCjQPBMc4LZ-4cesUuRose8=@protonmail.com/T/#m90839d5171f2fcee3d399ec21123518c4ebe8836" rel="alternate"/>
    <summary>The discussion revolves around the potential removal of OP_CHECKSIGFROMSTACKVERIFY (CSFSV), designated as NOP5, from both LNhance and the CSFS BIP. The primary reasons for considering this action include the observation that CSFS is more likely to find its application in Symmetry rather than needing CSFSV specifically. Moreover, it's pointed out that if CSFSV functionality is desired, combining OP_CSFS with OP_VERIFY serves as a viable solution, thereby simplifying the codebase. Additionally, there is a lack of concrete use cases for CSFSV within the legacy system as of now, which strengthens the argument for its removal. The scarcity of upgradeable NOPs further supports the case for eliminating CSFSV to free up space for potentially more useful operations. Furthermore, backporting tapscript is mentioned as a means to bring all necessary functionality to the legacy system, suggesting that removing CSFSV would not result in a loss of capabilities. This proposal reflects a strategic consideration aimed at streamlining and optimizing the development process by focusing on functionalities that offer clear benefits and applications.</summary>
    <published>2024-11-23T19:45:00+00:00</published>
  </entry>
</feed>
