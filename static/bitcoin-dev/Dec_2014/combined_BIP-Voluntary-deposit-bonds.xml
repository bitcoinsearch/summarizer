<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP: Voluntary deposit bonds</title>
  <updated>2025-09-25T23:09:55.908408+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Jan_2015/007076_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007075_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007074_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007073_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007072_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007071_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007070_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007069_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007067_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007068_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007066_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2014/007065_BIP-Voluntary-deposit-bonds.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007076.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP: Voluntary deposit bonds</title>
    <updated>2025-09-25T23:09:55.908515+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007076.html" rel="alternate"/>
    <published>2015-01-03T03:48:29+00:00</published>
    <summary>Sergio Lerner, a Bitcoin developer, has proposed a modification to the code that would allow miners to add real inputs to the coinbase transaction, instead of just pseudo-inputs. This change would enable miners to voluntarily lock funds. Lerner believes that this modification is necessary to secure the blockchain in the future when the subsidy is lowered. He argues that increasing the number of confirmation blocks could make Bitcoin less competitive with other payment networks. However, there are concerns about this proposal. Peter Todd, another Bitcoin developer, worries that it could change incentives and make it easier for individuals to pay miners to mine specific blocks rather than transactions. There are also doubts about the PowPay micropayments scheme, which may incentivize mining pools to grow larger.Gregory Maxwell and Stephen have suggested alternative ways to pay specific miners upon solving a block without risking paying other miners through pay-to-fee. Gregory suggests using Gavin's OP_EVAL, but acknowledges that it would require additional changes to overlay functionality. Stephen proposes a solution involving outputs in the coinbase transaction with nValue == 0, and applying the COINBASE_MATURITY rule only to spending coinbase outputs with non-zero value. However, this solution would still require a hard fork.In a conversation on the Bitcoin-development mailing list, Sergio expresses concern about the complexity of Bitcoin and argues that it needs to be simple for new programmers to understand and contribute to the project. He suggests that even P2SH is an abuse of the virtual machine (VM) and that Gavin's OP_EVAL should have been chosen instead. Others clarify that there is no abuse occurring and that Sergio's proposal would require an additional change to overlay functionality, which may be considered &quot;ugly.&quot;Sergio Lerner's idea of allowing miners to lock funds by adding additional inputs to the coinbase transaction has been proposed since 2011 but hasn't been a priority until now. The motivation behind the proposal is to address potential security problems in the future as the subsidy is lowered. However, there are concerns about increasing the complexity of Bitcoin. Some suggest that a hard fork now could allow for a later implementation of a soft fork involving deposit bonds, proof-of-stake, and penalization of double-mining.Justus Ranvier explains in a discussion with Jorge Tim√≥n that allowing miners to pay themselves by adding inputs to the generation transaction is the most natural way for their customers to pay them. This method is more secure than pay-to-fee transactions because the fees cannot be claimed by another miner if the block is orphaned.In an email conversation between Justus Ranvier and Mike Hearn, they discuss the difference between adding inputs to a coinbase and having pay-to-fee transactions in a block. Ranvier points out that pay-to-fee transactions can be &quot;stolen&quot; by another block, whereas inputs to a generation transaction cannot be poached. This difference allows for certain services that can't be safely achieved with pay-to-fee transactions, although it's unclear what these services are.There is ongoing debate and exploration around how to optimize blockchain transactions. The proposal to add inputs to the coinbase transaction aims to improve transaction processing efficiency or reduce fees. However, it is not clear how this differs from pay-to-fee transactions, which also involve direct payment to miners. The discussion on coinbase inputs and pay-to-fee transactions is likely part of a larger conversation on improving the functionality and scalability of blockchain systems.A proposal has been made to allow miners to voluntarily lock funds by adding additional inputs to the coinbase transaction. This would require a hard fork but could potentially be included in the next scheduled hard fork, such as when the block size is increased. The code modifications needed for this proposal are minimal and involve removing code rather than adding any. It is argued that this change would not change incentives or security until a soft fork is implemented in the future.</summary>
  </entry>
</feed>