<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Why SegWit Anyway?</title>
  <updated>2025-09-25T23:11:22.548190+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Nov_2017/015314_Why-SegWit-Anyway-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2017/015308_Why-SegWit-Anyway-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2017/015307_Why-SegWit-Anyway-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2017/015304_Why-SegWit-Anyway-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2017/015303_Why-SegWit-Anyway-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2017/015306_Why-SegWit-Anyway-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2017/015305_Why-SegWit-Anyway-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2017/015302_Why-SegWit-Anyway-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2017/015301_Why-SegWit-Anyway-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2017/015300_Why-SegWit-Anyway-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-November/015300.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Why SegWit Anyway?</title>
    <updated>2025-09-25T23:11:22.548286+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-November/015300.html" rel="alternate"/>
    <published>2017-11-25T15:41:44+00:00</published>
    <summary>Segregated Witness (SegWit) has several benefits, as discussed in a post by Adán Sánchez de Pedro Crespo. One of these benefits is that SegWit signatures can be cheaper to verify compared to traditional signatures, which were vulnerable to denial-of-service (DoS) attacks using forged transactions. These attacks could take several minutes to verify and were highly disruptive. There may be additional resources available for those interested in learning more about these types of attacks.SegWit transactions spend less &quot;weight,&quot; allowing miners to fit more transactions into a block and use less power. They also provide reduced transaction fees, larger capacity for transactions, and increased security. While there is no direct incentive for miners to choose SegWit transactions over non-SegWit ones, artificially distorted block weight rules create an incentive for miners to select SegWit transactions and earn more fees.There have been concerns about changing the definition of TxID, as it would require a hardfork upgrade and potentially lead to a chain split if not everyone upgrades. To address this issue, BIP140 proposes using &quot;normalized TxID&quot; as a softfork solution to fix malleability issues without changing the definition of TxID. However, this approach makes the UTXO set permanently bigger as the database needs to store both txid and normalized txid.The discussion also touches upon the question of why the format of transactions needs to be changed in SegWit. Johnson Lau explains that different SIGHASH flags make it impossible to compute the Transaction ID the same way as the hash for signing the transaction. Changing the definition of TxID would require a hardfork change, while using BIP140 as a softfork solution avoids these complications.Another developer clarifies that SegWit does not separate signatures from the rest of the transaction data, but rather excludes them from the TXID. The serialization of SegWit on the p2p network encodes the witness field inside the transactions.In summary, SegWit offers various benefits such as cheaper signature verification, increased transaction capacity, and reduced fees. There are ongoing discussions about the best approach to address transaction malleability, with BIP140 proposing a softfork solution that avoids changing the definition of TxID. However, there are concerns about the increased size of the UTXO set with this solution. The format of transactions in SegWit has been changed to improve scalability and security, with signatures excluded from the TXID.</summary>
  </entry>
</feed>