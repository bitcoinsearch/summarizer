<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Transaction Replacement by Fee</title>
  <updated>2025-10-18T02:27:09.078436+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Jan_2017/013518_Transaction-Replacement-by-Fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013471_Transaction-Replacement-by-Fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013470_Transaction-Replacement-by-Fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013469_Transaction-Replacement-by-Fee.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013469.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013469.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013469.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013469.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013469.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013469.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013469.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013469.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Transaction Replacement by Fee</title>
    <updated>2025-10-18T02:27:09.078553+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013469.html" rel="alternate"/>
    <published>2017-01-28T18:34:58+00:00</published>
    <summary>The user in this context is attempting to get RBF (Replace-By-Fee) working on a multisig input. They set the nSequence to 0, but encountered a failure when using python-bitcoinlib to verify the script. The user is using the SignatureHash(...) method for signing instead of rpc.signrawtransaction(...). BIP125 (Bitcoin Improvement Proposal) is mentioned as the standard way to signal and a link to BIP125 is provided for further information. It is noted that some miners mine full replace-by-fee without limitations on nSequence.Peter Todd's implementation of full RBF for v0.13.2 can be found on his Github page. This implementation is identical to Bitcoin Core with the exception of removing nSequence and adding a special service bit to allow full-RBF nodes to preferentially peer with each other for propagation of replacement transactions. While it is faster to use the nSequence signaling specified in BIP-125, it is not mandatory as long as the replacement transaction can reach a full-RBF node. Contact information for Peter Todd is also provided.In a post to the bitcoin-dev mailing list, Greg Sanders explains that BIP125 is the standard way to signal for transaction replacement. The GitHub link provided contains all the necessary information to understand BIP125. Some miners mine full replace-by-fee without limitations on nSequence. Peter Todd's implementation of this feature for v0.13.2 can be found on his GitHub page, which is similar to Bitcoin Core but with the removal of nSequence and the addition of a special service bit for full-RBF node peering. Although using the nSequence signaling in BIP-125 is faster, it is not mandatory if the replacement transaction reaches a full-RBF node.An email thread on the bitcoin-dev mailing list from January 12, 2017, discusses the rules for transaction replacement in Bitcoin. The sender, Police Terror, seeks clarification on the valid ranges for sequence values in transaction inputs and whether it is possible to change outputs or add additional inputs to pay higher fees. The response suggests referencing BIP125 as the standard way to signal for transaction replacement. A GitHub link is provided for further information on BIP125. This email thread serves as a resource for individuals seeking guidance on Bitcoin transaction replacement.The sender of the message is seeking information on transaction replacement rules in Bitcoin. They specifically want to know the valid ranges for sequence values in transaction inputs and if it is possible to change outputs or add more inputs to pay a higher fee. The sender typically sets the sequence value to MAX_UINT32 and locktime to 0. They are looking for clarity on these aspects of Bitcoin and would appreciate any available resources.</summary>
  </entry>
</feed>