<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [Pre-BIP] Fee Accounts</title>
  <updated>2025-10-11T02:32:25.616107+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/May_2022/020405_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2022/020368_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2022/020230_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2022/020228_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2022/020219_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2022/020216_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019960_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019959_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019958_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019957_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019956_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019955_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019954_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019952_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019951_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019949_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019944_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019943_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019877_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019876_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019792_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019791_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019790_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019783_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019787_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019782_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019786_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019772_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019770_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2022/019724_-Pre-BIP-Fee-Accounts.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020405.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - [Pre-BIP] Fee Accounts</title>
    <updated>2025-10-11T02:32:25.616221+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020405.html" rel="alternate"/>
    <published>2022-05-02T15:59:49+00:00</published>
    <summary>In a detailed email conversation, the participants discuss various aspects of blockchain technology, specifically focusing on Open Time Stamps (OTS). The discussion begins with a proposal for a correct timestamping service model, stating that any such service must adhere to the model to be reliable. The writer highlights the potential issues and unreliability that can arise if the model is not followed.Jeremy Rubin questions the appeal to authority in the Bitcoin-dev group and raises concerns about the formal correctness of OTS. He suggests the need for an actual specification for OTS to resolve these issues. The conversation then delves into the technical details of OTS, including its proof format and how it relates to transactions and Bitcoin blocks. The participants also discuss the concept of linearization and its relevance in a use-case scenario. They debate the advantages and disadvantages of different transaction models and fee accounts implementation, emphasizing the importance of flexibility and avoiding unnecessary costs.Additionally, the conversation touches upon the topic of necromancy attacks, where an earlier version of a transaction is resurrected by a third party for OTS. The potential benefits and drawbacks of such attacks are discussed, along with suggestions for mitigating their impact. The discussion expands to include the design of fee accounts and the need for explicit tagging or opt-in features. Different viewpoints are presented, highlighting the potential limitations and advantages of each approach.Another topic addressed is the use of Child Pays for Parent (CPFP) to solve issues related to relative locktimes in Bitcoin Vaults. The participants discuss the recommended design for Vaults and the need for additional features like RBF-able addable input/output or sponsors.The conversation concludes with discussions on the definition of pinning attacks, progress in committing data, and the potential risks associated with certain approaches in blockchain schemes. Overall, the email conversation covers a wide range of topics related to blockchain technology, providing insights into the challenges and considerations involved in implementing and improving timestamping services.Bitcoin developer Jeremy Rubin has proposed a new design to improve the fee-paying semantics in Bitcoin. The current system of paying fees in-band presents challenges for smart contracts and features such as fee bumping and DoS-resistant payment channels. Rubin's proposal suggests two approaches: using a special transaction called a &quot;sponsor&quot; to allow arbitrary fee appending, or implementing an account system as an extension block.The account system proposal involves defining a &quot;fee account&quot; output type that would have separate UTXO databases for deposits and withdrawals. Fee accounts would only be able to sign two types of transactions: one specifying a fee amount and a TXID, and another specifying a withdrawal amount, a fee, and an address. These transactions would be committed in an extension block merkle tree.Rubin argues that the proposed account system would make it easier to write smart contracts by separating the logic from the fees. The mempool logic would be updated to allow attaching fee account spends to transactions, with restrictions on accounts not being allowed to spend more than their balance. The design is considered scalable because adding fees to a transaction does not require adding inputs or outputs or tracking substantial amounts of new state.The proposal could also be modified to enhance privacy by implementing techniques like Tornado.cash or a trustless mixing protocol. Rubin suggests that a federated network could be used to bribe miners until a consensus upgrade is deployed, but acknowledges that this approach may introduce centralization.Overall, Rubin's proposal aims to address the limitations of the current fee-paying system in Bitcoin and provide more flexibility and scalability while considering privacy concerns.</summary>
  </entry>
</feed>