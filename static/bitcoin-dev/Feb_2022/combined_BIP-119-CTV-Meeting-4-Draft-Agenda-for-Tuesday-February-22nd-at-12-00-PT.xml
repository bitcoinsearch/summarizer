<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP-119 CTV Meeting #4 Draft Agenda for Tuesday February 22nd at 12:00 PT</title>
  <updated>2025-09-26T11:24:52.290717+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m911e51906f5a94fa2141a8138271c0f1d3a07e35">
      <author>[bitcoin-dev] BIP-119 CTV Meeting #4 Draft Agenda for Tuesday February 22nd at 12:00 PT Jeremy Rubin</author>
      <timestamp>2022-02-22T03:36:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] BIP-119 CTV Meeting #4 Draft Agenda for Tuesday February 22nd at 12:00 PT Jeremy Rubin" parent_id="mailing-list-2022-02-m911e51906f5a94fa2141a8138271c0f1d3a07e35" anchor="m704a2086b169a9ff9967ea56120bfe2f2b6b8c94">
      <author>Jeremy Rubin</author>
      <timestamp>2022-02-22T18:05:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Feb_2022/019973_BIP-119-CTV-Meeting-4-Draft-Agenda-for-Tuesday-February-22nd-at-12-00-PT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2022/019971_BIP-119-CTV-Meeting-4-Draft-Agenda-for-Tuesday-February-22nd-at-12-00-PT.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019971.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP-119 CTV Meeting #4 Draft Agenda for Tuesday February 22nd at 12:00 PT</title>
    <updated>2025-09-26T11:24:52.291309+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019971.html" rel="alternate"/>
    <published>2022-02-22T18:05:21+00:00</published>
    <summary>In this tutorial by Jeremy Rubin, he explains how to use the Sapio CLI to generate contracts and interact with them on the network. The tutorial focuses on using a congestion control tree as an example. To begin, you will need to install JQ (a json manipulating tool) and other necessary tools for running a bitcoin node. Next, set up a node following the instructions provided. You can find the installation instructions on the Sapio website at https://learn.sapio-lang.org/ch01-01-installation.html. It is recommended to skip the sapio-studio part and pod part and proceed with the Local Quickstart until &quot;Instantiate a contract from the plugin&quot;.Once your node is set up, open the site https://rjsf-team.github.io/react-jsonschema-form/ and run the command *sapio-cli contract api --fileplugin-example/target/wasm32-unknown-unknown/debug/sapio_wasm_plugin_example.wasm*. Copy the resulting JSON into the RJSF site and fill out the form as desired. After filling out the form, you should see a JSON output. You may need to delete some extra fields due to minor bugs on the site. Alternatively, you can modify the JSON directly and save it in a file named ARGS.json.The next step is to modify your sapio-cli config file. Create a contract template and obtain a proposed funding amount and binding of the template to the UTXO (unspent transaction output). Once the funding transaction is finalized, review the hex transaction and ensure that you want to proceed with the contract. Finally, send the contract and any other related transactions to the network.There are several additional things you can explore, such as using the Sapio Studio GUI, modifying the congestion control tree code, recompiling it, and trying out other contracts.In the upcoming fourth CTV meeting, tutorials will be the main focus. Participants are encouraged to prepare beforehand. The meeting will cover several topics. The first topic of discussion will be the objective of Signet and the decision function of observations from a test network. The team will also consider which applications should be prototyped and developed further, taking into account the necessary level of detail. They will also discuss the possibility of adding other experiments like APO/Sponsors and incorporating lightning for the signet.The second topic will be connecting to the CTV Signet Tutorial. Participants will ensure that everyone who wants to join can do so and address any issues that arise. Attendees are requested to build a branch from https://github.com/JeremyRubin/bitcoin/tree/checktemplateverify-signet-23.0-alpha and connect to [signet] signetchallenge=512102946e8ba8eca597194e7ed90377d9bbebc5d17a9609ab3e35e706612ee882759351ae and addnode=50.18.75.225.The third topic will focus on receiving and sending coins. There is a faucet available for the signet at https://faucet.ctvsignet.com and an explorer at https://explorer.ctvsignet.com.The fourth topic will be a Sapio tutorial. Participants are advised to go through the documentation at https://learn.sapio-lang.org and download/build the sapio cli &amp; plugin examples before the meeting. The team will guide everyone in building and sending a basic application, such as a congestion control tree or vault, on the signet.The fifth topic will be a Sapio Q&amp;A session, where attendees can share their experiences with Sapio and have a more general discussion about the project and its potential accomplishments.The meeting will conclude with a 30-minute general discussion.</summary>
  </entry>
</feed>