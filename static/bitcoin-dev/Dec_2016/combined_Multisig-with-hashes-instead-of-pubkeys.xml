<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Multisig with hashes instead of pubkeys</title>
  <updated>2025-10-31T02:57:18.111155+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Dec_2016/013396_Multisig-with-hashes-instead-of-pubkeys.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2016/013395_Multisig-with-hashes-instead-of-pubkeys.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2016/013394_Multisig-with-hashes-instead-of-pubkeys.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Multisig with hashes instead of pubkeys</title>
    <updated>2025-10-31T02:57:18.111270+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-December/013394.html" rel="alternate"/>
    <published>2016-12-23T18:21:43+00:00</published>
    <summary>In the field of cryptography, Lamport Signatures offer a method to sign a message solely using hash functions. This approach involves exchanging a table of hashes before signing a message and then revealing the corresponding &quot;secrets&quot; behind these hashes. By selectively masking the bits of the message hash, one can effectively sign specific portions of the message. Notably, Lamport Signatures are both elegant and quantum secure.However, relying solely on hashes in this scheme presents a vulnerability, as anyone could obtain these values and potentially double spend the original transaction by redirecting it to a different destination. To address this concern, a similar smart contract algorithm called &quot;atomic cross-chain contracts&quot; utilizes hash values for protocol-based coin swapping across blockchains while employing ECDSA public keys to prevent double-spending.In the case of Bitcoin multi-signature transactions, the use of hash values is viable, but additional protection is required to safeguard against attackers on the network. For instance, including an ECDSA public key alongside the hash values would enhance security. Nonetheless, if one desires to incorporate Lamport Signatures into their consensus system, it is necessary for the system to comprehend Lamport signature operations within the &quot;scriptPubKey.&quot; The specific use-case for this integration remains unspecified.Addressing a user named Andrew's query regarding a scriptPubKey for conducting multisig with only participant hashes, it was pointed out that the proposed script had several issues. Firstly, performing two OP_SWAP operations consecutively would simply revert to the original state. Moreover, all the hashes generated in the script ended up hashing the same key, making it susceptible to being spent by anyone on the network. Instead, it was suggested that utilizing P2SH (Pay-to-Script-Hash) scripts would offer better security by preventing the exposure of public keys until spending occurs.To further assist Andrew, the email provided a resource link to learn more about opcodes and simulators. The poster also requested either a confirmed solution or a link to a worked-out script for the scriptSig, which is not included in the provided information.</summary>
  </entry>
</feed>