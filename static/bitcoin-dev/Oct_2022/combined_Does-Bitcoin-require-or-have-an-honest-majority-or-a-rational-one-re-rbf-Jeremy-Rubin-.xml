<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Does Bitcoin require or have an honest majority or a rational one? (re rbf) (Jeremy Rubin)</title>
  <updated>2025-10-11T02:24:59.187295+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Oct_2022/021086_Does-Bitcoin-require-or-have-an-honest-majority-or-a-rational-one-re-rbf-Jeremy-Rubin-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/021035_Does-Bitcoin-require-or-have-an-honest-majority-or-a-rational-one-re-rbf-Jeremy-Rubin-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/021020_Does-Bitcoin-require-or-have-an-honest-majority-or-a-rational-one-re-rbf-Jeremy-Rubin-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021020.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Does Bitcoin require or have an honest majority or a rational one? (re rbf) (Jeremy Rubin)</title>
    <updated>2025-10-11T02:24:59.187360+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021020.html" rel="alternate"/>
    <published>2022-10-20T22:52:03+00:00</published>
    <summary>John Carvalho expresses concerns about replace-by-fee (RBF) and its potential negative impact on Bitcoin transactions. Although only a small percentage of transactions currently use RBF, the risk it poses is immeasurable. Transactions can be replaced without warning, making it difficult for merchants to effectively monitor and enforce acceptance of zero-conf (0conf) transactions.Carvalho argues that responsible 0conf acceptance is rational and trusting, as it mitigates exposure to double-spends and limits their size per block. He suggests that occasional double-spending is less costly than experiencing delayed checkout processes. However, if the remaining 71% of transactions also become subject to replaceability, relying on ignoring the risk becomes an unsustainable approach.The fact remains that merchants cannot rely on having seen all transactions being considered by miners for their block templates, nor can they guarantee receiving replacements before the original transaction is included in a block. The unstable gentlemen's agreement of &quot;first-seen&quot; is bound to fail eventually. Additionally, propping up the illusion of reliable payment promises hampers price discovery of blockspace and complicates protocol development.To address this, the context proposes converging on the inevitable outcome and facilitating replaceability for all transactions. This would involve reassessing business approaches in light of Bitcoin's natural modus operandi and embracing the uncertainty of the gossip system. By doing so, the band-aid can be ripped off rather than perpetually suffering from uncertainty.Peter Todd counters Carvalho's concerns by highlighting the use of RBF in his OpenTimestamps calendars for optimal fee discovery. Replacements account for approximately 95% of OpenTimestamps transactions mined. Todd also notes that at least 97.21% of hashing power supports opt-in RBF. He questions whether this indicates that almost all hashing power is irrational.Todd further mentions that Electrum has implemented an undo button using RBF successfully. Additionally, rejecting blocks containing double-spends could lead to severe consensus problems, despite the fact that it should be implemented.In summary, the context delves into the debate surrounding 0conf acceptance and RBF assurances in Bitcoin transactions. Carvalho argues for responsible 0conf acceptance, highlighting the risks of RBF and the potential impact on merchants. Todd counters with examples of successful RBF implementations and questions the rationality of opposing its use. The context ultimately raises the question of which approach, preferring blocks with replaced transactions or rejecting them, is more likely for the node set.</summary>
  </entry>
</feed>