<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Announcing Bitcoin BOSD: Standardized Withdrawal Output Specification for L2s</title>
  <updated>2025-02-20T02:24:33.661555+00:00</updated>
  <author>
    <name>David A. Harding 2025-02-19 02:29:00+00:00</name>
  </author>
  <author>
    <name>Jose Storopoli 2025-02-15 11:37:00+00:00</name>
  </author>
  <link href="bitcoin-dev/Feb_2025/m28b4e7cf0c4db8b254c6485cd04e547f88190f76_Announcing-Bitcoin-BOSD-Standardized-Withdrawal-Output-Specification-for-L2s.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2025/mfe81791c5159867a73965164ac552f23d76dbd5c_Announcing-Bitcoin-BOSD-Standardized-Withdrawal-Output-Specification-for-L2s.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Announcing Bitcoin BOSD: Standardized Withdrawal Output Specification for L2s</title>
    <updated>2025-02-20T02:24:33.661596+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/94ac8f66-1627-4526-bb34-095361a30fb4n@googlegroups.com/T/#u#mfe81791c5159867a73965164ac552f23d76dbd5c" rel="alternate"/>
    <summary>The Bitcoin Output Script Descriptor (BOSD) is a new specification introduced to improve the efficiency and standardness of on-chain withdrawals for Bitcoin Layer 2 solutions. Developed by Alpen Labs, with notable contributions from Trey Del Bonis, BOSD aims to simplify the validation logic required for these transactions by ensuring that withdrawal outputs are correct by design, adhering to the Bitcoin network's standardness rules. This initiative addresses the challenge of non-standard transactions, such as those involving oversized OP_RETURN outputs, which pose a risk to Layer 2 operators. By abstracting the complex validation logic into a more manageable format, BOSD serves as an essential tool for maintaining the integrity and reliability of Bitcoinâ€™s Layer 2 infrastructure.

The open-source Rust implementation of BOSD is available on [crates.io](https://crates.io/crates/bitcoin-bosd), inviting developers to explore its functionalities. Further details about BOSD, including its motivation, technical specifications, and creation rationale, are provided in the [SPECIFICATION.md document](https://github.com/alpenlabs/bitcoin-bosd/blob/main/SPECIFICATION.md) hosted on GitHub. The GitHub repository encourages community feedback through issues and discussions, promoting an open environment for the improvement of the BOSD standard. 

BOSD emerged from the challenges faced by Alpen Labs while developing validation logic for Strata, a Bitcoin-native BitVM-based bridge to a ZK-rollup. It seeks to minimize ecosystem fragmentation and enhance interoperability among various Bitcoin Layer 2 solutions. The specification is licensed under CC0 public domain, while the Rust implementation carries MIT/Apache-2.0 licenses, highlighting a commitment to open access and utilization. 

The technical structure of BOSD includes a 1-byte tag for type ID and an arbitrary-length cryptographic payload, designed for compactness. It supports several types of outputs, such as `OP_RETURN` payloads and different hash types associated with specific mainnet address prefixes. Despite its focus on compactness and efficiency, BOSD notably lacks checksums or native error correction mechanisms, emphasizing its streamlined approach.

A separate communication critiques the BOSD proposal for not leveraging existing Bitcoin Improvement Proposals (BIPs) for raw output script descriptors, suggesting an alternative approach for compatibility and flexibility. It highlights the potential limitations of BOSD in accommodating transactions with OP_RETURN outputs larger than the standard limits and suggests a more adaptable strategy without versioning, allowing users to modify their software for broader acceptance. This critique also points out the naming conflation with existing terminology used within the Bitcoin development community, recommending a more distinct name for clarity.</summary>
    <published>2025-02-19T02:29:00+00:00</published>
  </entry>
</feed>
