<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>P2QRH / BIP-360 Update</title>
  <updated>2025-02-24T02:26:04.654217+00:00</updated>
  <author>
    <name>Hunter Beast 2025-02-23 20:33:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>P2QRH / BIP-360 Update</title>
    <updated>2025-02-24T02:26:04.654248+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/16d7adca-a01e-40c5-9570-31967ee339ecn@googlegroups.com/T/#m31c80f621c9a351b4c56d16d9f3a05a793a32919" rel="alternate"/>
    <summary>In the ongoing discussions about enhancing Bitcoin's security against potential quantum computing threats, several key points and considerations have been brought to light through a series of exchanges. The discourse has revolved around finding an optimal path forward for post-quantum cryptography (PQC) in Bitcoin, highlighting the challenges and proposed strategies to mitigate risks associated with quantum computing advancements.

One notable concern is the size of SLH-DSA signatures, which are considered quite large, making them less ideal despite their security benefits. To address this, there has been a shift towards exploring other algorithms such as ML-DSA and FN-DSA, both of which are grounded in lattice cryptography. These alternatives are not only standardized but are also garnering widespread support, suggesting a promising avenue for hardware acceleration through PQC extensions in CPUs and SoCs. This move aligns with the broader goal of ensuring robust cryptographic practices that can withstand emerging threats while being feasible for implementation in existing hardware architectures.

The conversation also delves into the specifics of implementing these cryptographic measures within the Bitcoin Improvement Proposal (BIP) framework. A particular point of contention is how to approach gating P2TR (Pay to Taproot) transactions, with suggestions to avoid disabling keypath spends due to their potential confiscatory implications. Instead, there's advocacy for building multisig capabilities directly into the attestation process, circumventing the need for additional opcodes. This approach underscores a pragmatic acceptance of compromises inherent in developing a solution that balances security with practicality, acknowledging that while not perfect, it's essential for the continued functionality and evolution of Bitcoin.

Further exploration into post-quantum cryptography for Bitcoin suggests a selective approach, favoring simpler, hash-based signatures like SPHINCS+ for their straightforward security assumptions. Embedding these within a taproot leaf and maintaining BIP-32 compatibility, albeit in a limited or "emergency" context, represents a cautious yet forward-thinking strategy. This method aims at mitigating privacy costs and setting a foundation for more refined solutions as our understanding and capabilities evolve.

Amid these technical discussions, the importance of community input and consensus is evident, with references to contributions and debates within the Bitcoin Development Mailing List. Links to GitHub repositories ([cryptoquick](https://github.com/cryptoquick/)) provide concrete examples of the ongoing work and proposals being considered. These discussions reflect a collaborative effort to navigate the complex landscape of post-quantum cryptography, ensuring Bitcoin remains secure and resilient in the face of quantum computing advancements.</summary>
    <published>2025-02-23T20:33:00+00:00</published>
  </entry>
</feed>
