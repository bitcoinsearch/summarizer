<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Update on the Great Consensus Cleanup Revival</title>
  <updated>2025-02-11T02:27:38.333273+00:00</updated>
  <author>
    <name>Chris Stewart 2025-02-10 21:21:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Update on the Great Consensus Cleanup Revival</title>
    <updated>2025-02-11T02:27:38.333307+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAGL6+mFYCKjhD8O1G9diC4pbM=_XubW0YxTfeqyyRpDe9t2fng@mail.gmail.com/T/#mff1b26edb0056f5bca3e1e13b67c18381cf3c203" rel="alternate"/>
    <summary>The proposed Bitcoin Improvement Proposal (BIP) addresses a significant security concern within the Bitcoin network, specifically targeting transactions that are serialized to 64 bytes without including the transaction's witness. The draft highlights that such transactions pose a risk to the network's integrity by contributing to block malleability issues and potentially compromising the security of Simplified Payment Verification (SPV) clients.

Block malleability is a critical issue where malicious entities can manipulate the appearance of a transaction without altering its essence, leading to possible double-spending or disruption in transaction tracking. In particular, 64-byte transactions without a witness can be abused to create two distinct types of malleable blocks: one that contains consensus-valid transactions and another with invalid ones. The former requires a substantial computational effort to achieve, making it financially impractical but not impossible. This could result in a persistent chain split, posing a severe threat to the network's consistency and reliability.

The BIP also sheds light on the vulnerability of SPV clients to certain attacks facilitated by these 64-byte transactions. Since SPV clients do not maintain a complete blockchain but instead rely on merkle trees for transaction verification, they are susceptible to being misled into accepting false proofs of transaction inclusion. An attacker could exploit this by creating a merkle tree collision, deceiving an SPV client into believing that an invalid transaction was included in a block. Although mitigations are suggested, such as requiring SPV clients to obtain additional information about the merkle tree's structure, the core issue underscores the need for the proposed changes.

The document includes a reference implementation for the proposed BIP, detailing modifications to the existing Bitcoin Core software to enforce the new rule set. This implementation aims to prevent the acceptance and propagation of blocks containing 64-byte transactions without witnesses, thereby enhancing the network's resistance to block malleability attacks and improving overall security for users and nodes.

For further details, the proposal and its rationale can be viewed on GitHub at [this link](https://github.com/Christewart/bips/blob/2024-12-20-64bytetxs/bip-XXXX.mediawiki). The initiative has been acknowledged by several contributors within the Bitcoin development community, highlighting its importance and the collaborative effort towards securing the network against evolving threats.</summary>
    <published>2025-02-10T21:21:00+00:00</published>
  </entry>
</feed>
