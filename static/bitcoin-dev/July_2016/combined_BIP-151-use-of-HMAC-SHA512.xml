<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP 151 use of HMAC_SHA512</title>
  <updated>2025-10-29T13:08:33.521154+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/July_2016/012885_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2016/012884_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2016/012883_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2016/012882_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2016/012878_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2016/012877_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012862_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012861_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012860_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012859_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012858_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012856_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012855_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012854_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012853_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012829_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012827_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012825_BIP-151-use-of-HMAC-SHA512.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP 151 use of HMAC_SHA512</title>
    <updated>2025-10-29T13:08:33.521262+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-July/012885.html" rel="alternate"/>
    <published>2016-07-04T06:47:05+00:00</published>
    <summary>Zooko Wilcox, in a discussion on the bitcoin-dev mailing list, suggests using the well-studied open standard of HKDF (HMAC-based Extract-and-Expand Key Derivation Function) instead of re-inventing it. He emphasizes the importance of using open standards in cryptography to reduce the risk of errors. Arthur Chen agrees with this recommendation and highlights the significance of following well-studied open standards in the realm of cryptocurrency.The discussion also touches upon the use of HMAC vs SHA256 for a Message Authentication Code (MAC). It is explained that SHA256 is insecure for a MAC due to its length extension property. Even though SHA256 appends the bitlength, making it more difficult to generate a new value, it is not being used as a MAC in BIP151. Arthur Chen explains the proven security properties of HMAC, even when the underlying crypto hashing function has weaknesses. He emphasizes the importance of using HMAC for MACs rather than custom constructions.There is a debate about using SHA512_HMAC instead of SHA256_HMAC for key derivation. Jonas Schnelli suggests using SHA512_HMAC, citing its usage in BIP32 and its cost-effectiveness compared to two SHA256_HMAC operations. However, Rusty Russell argues that introducing another hash algorithm would be unnecessarily painful and questions the use of HMAC over just SHA256. The discussion concludes without clear pros and cons identified for using SHA512_HMAC over SHA256_HMAC.In another discussion, the importance of including the cipher-type in the symmetric cipher key is emphasized to avoid weak-cipher attacks. It is noted that although BIP151 currently specifies chacha20-poly1305 at openssh.com, it is possible for someone to add another symmetric cipher type after deployment which may have weaker security properties. Therefore, the inclusion of the ciphersuite-type in the key derivation HMAC is crucial to prevent potential attacks.Based on previous crypto analysis, it is stated that the security of SHA512 is not significantly higher than SHA256. There have been discussions about considering SHA3 as a potential alternative. However, there are no clear pros and cons identified for using SHA512_HMAC over SHA256_HMAC.In summary, the context revolves around the importance of using well-studied open standards in cryptography. It emphasizes the use of HKDF instead of reinventing it and the utilization of HMAC for MACs to ensure security. There are debates regarding the use of SHA512_HMAC vs SHA256_HMAC for key derivation, with different perspectives provided. The inclusion of the cipher-type in the symmetric cipher key is highlighted to avoid weak-cipher attacks. Overall, the discussions aim to enhance the security and reliability of cryptographic systems in the realm of cryptocurrency.</summary>
  </entry>
</feed>