<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - URI scheme with optional bech32 address</title>
  <updated>2025-10-24T02:33:22.110103+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Sept_2018/016428_URI-scheme-with-optional-bech32-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016266_URI-scheme-with-optional-bech32-address.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016265_URI-scheme-with-optional-bech32-address.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - URI scheme with optional bech32 address</title>
    <updated>2025-10-24T02:33:22.110188+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016265.html" rel="alternate"/>
    <published>2018-09-25T06:59:48+00:00</published>
    <summary>A proposal has been shared on Reddit regarding the adoption of bech32 QR codes in the Bitcoin network. While QR code adoption is considered important, bech32 QR codes are not backward compatible, leading many merchants and exchanges to opt for P2SH address QR codes instead. The proposed solution suggests using a URI format that includes both bech32 and P2SH address options. This would allow wallets to autopay using the lower transaction fee associated with bech32 addresses.The rationale behind this proposal is to increase the usage of bech32, which would create a network effect and potentially lead to widespread adoption of bech32 QR codes. To implement this solution, a team of developers is working on a walleting application capable of generating bech32 and P2WPKH-nested-in-P2SH addresses.One challenge faced by the team is that the payee cannot know in advance the technological capabilities of the payer. To address this, the proposal suggests encoding both bech32 and P2SH addresses in a Bitcoin URI. Legacy wallets would only see the P2SH address, while new wallets would be able to see and use the bech32 address for transactions.To maintain compatibility with BIP21, the 'path' field of the URI can be used for the P2WPKH-nested-in-P2SH address, while a new field (e.g., 'bech32') can be introduced for the bech32 address. It is assumed that wallets utilizing this scheme would monitor incoming transactions on both addresses. The order of attributes in the URI should not matter, as clients would check all attributes with the same name. However, it remains unclear if there are any precedents for the multiple use of an attribute in URI schemes.The team acknowledges that their proposal may not be entirely novel and asks if anyone has already proposed something similar. They also seek feedback on any major drawbacks to their proposal.</summary>
  </entry>
</feed>