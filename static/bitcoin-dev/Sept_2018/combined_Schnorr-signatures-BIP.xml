<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Schnorr signatures BIP</title>
  <updated>2025-09-25T23:12:36.294751+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Sept_2018/016417_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016402_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016399_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016398_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016392_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016388_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016391_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016387_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016390_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016386_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016389_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016365_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016363_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016360_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016362_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2018/016353_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016331_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016291_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016290_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016289_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016287_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016279_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016278_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016258_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016257_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016217_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016214_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016213_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016212_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016211_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016203_Schnorr-signatures-BIP.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016203.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Schnorr signatures BIP</title>
    <updated>2025-09-25T23:12:36.294851+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-July/016203.html" rel="alternate"/>
    <published>2018-09-20T21:12:42+00:00</published>
    <summary>Pieter Wuille's proposal for a BIP (Bitcoin Improvement Proposal) aims to introduce 64-byte elliptic curve Schnorr signatures into the Bitcoin development community. This draft specification is an important step towards standardizing the signature scheme, although it does not directly address consensus rules or aggregation. Wuille plans to collaborate with others to create production-ready reference implementations and conduct tests using the proposed scheme. It is also noted that this signature scheme may have applications beyond the scope of Bitcoin.In the discussion surrounding the proposal, Andrew Poelstra clarifies that M-of-N threshold MuSig signatures can be created for any values of M and N. By combining Schnorr signatures with Pedersen Secret Sharing, a secure interactive threshold signature scheme can be achieved, ensuring that signatures can only be produced by predetermined sets of signers. Poelstra also mentions that he has implemented the combination of MuSig and VSS (Verifiable Secret Sharing) in his code. However, there are unanswered questions raised by Erik Aronesty regarding building up threshold signatures via concatenation.The discussion further explores the topic of threshold signatures in the context of Bitcoin. The paper suggests using M-of-N signatures to validate one of the permutations of M that signed. It acknowledges that Musig, which is M-of-M, is prone to loss if a key is lost or a participant aborts during signing. However, it is possible to create M-of-N threshold MuSig signatures for any M and N, as demonstrated in an implementation shared on GitHub. Erik Aronesty raises concerns about Bitcoin releasing a multisig scheme that encourages loss, but it is clarified that there is currently no proposal for a non-redistributable multisig solution.Erik Aronesty discusses the security advantages of a redistributable threshold system and raises concerns about an M-1 rogue-key attack. Gregory Maxwell responds by explaining the possibility of constructing a 2-of-2 signature by adding keys and carrying out an attack using interpolation. The Musig paper describes a delinearization technique to prevent such attacks, but Erik Aronesty has not tested whether the R,s version is susceptible to these attacks.The author of a Medium article responds to feedback from Gregory Maxwell and clarifies that they switched to the Medium platform to edit and improve their work. They mention that no research has been done on the R,s version and explain that an M-1 rogue-key attack would require attacking either the hash function or the Discrete Logarithm Problem (DLP), neither of which gives an advantage to someone with M-1 keys. However, Gregory Maxwell suggests that the author may be ignoring unfavorable feedback.In another instance, Erik Aronesty reposts a broken scheme on Bitcointalk, but there is no response to the original post. This scheme raises concerns about security and functionality. In contrast, Musig is presented as a secure and functional multisig solution. Pieter Wuille suggests implementing a CAS (Compare and Swap) mechanism for precise communication in both directions.The discussion revolves around an M-of-N Bitcoin multisig scheme, with some questioning why there is so much debate around it. Others point out flaws in the scheme and express confusion caused by the person promoting it.In an email exchange, Erik Aronesty asks why his M-of-N Bitcoin multisig scheme is referred to as FUD (Fear, Uncertainty, and Doubt). Andrew Poelstra explains that Aronesty's scheme doesn't work, despite being repeatedly told so, and that Aronesty continues to post incomplete and incoherent versions of it. Poelstra states that Aronesty's scheme is broken.The FUD surrounding a specific Bitcoin multisig scheme is deemed unnecessary. The M-of-N shared public key is generated in advance, and signature fragments can be generated offline without communication between participants. Andrew Poelstra clarifies that there are no non-interactive Schnorr signatures.In the same email exchange, Erik Aronesty notes that his spec cannot be used directly with a Shamir scheme for single-round threshold multisigs. Andrew Poelstra clarifies that (R,s) schemes can still be used online if participants publish the R(share).In various discussions and exchanges, questions are raised regarding the implementation and encoding of public and private keys in the proposed Schnorr signature scheme. Various suggestions and clarifications are provided to address these concerns.There is also a discussion about the optimal order of inputs for hashing in ECDSA signatures, with arguments for both nonce-first and message-first approaches. The debate touches on security benefits, standard hash function design, and optimization techniques.Overall, the context encompasses proposals, discussions, clarifications, and concerns related to implementing 64-byte elliptic curve Schnorr signatures in Bitcoin, including threshold signatures and multisig schemes.</summary>
  </entry>
</feed>