<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - More uses for CTV</title>
  <updated>2025-09-26T14:26:16.814884+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="mf813e6cc4431aac7f2343d80dea5a654700c0b06">
      <author>[bitcoin-dev] More uses for CTV James O'Beirne</author>
      <timestamp>2022-08-19T16:33:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] More uses for CTV James O'Beirne" parent_id="mailing-list-2022-08-mf813e6cc4431aac7f2343d80dea5a654700c0b06" anchor="m0666dcc2c414df26f033ee62b395e31e3a754cad">
      <author>Greg Sanders</author>
      <timestamp>2022-08-19T17:20:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="1" position="2" reply_to="[bitcoin-dev] More uses for CTV James O'Beirne" parent_id="mailing-list-2022-08-mf813e6cc4431aac7f2343d80dea5a654700c0b06" anchor="m80e0f0d57878a1bcd1f1e51d258b6a7f820a367b">
      <author>David A. Harding</author>
      <timestamp>2022-08-19T18:53:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="2" position="3" reply_to="David A. Harding" parent_id="mailing-list-2022-08-m80e0f0d57878a1bcd1f1e51d258b6a7f820a367b" anchor="maac11ea11a4542a8833d73d103addc90ae037375">
      <author>Jeremy Rubin</author>
      <timestamp>2022-08-19T21:01:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="2" position="4" reply_to="Greg Sanders" parent_id="mailing-list-2022-08-m0666dcc2c414df26f033ee62b395e31e3a754cad" anchor="m3cf7754862da0f2a10a7af48c0ec55ac5ba22b40">
      <author>ZmnSCPxj</author>
      <timestamp>2022-08-20T03:03:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="1" position="5" reply_to="[bitcoin-dev] More uses for CTV James O'Beirne" parent_id="mailing-list-2022-09-mf813e6cc4431aac7f2343d80dea5a654700c0b06" anchor="mb297c1c433edbc33a4992579d495a73bd1882dfa">
      <author>Antoine Riard</author>
      <timestamp>2022-09-19T01:22:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Sept_2022/020933_More-uses-for-CTV.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020874_More-uses-for-CTV.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020873_More-uses-for-CTV.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020872_More-uses-for-CTV.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020870_More-uses-for-CTV.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2022/020869_More-uses-for-CTV.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020933.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - More uses for CTV</title>
    <updated>2025-09-26T14:26:16.815778+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020933.html" rel="alternate"/>
    <published>2022-09-19T01:22:43+00:00</published>
    <summary>The email thread and conversation on the bitcoin-dev mailing list revolve around the potential uses of OP_CHECKTEMPLATEVERIFY (CTV) in Bitcoin transactions. One use case discussed is congestion control, where CTV can be used to compress settlement commitments and facilitate later unpacking of the CTV outputs into the contract's true end state. This can help smooth fee rates and create a less spiky incentive to mine. Another potential application is atomic mining pool payouts, where a single OP_CTV output could pay out an arbitrary number of participants within a single coinbase. However, there are concerns raised about the design of atomic mining pool payouts, including weird dependencies between scriptpubkey, merkle root commitment, and CTV hash.The conversation also delves into L2 contracts and time-out based protocols, exploring the possibility of using layered commitments with OP_CTV to enable speedy settlement styles for these contracts. It is mentioned that predetermined sets of UTXOs in offchain cases can be implemented with a single UTXO that is an n-of-n multisignature or P2WSH revealing an OP_CTV.The advantages of Commitment Transaction Verification (CTV) compared to presigned transactions for trustless collaboration between multiple parties are discussed. While CTV is considered the most parsimonious way to settle into a single output, presigned transactions have their own benefits such as better privacy enhancement. In-script commitments using a non-secret point can reduce the amount of stored state and be deterministic. For large protocol trees, the savings can be substantial. The limitations of coinbase outputs and their impact on the number of participants in mining pools are also highlighted. Paying into batches of channels can compress payouts without a custodial relationship.A proposal is made to use SIGHASH_ALL | ANYONECANPAY to trustlessly collaborate and settle into a single CTV output, similar to coinjoins. The advantages of this method are discussed, but concerns are raised about compatibility with presigned transactions and the need for privacy upgrades to Lightning Network. The idea of using a single OP_CTV output for direct-from-coinbase payouts is also mentioned, but the size limitation on coinbase outputs restricts the number of participants in mining pools.James O'Beirne discusses the potential uses of CTV in Layer 2 protocols like payment channels and vaults. CTV can help compress settlement commitments and avoid protocol failures due to lack of block space. Direct-from-coinbase payouts are desirable for mining pools, but the size limitation on coinbase outputs limits the number of participants. CTV is seen as a simple concept and implementation that is likely to yield potential applications, especially with the possible increase in L2 usage.Overall, the discussions provide insights into the technicalities of implementing efficient L2 contracts, time-out based protocols, and congestion control using CTV. Various use cases and limitations are explored, with suggestions for alternative designs and improvements. The potential benefits of settlement compression and trustless collaboration are highlighted, while considering the implications for privacy and scalability.</summary>
  </entry>
</feed>