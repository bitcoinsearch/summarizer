<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Standard BIP Draft: Turing Pseudo-Completeness</title>
  <updated>2025-10-12T01:03:17.083495+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <author>
    <name>Luke Durback 2015-12-10 01:35:17 2015-12-10T01:35:17+00:00</name>
  </author>
  <author>
    <name>Jeff Garzik 2015-12-10 04:03:30 2015-12-10T04:03:30+00:00</name>
  </author>
  <author>
    <name>Luke Durback 2015-12-10 04:23:26 2015-12-10T04:23:26+00:00</name>
  </author>
  <author>
    <name>Jorge Timón 2015-12-10 05:38:01 2015-12-10T05:38:01+00:00</name>
  </author>
  <author>
    <name>Luke Durback 2015-12-10 06:36:28 2015-12-10T06:36:28+00:00</name>
  </author>
  <author>
    <name>Jorge Timón 2015-12-11 15:36:48 2015-12-11T15:36:48+00:00</name>
  </author>
  <author>
    <name>Jorge Timón 2015-12-11 15:38:37 2015-12-11T15:38:37+00:00</name>
  </author>
  <author>
    <name>Luke Durback 2015-12-11 21:45:44 2015-12-11T21:45:44+00:00</name>
  </author>
  <author>
    <name>Jorge Timón 2015-12-12 20:00:43 2015-12-12T20:00:43+00:00</name>
  </author>
  <author>
    <name>Emin Gün Sirer 2015-12-12 21:01:45 2015-12-12T21:01:45+00:00</name>
  </author>
  <link href="bitcoin-dev/Dec_2015/011951_Standard-BIP-Draft-Turing-Pseudo-Completeness.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011950_Standard-BIP-Draft-Turing-Pseudo-Completeness.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011946_Standard-BIP-Draft-Turing-Pseudo-Completeness.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011943_Standard-BIP-Draft-Turing-Pseudo-Completeness.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011942_Standard-BIP-Draft-Turing-Pseudo-Completeness.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011937_Standard-BIP-Draft-Turing-Pseudo-Completeness.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011934_Standard-BIP-Draft-Turing-Pseudo-Completeness.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011933_Standard-BIP-Draft-Turing-Pseudo-Completeness.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011928_Standard-BIP-Draft-Turing-Pseudo-Completeness.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/011926_Standard-BIP-Draft-Turing-Pseudo-Completeness.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011926.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011926.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Standard BIP Draft: Turing Pseudo-Completeness</title>
    <updated>2025-10-12T01:03:17.083672+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011926.html" rel="alternate"/>
    <published>2015-12-12T21:01:45+00:00</published>
    <summary>In an email conversation on the Bitcoin developers mailing list, Luke Durback proposed the idea of using Bitcoin's scripting language for voting on proposals. He suggested allowing users to &quot;mark&quot; their BTC as being &quot;For Proposition X&quot; and cancel the vote as soon as the BTC is spent again. However, finding a design that would allow this has been challenging. Durback initially thought Turing completeness was necessary for this design, but later realized it was not required.Jorge Timón responded to Durback's proposal by suggesting time-locking votes and using covenants instead of recursion or Turing completeness. Timón questioned the need for Turing completeness in these use cases and asked for more concrete examples. The conversation also touched on the idea of charging fees for complex scripts and the use cases for decentralized exchanges and paying creators through Bitcoin functions.Durback mentioned the possibility of charging a fee for frequently used complicated scripts, and he proposed a decentralized exchange between colored coins that might take a small fee on each trade. However, the need for Turing completeness in these scenarios was questioned, and Timón asked for more clarity and examples.The discussion revolved around implementing a voting system using BTC as voting shares. Durback planned to add a fee for the creator of the system, but Timón pointed out that each scriptSig is only executed once with its corresponding scriptPubKey. They also briefly discussed the idea of a decentralized exchange between colored coins, with Durback suggesting a small fee on each trade. Timón noted that turing completeness is not necessary for decentralized exchange designs.Durback expressed his intention to work on developing a system for using BTC as voting shares, which he believed would be a useful and simple example requiring loops and reused functions. He also suggested charging a fee for complex systems that are used frequently. The conversation ended with Timón asking for high-level examples of the use cases they would like to support with this system.There was also a separate discussion about adding opcodes to make Script Turing Pseudo-Complete, as suggested by Wright. The proposal included adding a return stack and several new opcodes to allow for the creation of new functions, marking transactions as valid, debiting calling transactions, creating new transactions, and more. However, another member of the mailing list responded that there is no need for a BIP draft and suggested using a normal computer language with preferred algorithm libraries and development tools instead.Overall, the conversation focused on the feasibility of using Bitcoin's scripting language for voting on proposals, the potential for charging fees for complex scripts, and the use cases for decentralized exchanges and paying creators through Bitcoin functions.</summary>
  </entry>
</feed>