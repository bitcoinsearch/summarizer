<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Segregated witnesses and validationless mining</title>
  <updated>2025-10-22T02:49:06.677584+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Jan_2016/012187_Segregated-witnesses-and-validationless-mining.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012186_Segregated-witnesses-and-validationless-mining.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012185_Segregated-witnesses-and-validationless-mining.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012105_Segregated-witnesses-and-validationless-mining.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012103_Segregated-witnesses-and-validationless-mining.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Segregated witnesses and validationless mining</title>
    <updated>2025-10-22T02:49:06.677711+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012187.html" rel="alternate"/>
    <published>2016-01-02T16:54:43+00:00</published>
    <summary>On December 28th, 2015, an IRC discussion took place regarding various updates related to Bitcoin. The discussion covered topics such as prior-block possession proofs, fraud proofs, non-fraud correctness proofs, commitments, and segwit. Jorge Tim√≥n requested a link to the IRC discussion in an email sent on January 2nd, 2016 at 10:37 AM. The email signature included Bryan's personal website and phone number. Peter Todd, a member of the Bitcoin-dev community, posted on January 1, 2016, asking for a link to the IRC discussion. He had previously provided updates from the same discussion in a post on December 22, 2015, but did not include any details about the discussion itself.In the IRC discussion, there was a debate about what should be required from the current block to calculate the previous block possession proof. It was suggested that the nonce could be picked arbitrarily, allowing for future soft-forks to add commitments to the current block contents. Fraud proofs were also discussed, with Pieter Wuille bringing up the idea of structuring the possession proof as a merkle tree to easily prove fraud using a merkle path.Bitcoin developer Peter Todd proposed a solution to return segregated witnesses to the status quo. This solution involves making the previous block's witness data a precondition for creating a block with transactions. This can be achieved by including the previous witness data, hashed with a different hash function than the commitment in the previous block, in the current block's coinbase txouts calculation. However, this solution may face resistance from miners currently using validationless mining techniques. To retain the possibility of validationless mining, empty blocks can be created if the previous witness data proof is omitted.Segregated witnesses separate transaction information from the information proving their legitimacy, making validationless mining more profitable. To address this issue, the protocol can be changed to require a copy of the previous block's witness data as a precondition for creating a block. This soft-fork solution aims to prevent the main code path from creating blocks without any validation. Additionally, it is proposed that adding a random selection of previous blocks to the previous witness data proof solution could address concerns about miner theft and currency inflation.In conclusion, the IRC discussion covered various topics related to Bitcoin, including possession proofs, fraud proofs, commitments, and segwit. Peter Todd proposed a solution to bring segregated witnesses back to the status quo by making the previous block's witness data a precondition for block creation. This solution may face pushback from miners using validationless mining techniques. To address this, empty blocks can be created if the previous witness data proof is omitted. The discussion also explored the potential benefits of validationless mining and solutions to address concerns about miner theft and currency inflation.</summary>
  </entry>
</feed>