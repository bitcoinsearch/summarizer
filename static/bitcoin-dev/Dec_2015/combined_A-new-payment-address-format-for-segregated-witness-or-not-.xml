<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A new payment address format for segregated witness or not?</title>
  <updated>2025-09-25T23:07:51.761648+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Dec_2015/012101_A-new-payment-address-format-for-segregated-witness-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012095_A-new-payment-address-format-for-segregated-witness-or-not-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012095.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - A new payment address format for segregated witness or not?</title>
    <updated>2025-09-25T23:07:51.761709+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012095.html" rel="alternate"/>
    <published>2015-12-21T15:48:23+00:00</published>
    <summary>On December 21, 2015, concerns were raised about Segregated Witness (SW) in Pay-to-Script-Hash (P2SH) by jl2012. The issue with SW in P2SH was that it required an additional push in scriptSig, which is not prunable in transmission and is counted as part of the core block size. There was confusion regarding the term &quot;prunable in transmission,&quot; which meant that it had to be included when not sending the witnesses. However, this caused a name collision with UTXO set prunable. It was clarified that it is actually scriptPubKeys that have to be held in the UTXO database.During a discussion on the -dev IRC, the idea of a new payment address format for native segregated witness (SW) was proposed. This would involve defining a native SW address format in addition to the existing payment protocol and witness program hidden in a P2SH address options. The advantages of having a native SW address include promoting the use of native SW over less efficient SW in P2SH, allowing lower fees, being easy for wallets to implement, and being the last address format to define since SW is flexible. However, there are some disadvantages such as old wallets not being able to pay to a new address and the potential doubling of the address length due to the witness program. Both native SW and SW in P2SH are equally good as a fix for transaction malleability. However, SW in P2SH has slightly better privacy by obscuration and allows payment from any Bitcoin reference client since version 0.6.0. On the other hand, SW in P2SH requires an additional push in scriptSig, which is not prunable in transmission and is counted as part of the core block size. It also requires an additional HASH160 operation and provides 160-bit security compared to native SW's 256-bit security. Despite being less efficient, SW in P2SH still results in a likely lower transaction fee than non-SW transactions.The proposed solutions are as follows: Proposal 1 involves defining a native SW address format while still allowing people to use the payment protocol or SW in P2SH if they prefer. Proposal 2 does not require a new address format and instead requires people to use the payment protocol if they want to pay the lowest fee possible, or else use SW in P2SH.To gather input on this topic that is relevant to user experience, the speaker plans to consult merchants, exchanges, wallet developers, and users for their preferences. This consultation will help in making an informed decision regarding the adoption of a new payment address format for native segregated witness.</summary>
  </entry>
</feed>