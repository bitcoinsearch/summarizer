<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Some real-world results about the current Segwit Discount</title>
  <updated>2025-10-12T02:39:18.709936+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/May_2017/014313_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014312_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014311_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014309_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014307_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014303_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014302_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014301_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014300_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014299_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014298_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014297_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014293_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014292_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014291_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014290_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014289_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014288_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014284_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014286_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014283_Some-real-world-results-about-the-current-Segwit-Discount.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014283.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014283.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Some real-world results about the current Segwit Discount</title>
    <updated>2025-10-12T02:39:18.710044+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014283.html" rel="alternate"/>
    <published>2017-05-10T19:40:12+00:00</published>
    <summary>In an email thread, Matt Corallo and Sergio Demian Lerner discuss the implementation of Segregated Witness (Segwit) in Bitcoin. Lerner proposes changing the parameters of Segwit to increase the chance of a consensual hard fork being accepted with minimal code changes. Corallo disagrees and emphasizes the importance of Segwit as a key feature for Bitcoin's long-term reliability. Despite their disagreement, Lerner clarifies that he is not advocating, but rather mediating the discussion. The email also includes some lighthearted banter between the participants.The conversation revolves around the best approach for solving the SegWit block size discount issue. Lerner suggests throwing out the SegWit goals, while others propose increasing the discount ratio. Corallo argues that reducing the cost of input prevout itself would be a better solution, as it achieves the SegWit goal and lowers the ratio between worst-case and average-case block size. Gregory Maxwell joins the conversation with a playful remark.The discussion also touches on the potential capacity of Segwit combined with a 2MB hard fork. Lerner calculates that this combination can provide 50% more capacity than Segwit alone. However, there are concerns about the increased Unspent Transaction Output (UTXO) bloat with this combination. Gregory Maxwell notes that optimizing raw size may not be relevant in the long run, but if it were, the limit should be pure size.There is another debate about the maximum block weight for Bitcoin transactions. Suggestions are made, but it is pointed out that the numbers do not work out as expected. The conversation reveals that the initial suggestion was in the context of a soft fork, not a hard fork.Another thread discusses the discount system for SegWit transactions. Lerner suggests a 50% witness discount would be better for preventing witness spam and future scalability options. However, Alphonse Pace disagrees and claims that the current 75% discount is sufficient. The conversation also touches on the potential impact of these changes on the maximum number of transactions per second.In a separate discussion, there is a suggestion to implement a soft fork to a 50% discount before a soft fork to a 75% discount. Lerner argues that going from a more restrictive ruleset to a less restrictive one is more difficult and may not be fully backwards compatible. Johnson Lau notes that any parameter can be changed in a hard fork, so this discussion does not necessarily relate to the current BIP141 proposal.The conversation continues with Lerner proposing a soft fork to a 50% discount now and another soft fork to a 75% discount later, if needed. Johnson Lau points out that any parameter can be changed in a hard fork, so it is not related to the current BIP141 proposal. Lerner suggests a more conservative 50% discount to avoid making the worst-case block size unnecessarily large in case of a future hard fork.The discussion on the Segwit discount concludes with Lerner suggesting a soft fork to 50% now and another soft fork to 75% later, if required. Johnson Lau notes that any parameter can be changed in a hard fork and suggests using 75% in a soft fork and changing it to a different value or redefining the definition of weight with a hard fork later.Overall, the email thread and discussions highlight the ongoing debates and considerations regarding the implementation and parameters of Segregated Witness in Bitcoin. The participants express differing opinions on the best approach, with some emphasizing the importance of Segwit's features for long-term reliability and others discussing potential scalability options and bloat concerns.Full nodes face a challenge with the size of the Unspent Transaction Output (UTXO) set, making it a bigger issue than the size of the blockchain itself. The current 75% discount on witness space does not effectively prevent witness spam, but instead leaves room for it. Sergio Demian Lerner suggests that a 50% witness discount would be more appropriate to address this issue.Lerner conducted an analysis of 1000 blocks starting from Block #461653 and computed various metrics, including the size of witness and non-witness data. He found that the 75% discount worsens worst-case block sizes, increasing them to 4MB instead of the desired 2.7MB. By using a 50% witness discount, scaling could be less risky as it would keep the worst-case block size at 5.4MB instead of 8MB.Witness spam refers to the free space in the witness part of a block that miners can fill to create larger blocks with low latency, potentially leading to centralization. The current 75% discount does not effectively prevent witness spam and only achieves more transactions per second if the type of transactions change. Currently, 80% of all inputs/outputs are P2PKH, and utilizing the extra witness space would require a shift towards multisig transactions.Lerner's analysis indicates that the</summary>
  </entry>
</feed>