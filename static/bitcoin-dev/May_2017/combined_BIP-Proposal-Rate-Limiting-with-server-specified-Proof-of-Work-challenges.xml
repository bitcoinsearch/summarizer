<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP Proposal: Rate Limiting with server specified Proof of Work challenges</title>
  <updated>2025-09-26T15:58:34.677369+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="mc6f7e15205675b18d6d663f8024701ae631b4d82">
      <author>[bitcoin-dev] BIP Proposal: Rate Limiting with server specified Proof of Work challenges Karl Johan Alm</author>
      <timestamp>2017-05-08T02:48:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] BIP Proposal: Rate Limiting with server specified Proof of Work challenges Karl Johan Alm" parent_id="mailing-list-2017-05-mc6f7e15205675b18d6d663f8024701ae631b4d82" anchor="m10c67741836995b3b13fff9986284e8b99af2216">
      <author>Erik Aronesty</author>
      <timestamp>2017-05-08T18:58:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="Erik Aronesty" parent_id="mailing-list-2017-05-m10c67741836995b3b13fff9986284e8b99af2216" anchor="m9c21c447af94245f2e9b11590ed1d94631038a4c">
      <author>Karl Johan Alm</author>
      <timestamp>2017-05-09T01:15:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="1" position="3" reply_to="[bitcoin-dev] BIP Proposal: Rate Limiting with server specified Proof of Work challenges Karl Johan Alm" parent_id="mailing-list-2017-05-mc6f7e15205675b18d6d663f8024701ae631b4d82" anchor="m8b990edadb75594442e81db1d2555eef90eea1f2">
      <author>Karl Johan Alm</author>
      <timestamp>2017-05-19T04:09:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/May_2017/014355_BIP-Proposal-Rate-Limiting-with-server-specified-Proof-of-Work-challenges.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014287_BIP-Proposal-Rate-Limiting-with-server-specified-Proof-of-Work-challenges.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014279_BIP-Proposal-Rate-Limiting-with-server-specified-Proof-of-Work-challenges.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2017/014276_BIP-Proposal-Rate-Limiting-with-server-specified-Proof-of-Work-challenges.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014276.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP Proposal: Rate Limiting with server specified Proof of Work challenges</title>
    <updated>2025-09-26T15:58:34.678050+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-May/014276.html" rel="alternate"/>
    <published>2017-05-19T04:09:29+00:00</published>
    <summary>Karl Johan Alm has proposed a new feature for rate limiting purposes in which nodes can solve arbitrary Proof of Work (PoW) challenges in exchange for connection slots. The proposal aims to cover DoS risky services such as bloom filters. Two types of PoW, sha256 and cuckoo-cycle, have been included in the proposal and can be combined in different ways. The BIP has been posted on GitHub and has not received any negative feedback so far. If there are no objections, the proposer intends to have a BIP number assigned. The link to the proposal can be found at https://github.com/kallewoof/bips/blob/pow-connection-slots/bip-rate-limiting-via-pow.mediawiki.Erik Aronesty has suggested specifying rate-limiting PoW as bytecode, allowing nodes to plug in various &quot;machine-captcha&quot; measures. However, it is unclear what he means by this. The BIP includes methods to determine an approximate time to solve, discarding challenges that take longer than the challenge's expiration. Another approach suggested by others is requiring a nanobit payment, which could further prevent DDOS attacks and generate revenue for nodes. However, this approach also has unwanted side effects that need clarification. In the proposed scenario, the node requesting PoW does not gain anything from lying to the node performing the work.Overall, the proposal by Karl Johan Alm offers a new feature to limit the rate of connections using PoW challenges. It includes two types of PoW, sha256 and cuckoo-cycle, which can be combined for enhanced security. The feature aims to cover other DoS risky services like bloom filters. The proposal has been shared on GitHub, and feedback is welcome.</summary>
  </entry>
</feed>