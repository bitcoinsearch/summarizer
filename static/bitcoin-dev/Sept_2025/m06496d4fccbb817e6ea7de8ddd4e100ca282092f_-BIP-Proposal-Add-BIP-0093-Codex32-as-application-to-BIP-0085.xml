<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Add BIP-0093 (Codex32) as application to BIP-0085</title>
  <updated>2025-09-05T02:30:56.234552+00:00</updated>
  <author>
    <name>Ben Westgate 2025-09-03 00:44:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Add BIP-0093 (Codex32) as application to BIP-0085</title>
    <updated>2025-09-05T02:30:56.234578+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/774faeb9-6c6b-4545-8071-56ec03e78cd0n@googlegroups.com/T/#m06496d4fccbb817e6ea7de8ddd4e100ca282092f" rel="alternate"/>
    <summary>In a recent series of exchanges, Ben Westgate has highlighted the introduction and development of BIP-0093 (codex32) as a proposed application within the framework of BIP-0085, which is focused on deterministic entropy from BIP32 keychains. This proposal aims to facilitate the generation of codex32 strings directly from BIP-0032 master keys, providing a standardized method for creating deterministic wallet backups and seed management. The significance of this integration lies in its potential to enhance the security and reliability of cryptographic seed storage and recovery, offering features like error correction, hand verification, identifiers, and secret sharing capabilities that surpass those available through the existing BIP-39 application.

The feedback from Andrew Poelstra and Russell O'Connor has been largely positive, commending the initiative for its application in generating recoverable child codex32 strings for scenarios involving forgetful relatives, termed "uncle-Jim"-style backups. They have expressed a preference for wallets to generate initial strings by encoding RNG entropy directly, to uphold information-theoretic security. Moreover, they recognize the value in stretching entropy under circumstances where users are unable or unwilling to provide sufficient direct encoding but remain skeptical of their hardware random number generators (hRNGs). The notion of using codex32 backups for BIP-85 root keys has also been endorsed as a commendable idea.

Ben Westgate's subsequent updates and revisions, incorporating pseudocode for the character value selection and clarifying the constraints on the 'n' parameter, were promptly implemented responding to Javier Mateos’ suggestions aimed at enhancing clarity for implementers, particularly regarding the DRNG→5-bit extraction process and the rule that 'threshold == 0 implies n == 1'. These changes aim to ensure consistent implementations across different codex32 tooling that uses BIP-85 derivation, supported by comprehensive test vectors and a reference implementation.

Javier Mateos reviewed the modifications positively, affirming that the updates effectively address prior concerns and should contribute to the technical soundness of the proposal. The inclusion of codex32 as an application under BIP-85 follows the pattern established for applications within this specification, promising to streamline wallet backup processes and improve interoperability across the cryptocurrency ecosystem.

For more detailed insights into the proposal and to participate in further discussions, interested parties can refer to the PR on GitHub: [BIP-0093 Proposal](https://github.com/bitcoin/bips/compare/master..BenWestgate:bips:codex32).</summary>
    <published>2025-09-03T00:44:00+00:00</published>
  </entry>
</feed>
