<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[0/4] A Bitcoin Scripting Proposal BIP Quartet</title>
  <updated>2025-09-30T02:28:26.113490+00:00</updated>
  <author>
    <name>Brandon Black 2025-09-29 22:55:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[0/4] A Bitcoin Scripting Proposal BIP Quartet</title>
    <updated>2025-09-30T02:28:26.113522+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/877bxknwk6.fsf@rustcorp.com.au/T/#m3c3d7d5e67e917d2547995a45be1d578bfeb18d1" rel="alternate"/>
    <summary>In the ongoing development of Tapscript, a new version is being considered that could significantly enhance its functionality within SegWit v1 32-byte witness programs and possibly integrate with BIP360 scripts. The discussion revolves around the potential replacement of the CODESEPARATOR opcode with a new opcode named SEGMENT. This proposal stems from the functionality of CODESEPARATOR in Tapscript 0xc0, which adds the last position of the opcode to the sighash, a feature that appears somewhat redundant with the introduction of SEGMENT. The SEGMENT opcode mandates the division of the script into execution chunks, suggesting an inherent capability to include the positions of the current segment directly into the sighash. This integration could potentially render CODESEPARATOR obsolete by streamlining the process and enhancing efficiency.

Additionally, the conversation touches upon the operational intricacies of accumulating the sum of all input amounts through a sequence of opcodes: TX_SELECT_INPUT_AMOUNT|TX_INPUTSELECT_ALL OP_TX \ TXSELECT_NUM_INPUTS OP_TX OP_MULTI OP_ADD. This operation underlines the necessity for either the SECP256K1_PRIVATE_TO_PUBLIC or OP_ECSCALARMUL functions to convert the Taptweak into a point that can be added to the internal key, highlighting the complex nature of script operations within Tapscript and the broader Bitcoin protocol. These discussions reflect a deep engagement with the technical aspects of Bitcoin's scripting capabilities, aiming to refine and optimize transaction validation processes.</summary>
    <published>2025-09-29T22:55:00+00:00</published>
  </entry>
</feed>
