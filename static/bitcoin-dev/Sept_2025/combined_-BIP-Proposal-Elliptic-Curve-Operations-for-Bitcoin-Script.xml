<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [BIP Proposal] Elliptic Curve Operations for Bitcoin Script</title>
  <updated>2025-09-26T00:45:42.865113+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m01cb846cea657f0ebe2ece4e99876410050060e0">
      <author>[BIP Proposal] Elliptic Curve Operations for Bitcoin Script Olaoluwa Osuntokun</author>
      <timestamp>2025-08-25T00:50:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[BIP Proposal] Elliptic Curve Operations for Bitcoin Script Olaoluwa Osuntokun" parent_id="mailing-list-2025-08-m01cb846cea657f0ebe2ece4e99876410050060e0" anchor="m47aca0b8c4a248d3be1637a936a32fbedd571068">
      <author>jeremy</author>
      <timestamp>2025-08-25T16:45:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="jeremy" parent_id="mailing-list-2025-09-m47aca0b8c4a248d3be1637a936a32fbedd571068" anchor="mca83b38959201b543e13a3eb599add135feed0b8">
      <author>jeremy</author>
      <timestamp>2025-09-01T22:43:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Sept_2025/mca83b38959201b543e13a3eb599add135feed0b8_-BIP-Proposal-Elliptic-Curve-Operations-for-Bitcoin-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2025/m47aca0b8c4a248d3be1637a936a32fbedd571068_-BIP-Proposal-Elliptic-Curve-Operations-for-Bitcoin-Script.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2025/m01cb846cea657f0ebe2ece4e99876410050060e0_-BIP-Proposal-Elliptic-Curve-Operations-for-Bitcoin-Script.xml" rel="alternate"/>
  <link href="https://gnusha.org/pi/bitcoindev/CAO3Pvs-Cwj=5vJgBfDqZGtvmoYPMrpKYFAYHRb_EqJ5i0PG0cA@mail.gmail.com/T/#m01cb846cea657f0ebe2ece4e99876410050060e0" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - [BIP Proposal] Elliptic Curve Operations for Bitcoin Script</title>
    <updated>2025-09-26T00:45:42.865708+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAO3Pvs-Cwj=5vJgBfDqZGtvmoYPMrpKYFAYHRb_EqJ5i0PG0cA@mail.gmail.com/T/#m01cb846cea657f0ebe2ece4e99876410050060e0" rel="alternate"/>
    <published>2025-09-01T22:43:00+00:00</published>
    <summary>The proposal to enhance Bitcoin's scripting language by introducing new Elliptic Curve (EC) operation op codes is aimed at leveraging the Taproot infrastructure to expand the blockchain's capabilities in facilitating complex operations directly within its script. This initiative paves the way for the computation of the top-level Taproot output public key using Bitcoin Script, enabling a more dynamic approach to creating smart contracts on the Bitcoin blockchain. The integration of these op codes, including `OP_EC_POINT_ADD`, `OP_EC_POINT_MUL`, `OP_EC_POINT_NEGATE`, and `OP_EC_POINT_X_COORD`, is designed to broaden the range of functional operations available to developers, thereby fostering the development of versatile smart contracts and innovative applications such as optimized Discreet Log Contracts (DLCs), partial musig2 signature verifications, and EC-based sigma protocols.
A specific aspect of the proposal highlights the introduction of an operation named *OP_EC_LIFT_X_EVEN*, which seeks to counteract the effects of *OP_EC_POINT_X_COORD* with some limitations due to parity considerations, useful in conjunction with *OP_IKEY*. Moreover, the proposal suggests the addition of *OP_EC_GENERATOR* to simplify script composability by pushing the generator point G onto the stack directly, which addresses the ambiguity associated with representing G as 0 and facilitates a more intuitive execution of operations involving the point at infinity. This modification is expected to streamline processes like *OP_TWEAKADD* by enabling a more coherent sequence of generating a point, multiplication, lifting, and adding points together.
These proposed changes aim to rectify and clarify the procedures for elliptic curve operations within Bitcoin's scripting language, addressing current shortcomings and inaccuracies. By doing so, they set the stage for more accurate and efficient implementations of elliptic curve operations in Bitcoin scripts. For those interested in the technical specifics or contributing to the ongoing discussion, comprehensive details can be accessed through the Bitcoin Improvement Proposal (BIP) [here](https://github.com/bitcoin/bips/pull/1945), alongside a reference implementation for `btcd` available [here](https://github.com/btcsuite/btcd/pull/2413). Through these enhancements, Bitcoin's scripting language is poised for significant advancements in its ability to support complex and secure on-chain logic implementations, marking a substantial step forward in the evolution of Bitcoin's scripting functionalities.</summary>
  </entry>
</feed>