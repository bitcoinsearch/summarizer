<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Mempool Validation and Relay Policies via User-Defined Scripts</title>
  <updated>2025-09-29T02:31:11.754123+00:00</updated>
  <author>
    <name>/dev /fd0 2025-09-28 01:22:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Mempool Validation and Relay Policies via User-Defined Scripts</title>
    <updated>2025-09-29T02:31:11.754156+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CALiT-ZqFhMV8VfgOdNyamG4oLgyCL5E7W8s3F9gB_k0ihyUAgA@mail.gmail.com/T/#m44803c1a8e032bc921a5713f1cf091a1d6597349" rel="alternate"/>
    <summary>In recent discussions among developers regarding enhancements to transaction validation processes, a straightforward yet untested solution has been proposed. The essence of this proposal involves the introduction of a new configuration option named `txnotify`, which draws inspiration from the existing `blocknotify` feature. This new option is designed to trigger the execution of user-specified commands or scripts upon the receipt of a new transaction from a peer.

The implementation details include the development of a function, `ExecuteTxNotify()`, which is tasked with running the script provided by the user. The outcome of this script dictates whether a transaction should be accepted or rejected, based on its return values 'accept' or 'reject', respectively. This functionality allows for a more dynamic interaction with incoming transactions, where the script's verdict directly influences the acceptance of transactions into the memory pool.

To integrate this feature effectively within the transaction processing workflow, it is suggested to invoke `ExecuteTxNotify()` within the `AcceptToMemoryPool()` function. This strategic placement ensures that transactions deemed unworthy by the user-defined script are preemptively filtered out, preventing their entry into the mempool. Such an approach not only enhances the control over transaction validation but also introduces a layer of customization, enabling users to tailor the validation process according to specific needs or criteria.

For more detailed information on the topic, refer to the discussion in the Bitcoin Development Mailing List at [transaction validation](https://www.openai.com).</summary>
    <published>2025-09-28T01:22:00+00:00</published>
  </entry>
</feed>
