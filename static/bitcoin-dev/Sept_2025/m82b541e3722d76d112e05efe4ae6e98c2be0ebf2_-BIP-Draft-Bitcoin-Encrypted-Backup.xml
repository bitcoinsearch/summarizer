<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>[BIP Draft] Bitcoin Encrypted Backup</title>
  <updated>2025-09-05T02:31:46.227338+00:00</updated>
  <author>
    <name>pyth 2025-09-04 06:58:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>[BIP Draft] Bitcoin Encrypted Backup</title>
    <updated>2025-09-05T02:31:46.227367+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/e0b1a14c74645e34c1b2e1d5bb1b60ea69dd6437.camel@pythcoiner.dev/T/#u#m82b541e3722d76d112e05efe4ae6e98c2be0ebf2" rel="alternate"/>
    <summary>At WizardSardine, the development team has been exploring an encryption scheme suitable for Liana wallet descriptors for a considerable period, spanning at least two years. The quest for an appropriate scheme recently culminated with the discovery of Salvatore Ingala's publication on DelvingBitcoin, which proposed a clear and fitting scheme. Following this revelation, significant progress has been made towards its implementation. The efforts have led to the creation of draft implementations and a Bitcoin Improvement Proposal (BIP), now available for community feedback. The resources provided include a draft BIP accessible via [GitHub](https://github.com/bitcoin/bips/pull/1951), a Rust implementation coupled with a command-line interface found at [this GitHub repository](https://github.com/pythcoiner/encrypted_backup), and a simplistic graphical user interface leveraging the Rust implementation, available at [another GitHub repository](https://github.com/pythcoiner/bed). Additionally, Salvatore Ingala's insightful post that inspired these developments can be read at [DelvingBitcoin](https://delvingbitcoin.org/t/a-simple-backup-scheme-for-wallet-accounts).

The draft BIP and its associated implementations have raised several open questions within the developer community, particularly regarding the cryptographic choices and methodologies employed. A key point of discussion revolves around the generation of deterministic nonces. The current approach relies on random nonce generation, but there's a proposition to adopt a deterministic method by hashing the concatenation of a fixed string, plaintext, and multiple keys. This potential shift raises concerns about its security implications. Another area of debate is the choice of cipher, where AES-GCM-256 has been selected without thorough justification, prompting inquiries into whether it is the optimal choice for this application or if alternative cryptographic constructions might offer superior suitability. Finally, the decision to encode all fields in big-endian byte order has been questioned, with a call for insights into whether other encoding strategies might be more appropriate.

This call for feedback, remarks, and reviews from the broader development community is a crucial step in refining the proposed encryption scheme for wallet descriptors, ensuring its robustness, security, and effectiveness in real-world applications.</summary>
    <published>2025-09-04T06:58:00+00:00</published>
  </entry>
</feed>
