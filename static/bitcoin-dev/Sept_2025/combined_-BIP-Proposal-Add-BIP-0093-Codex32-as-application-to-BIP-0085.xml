<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [BIP Proposal] Add BIP-0093 (Codex32) as application to BIP-0085</title>
  <updated>2025-09-03T02:23:52.453548+00:00</updated>
  <author>
    <name>Javier Mateos 2025-09-02 02:30:00+00:00</name>
  </author>
  <author>
    <name>Ben Westgate 2025-09-01 18:37:00+00:00</name>
  </author>
  <author>
    <name>Javier Mateos 2025-09-01 08:41:00+00:00</name>
  </author>
  <author>
    <name>Ben Westgate 2025-08-31 22:25:00+00:00</name>
  </author>
  <link href="bitcoin-dev/Sept_2025/m8c510f0d857a6cb468aa3e941aa817475e7119d4_-BIP-Proposal-Add-BIP-0093-Codex32-as-application-to-BIP-0085.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2025/m3515c1c03325873af71aa71ec3783321b498f370_-BIP-Proposal-Add-BIP-0093-Codex32-as-application-to-BIP-0085.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2025/m585051b989e217715756196a061b88f55330263d_-BIP-Proposal-Add-BIP-0093-Codex32-as-application-to-BIP-0085.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2025/mdf2c201e4c857dde1287e40d90b8cca84e3667be_-BIP-Proposal-Add-BIP-0093-Codex32-as-application-to-BIP-0085.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [BIP Proposal] Add BIP-0093 (Codex32) as application to BIP-0085</title>
    <updated>2025-09-03T02:23:52.453597+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/774faeb9-6c6b-4545-8071-56ec03e78cd0n@googlegroups.com/T/#u#mdf2c201e4c857dde1287e40d90b8cca84e3667be" rel="alternate"/>
    <summary>The recent collaborative effort on the Bitcoin Development Mailing List has brought forth significant updates to a proposal aimed at integrating BIP-0093 (codex32) within BIP-0085's framework. The updates come as a response to feedback requesting clarity and standardization in the implementation process of the codex32 tooling, which utilizes BIP-85 derivation patterns. These changes are designed to ensure consistent application across various platforms, enhancing the proposalâ€™s technical soundness and adherence to established patterns.

Key modifications include the introduction of pseudocode to delineate character value selection clearly, an important step in simplifying the overall implementation process. The documentation now features an added column and row in a table to clarify under what conditions the threshold equals zero, a critical aspect for understanding 'n's constraint when 't' is zero. This adjustment, along with revisions in the notes section regarding the unshared secret segment, introduces a normative statement requiring 'n' to be exactly one when the threshold is set to "0". This specification aims to eliminate ambiguity by setting explicit output requirements under specified conditions, thus improving the precision and reliability of the documentation.

Ben Westgate has been instrumental in proposing the integration of BIP-0093 with BIP-0085. This integration seeks to leverage BIP-0085's deterministic entropy generation capabilities for creating codex32 backups directly from BIP-0032 master keys. Codex32 offers advantages such as error correction, hand verification, identifiers, and secret sharing attributes over the traditional BIP-39, making it a valuable addition to the cryptographic toolkit. The proposal emphasizes a standardized approach to generating codex32 strings from BIP-85-derived entropy, highlighting its potential to enhance seed management and wallet backup procedures. Despite codex32's current limited adoption, there is supportive momentum, showcased by a draft PR for Bitcoin Core to incorporate codex32 strings, which can be reviewed [here](https://github.com/bitcoin/bitcoin/pull/32652?utm_source=chatgpt.com).

Furthermore, the discussion includes suggestions for refining the proposal to facilitate smoother integration and adoption. Among these suggestions is the inclusion of explicit pseudocode for the DRNG to 5-bit extraction process, aiming to minimize variations in implementation and provide a clear, standardized methodology. Additionally, the need to elevate the rule stating "threshold == 0 implies n == 1" to a normative requirement was identified, underscoring its significance and ensuring that implementers accord it the necessary attention. These adjustments are geared towards streamlining the integration process and promoting uniform adoption of BIP-0093 within the ecosystem of BIP-0085 applications.</summary>
    <published>2025-09-02T02:30:00+00:00</published>
  </entry>
</feed>
