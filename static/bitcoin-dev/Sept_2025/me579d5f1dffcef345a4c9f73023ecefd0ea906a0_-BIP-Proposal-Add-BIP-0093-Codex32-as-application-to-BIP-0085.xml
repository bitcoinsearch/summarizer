<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Add BIP-0093 (Codex32) as application to BIP-0085</title>
  <updated>2025-09-09T02:31:04.102508+00:00</updated>
  <author>
    <name>Aneesh Karve 2025-09-07 23:13:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Add BIP-0093 (Codex32) as application to BIP-0085</title>
    <updated>2025-09-09T02:31:04.102534+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/774faeb9-6c6b-4545-8071-56ec03e78cd0n@googlegroups.com/T/#me579d5f1dffcef345a4c9f73023ecefd0ea906a0" rel="alternate"/>
    <summary>In a recent discussion on the Bitcoin Development Mailing List, the topic of simplification and clarification of derivation paths in the BIP-85 specification was brought up. The conversation highlighted the potential complexity of these paths, specifically noting that they might become the longest within the BIP-85 spec. Suggestions were made to explore avenues for making these derivation paths more straightforward without compromising their integrity or purpose. The idea centers around whether there is a possibility to embody the principle of "less is more" within the construction of these paths, particularly regarding the derivation of single bech32 characters.

Further analysis suggested that the method of drawing characters could be made more efficient and clearer, especially in relation to the "Bytes Length Table" provided within the specification. It was pointed out that it should be more explicitly stated whether the table refers to bytes drawn or retained, among other possible clarifications. Additionally, the consistency in utilizing the same Digital Random Number Generator (DRNG) instance for all draws was mentioned as a point that could use further explanation. This specificity could aid in understanding and implementing the spec more accurately, especially when compared to other sections of BIP-85 where the methodology differs, such as the RSA key generation which does not predetermine the number of draws due to its inherent uncertainty.

The discourse also touched upon the technicalities of the drawing process itself, contemplating whether implementers could benefit from drawing bytes in bulk ((chars * 5) // 8 bytes at a time) rather than individually per character. This approach would potentially reduce the total number of iterations and reads required, streamlining the process. However, concerns were raised about the readability and writeability of such a method, suggesting that if the proposed changes compromise these aspects, it may be preferable to adhere to the current methodology.</summary>
    <published>2025-09-07T23:13:00+00:00</published>
  </entry>
</feed>
