<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] OP_TWEAKADD</title>
  <updated>2025-09-08T02:43:52.983784+00:00</updated>
  <author>
    <name>jeremy 2025-09-06 21:27:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] OP_TWEAKADD</title>
    <updated>2025-09-08T02:43:52.983820+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/7b8f0cba-1f73-4aa8-8c01-4a7170af1424n@googlegroups.com/T/#mcbd05a00d947563525d2c7eaa6ddd4ec2a8dcd3a" rel="alternate"/>
    <summary>In a recent discussion on the Bitcoin Development Mailing List, the topic of adjusting the cost associated with the TWEAKADD operation was broached. The suggestion to lower the cost was made, though the precise amount for this adjustment remains uncertain. This uncertainty stems from the relationship between the amount of data involved and the number of operations that can be performed. There is a consideration to be made about potential use cases that might require executing numerous operations sequentially, which would necessitate a careful balance in setting the cost so as not to inadvertently hinder such applications.

Furthermore, there is a notable concern regarding the potential for denial-of-service (DoS) attacks. Specifically, if the cost were set too low, it could enable an actor to chain many of these operations together in a manner that could threaten network stability or performance. This highlights the need for a thoughtful approach in determining the cost, taking into account both utility and security considerations.

Another important point discussed relates to the generation of cryptographic keys and the verification process involved. The necessity for checks within key generation code arises from the potential variability in the sources of entropy used. It's underscored that achieving an invalid tweak through brute force attempts against SHA256 hashed values would be exceedingly difficult, implying that concerns over malleability should be minimal, especially if tweaks remain unhashed. The communication underscores the importance of maintaining network integrity and security while also considering the operational flexibility needed for future use cases.</summary>
    <published>2025-09-06T21:27:00+00:00</published>
  </entry>
</feed>
