<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BIP Proposal] Elliptic Curve Operations for Bitcoin Script</title>
  <updated>2025-09-02T02:42:00.840762+00:00</updated>
  <author>
    <name>jeremy 2025-09-01 22:43:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BIP Proposal] Elliptic Curve Operations for Bitcoin Script</title>
    <updated>2025-09-02T02:42:00.840802+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAO3Pvs-Cwj=5vJgBfDqZGtvmoYPMrpKYFAYHRb_EqJ5i0PG0cA@mail.gmail.com/T/#mca83b38959201b543e13a3eb599add135feed0b8" rel="alternate"/>
    <summary>The correspondence highlights an intriguing aspect of cryptographic functionality, specifically within the realm of Bitcoin development. It points out that the existing operation codes (opcodes) for elliptical curve (EC) point multiplication inadvertently allow for raw field arithmetic operations such as addition, multiplication by a constant, and possibly other prime field arithmetic operations through indirect means. This unintended capability stems from the nature of the opcodes designed primarily for EC point multiplication.

The message suggests considering the explicit inclusion of raw field arithmetic opcodes, alongside or as an extension to the current elliptical curve multiplication opcodes. The rationale behind this suggestion is rooted in an engineering principle that emphasizes efficiency in commonly used functionalities. If certain operations are implicitly possible and likely to be utilized frequently, it advocates for these operations to be explicitly supported and optimized for efficiency. This proposal aims not only to acknowledge the implicit capabilities of the current system but also to enhance the overall functionality and performance of cryptographic operations within the Bitcoin framework.

This insight into the potential for broader arithmetic functionality within Bitcoin's cryptographic operations underscores the importance of revisiting and potentially expanding the opcode set. Such expansions would cater directly to the needs and efficiencies of Bitcoin development, ensuring that the platform remains robust, versatile, and forward-thinking.</summary>
    <published>2025-09-01T22:43:00+00:00</published>
  </entry>
</feed>
