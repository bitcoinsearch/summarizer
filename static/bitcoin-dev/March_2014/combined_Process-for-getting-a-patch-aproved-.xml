<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Process for getting a patch aproved?</title>
  <updated>2025-10-13T02:47:31.617595+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/March_2014/004533_Process-for-getting-a-patch-aproved-.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004531_Process-for-getting-a-patch-aproved-.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004527_Process-for-getting-a-patch-aproved-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004527.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004527.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004527.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Process for getting a patch aproved?</title>
    <updated>2025-10-13T02:47:31.617680+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004527.html" rel="alternate"/>
    <published>2014-03-06T07:56:30+00:00</published>
    <summary>Kevin asked for guidance on how to submit a patch and inquired if it could be sent as an attachment through the mailing list. Wladimir suggested using GitHub instead, as reviewing patches sent through the mailing list can take time and they may get lost. He explained that the GitHub model is better for this project because an 'issue' appears until the patch is either merged or closed, ensuring it doesn't get overlooked.However, Wladimir mentioned that if the proposed change concerns a protocol change, it is advisable to discuss it on the mailing list, as people building other implementations read there and not on GitHub.In terms of submitting a patch, the recommended method is to open a GitHub account and submit the patch there. This allows for more collaborative development and easier tracking of changes. If opening a GitHub account is not possible, sending a git-format-patch via email may be an acceptable alternative.There are also other options available for submitting a patch. One option is to send it through the mailing list as an attachment, as Kevin had suggested. However, this may not always be the most efficient method. Using a version control system like Git or SVN to create and submit the patch is another option. These systems enable collaborative development and make it easier to track changes. Many open source projects prefer patches submitted through these systems.When submitting a patch, it is important to ensure that it adheres to the coding standards or guidelines set by the project. This increases the likelihood of the patch being accepted and merged into the codebase. Thoroughly testing the patch before submission is also crucial.In conclusion, there are multiple ways to submit a patch, and it is important to follow the appropriate procedures and guidelines set forth by the project. Using GitHub or a version control system like Git or SVN is recommended, but sending patches through the mailing list as attachments is also an option. Adhering to coding standards and thoroughly testing the patch are essential for increasing its chances of being accepted.</summary>
  </entry>
</feed>