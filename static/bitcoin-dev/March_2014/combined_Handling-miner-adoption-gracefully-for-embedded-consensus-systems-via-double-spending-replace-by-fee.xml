<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Handling miner adoption gracefully for embedded consensus systems via double-spending/replace-by-fee</title>
  <updated>2025-11-01T02:56:19.798143+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/March_2014/004816_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004814_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004796_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004795_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004793_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004792_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004791_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004790_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004786_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004785_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004784_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004778_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004774_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004773_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2014/004772_Handling-miner-adoption-gracefully-for-embedded-consensus-systems-via-double-spending-replace-by-fee.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Handling miner adoption gracefully for embedded consensus systems via double-spending/replace-by-fee</title>
    <updated>2025-11-01T02:56:19.798265+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-March/004772.html" rel="alternate"/>
    <published>2014-03-26T01:09:01+00:00</published>
    <summary>In a recent discussion, blockchain technology expert Peter Todd raised concerns about the reduction of OP_RETURN length to 40 bytes before the release of Bitcoin 0.9. He pointed out a security flaw regarding OP_CHECKMULTISIG sigops that were not taken into account, which could lead to unminable transactions and mempool bloat. Todd suggested getting rid of bare OP_CHECKMULTISIG outputs, as this only affects Counterparty at present.In response to Todd's concerns, Troy Benjegerdes proposed creating a new coin with an explicit 'data' field of around 169 bytes, adding 1 byte to each transaction if unused. This alternative is considered more viable than various hacks to overcome the 40-byte limit in Bitcoin. The discussion concluded by urging the Bitcoin 1% to assess the market risk associated with the 40-byte limit and consider implementing some of Todd's proposed alternatives.Todd also spent time examining the Datacoin code and concluded that his next copycatcoin would have an explicit &quot;data&quot; field of around 169 bytes. This addition would provide a small data field for proof of publication while adding one byte to each transaction if unused. He believed this approach would create a more reliable infrastructure for proof of publication compared to existing workarounds for Bitcoin's 40 byte limit.During the discussion, Todd expressed his concern about miners accepting transactions with longer data than specified as standard. He argued that non-validated proof of publication would become costly in the long run as it competes with transactions that actually use the utxo feature. However, he opposed any limitation on OP_RETURN at the protocol level, except for the block size limit itself. He suggested different and configurable mining policies to improve modularity, noting that these methods come with additional overhead compared to using OP_RETURN.Todd emphasized the importance of proof-of-publication and suggested that miners should support it. He argued that embedding within Bitcoin provides greater security compared to operating alongside it. He used Twister as an example, highlighting the switch to a centralized checkpointing scheme when utilizing a separate PoW blockchain or a merge-mined one. While acknowledging the censorship risk of going the embedded route, Todd pointed out that explicit blacklists would be required. He emphasized that the &quot;proof of publication vs separate chain&quot; discussion is separate from the &quot;merged mining vs independent chain&quot; debate.In conclusion, Todd's concerns about the reduction of OP_RETURN length and his suggestions for improving proof-of-publication highlight the need for careful consideration and implementation within the Bitcoin ecosystem.</summary>
  </entry>
</feed>