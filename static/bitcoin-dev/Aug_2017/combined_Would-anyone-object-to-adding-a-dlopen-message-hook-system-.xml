<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Would anyone object to adding a dlopen message hook system?</title>
  <updated>2023-08-01T21:25:59.232565+00:00</updated>
  <author>
    <name>Erik Aronesty 2017-08-15 04:44:52+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2017-08-15 01:33:34+00:00</name>
  </author>
  <author>
    <name>Mark Friedenbach 2017-08-13 20:56:39+00:00</name>
  </author>
  <author>
    <name>Jonas Schnelli 2017-08-13 20:00:41+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2017-08-13 18:46:37+00:00</name>
  </author>
  <link href="bitcoin-dev/Aug_2017/014829_Would-anyone-object-to-adding-a-dlopen-message-hook-system-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2017/014826_Would-anyone-object-to-adding-a-dlopen-message-hook-system-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2017/014825_Would-anyone-object-to-adding-a-dlopen-message-hook-system-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2017/014824_Would-anyone-object-to-adding-a-dlopen-message-hook-system-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2017/014823_Would-anyone-object-to-adding-a-dlopen-message-hook-system-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Would anyone object to adding a dlopen message hook system?</title>
    <updated>2023-08-01T21:25:59.232565+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-August/014823.html" rel="alternate"/>
    <summary>The discussion revolves around extending the P2P layer of Bitcoin through the addition of module extensions. Erik Voorhees proposed this idea, suggesting that these modules could be loaded via dlopen() and would allow for the creation of enhanced features that certain peers could support. The main goal is to enable lightning network micropayments, allowing users to pay for better node access and ultimately creating a market for node services.However, Jonas Schnelli expressed concern about the security implications of adding modules like dlopen() to the core client. He argued that the current setup, where the consensus logic, p2p system, wallet, and GUI all share the same process, already poses security risks. Instead, he suggested utilizing existing IPC interfaces like RPC/ZMQ, which can provide bidirectional communication using long poll.Erik's proposal involved calling module hooks with message data when messages are received. These hooks would then have the ability to handle the message, mark the peer as invalid, push a message to the peer, or pass through an alternate command. Modules would also have the option to include their own private commands prefixed by "x:". To implement this, Erik suggested having linked-in modules that can be optionally compiled and added to the bitcoin conf file, and then loaded via dlopen(). These modules should be robust enough to handle changes in Bitcoin versions, but not if there are changes in the network layer. Incompatibility between modules should throw an exception to ensure broken peers don't stay online.In general, the writer believes that the core reference could benefit from the ability to create subnetworks within the Bitcoin ecosystem. The proposed MessageHookIn, MessageHookOut, and MessageHook classes illustrate how such a module/hook system could be implemented to extend the functionality of the P2P layer.</summary>
    <published>2017-08-15T04:44:52+00:00</published>
  </entry>
</feed>
