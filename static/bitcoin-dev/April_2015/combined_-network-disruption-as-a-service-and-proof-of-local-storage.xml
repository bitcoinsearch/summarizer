<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - &quot;network disruption as a service&quot; and proof of local storage</title>
  <updated>2025-10-16T02:37:08.699279+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/April_2015/007761_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007756_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007755_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007754_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007753_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007752_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007751_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007747_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007743_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007730_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007728_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007711_-network-disruption-as-a-service-and-proof-of-local-storage.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007761.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007761.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007761.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007761.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007761.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007761.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - &quot;network disruption as a service&quot; and proof of local storage</title>
    <updated>2025-10-16T02:37:08.699400+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007761.html" rel="alternate"/>
    <published>2015-04-01T02:34:56+00:00</published>
    <summary>The protocol described in the given context aims to enable a node to prove to another peer that it is storing a local copy of a public file, such as the blockchain, without requiring additional resources. This is achieved through the use of asymmetric-time-encoding, which encodes the blockchain in a way that takes significantly more time to write than to read.There are two protocols proposed to prove local possession. The first protocol involves both the prover and verifier paying a small cost. In this protocol, the verifier sends a seed to the prover, who must respond with the hash of the decrypted blocks within a certain time limit. The second protocol requires the prover to pay a higher cost, while the verifier pays a negligible cost. In this case, the verifier chooses a seed and pre-computes the encrypted blocks derived from the seed using the prover's IP. The seed is then sent to the prover, who must respond with the hash of the encrypted blocks within a certain time limit.These protocols can be made available by the client under different states. New nodes are initially only allowed to request protocol 2, and once they have completed it, they are permitted to periodically perform protocol 1. It is also possible to restrict the challenge-response to a specific portion of the blockchain.One of the key advantages of this proposal over GMaxwell's proposal is that each peer only needs to build a single table, which represents the encrypted blockchain. This means that it could still be possible for a single peer to establish thousands of connections to the network. Additionally, Sergio's proposal allows for a larger time gap between a good peer and a malicious peer by selecting a larger p value. However, it is important to note that an attacker's IP can be easily detected, and measures can be taken to restrict the challenge-response to a specific portion of the blockchain.In the context of the Bitcoin network, the problem of pseudo-nodes is a significant concern. One potential solution to this issue is requiring each peer to demonstrate resource consumption before being allowed to connect to other peers. Gmaxwell proposed Proof of Storage as a solution, while Sergio introduced the protocol called &quot;Proof of Local Storage.&quot; Unlike Gmaxwell's proposal, Proof of Local Storage does not require additional data storage and allows peers to prove that they are maintaining a full copy of the blockchain.Overall, the discussions revolve around finding ways to improve blockchain resiliency through proof of storage, ensuring more full nodes on the network, and detecting non-full nodes with less computation. The proposed protocols aim to provide a reliable mechanism for discerning a local copy's existence without imposing substantial encoding costs.</summary>
  </entry>
</feed>