<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Looking for a good bitcoin script decompiler in Python</title>
  <updated>2025-10-24T02:34:03.795776+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/April_2015/007850_Looking-for-a-good-bitcoin-script-decompiler-in-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007848_Looking-for-a-good-bitcoin-script-decompiler-in-Python.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2015/007847_Looking-for-a-good-bitcoin-script-decompiler-in-Python.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Looking for a good bitcoin script decompiler in Python</title>
    <updated>2025-10-24T02:34:03.795862+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-April/007847.html" rel="alternate"/>
    <published>2015-04-29T23:27:19+00:00</published>
    <summary>In an email chain on the Bitcoin-development mailing list on April 29, 2015, a sender requested recommendations for a Python script that could generate op codes from the hash of locking and unlocking transaction scripts. The purpose for this script was not specified in the email. However, Richard Moore, the founder of Genetic Mistakes Software Inc., responded to the email with a recommendation. He suggested using his library called pycoind, which can be imported using &quot;import pycoind&quot;. Moore provided a link to the library on GitHub at https://github.com/ricmoo/pycoind. He also gave an example of how to use the library by utilizing the Tokenizer function, which would output the op codes for a given hex string. It is worth noting that Jeff Garzik, a Bitcoin core developer and open source evangelist, signed off on the email chain. Additionally, the email included an advertisement for server and application monitoring software, although it was unrelated to the request for the Python script.</summary>
  </entry>
</feed>