<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Increasing the blocksize as a (generalized) softfork.</title>
  <updated>2025-10-25T02:30:32.694186+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Jan_2016/012191_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012180_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012181_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012179_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012178_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012177_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012176_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012167_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012093_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012089_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012088_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012087_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012085_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012081_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012080_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012076_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012075_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2015/012073_Increasing-the-blocksize-as-a-generalized-softfork-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Increasing the blocksize as a (generalized) softfork.</title>
    <updated>2025-10-25T02:30:32.694268+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/012073.html" rel="alternate"/>
    <published>2016-01-04T21:53:36+00:00</published>
    <summary>The email thread discussed the proposal of using a generalized softfork as an alternative to hard forks. Joe2015 proposed the idea, challenging the assumption that increasing the blocksize limit requires a hardfork. He introduced the concept of standard softforks, where after the fork, two potential chains exist - one valid under the new rules and old rules, and one valid under the old rules only. However, if more than 50% of the hashpower follows the new rules, the old chain is destined to be orphaned.Joe2015 then introduced the idea of a generalized softfork, which involves a transform function f(B)=B' that maps a block valid under the new rules to a block valid under the old rules. In this scenario, three chains may exist - the new chain valid under the new rules only, the mapped chain f(B3), f(B4), f(B5), and the old chain B3', B4', B5', valid under the old rules only. The Segregated Witness was given as an example of a generalized softfork, where the new block format combines the old block and witness data, and the function f() simply removes the witness data to create a valid block under the old rules.The paper then explained how to achieve arbitrary block-size increases through a generalized softfork. This proposal consisted of defining new rules for valid blocks and a transformation function f(). The new block rules were similar to the old rules but with some small changes. The function f() truncated the block so that it contained only the coinbase transaction. By combining these new rules and the transformation function, a generalized softfork could be implemented. This resulted in a new chain under the new rules, including an increased blocksize limit, which could be mapped to a valid chain under the old rules.It was noted that since all mapped blocks were empty, old clients would never see transactions confirming. The paper concluded by highlighting that increasing the blocksize limit is commonly believed to require a hardfork, but this draft demonstrated that it could be achieved using a generalized softfork. The author suggested further exploration of other types of hardforks that can be implemented as generalized softforks and the security implications that come with them.</summary>
  </entry>
</feed>