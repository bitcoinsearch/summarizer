<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Time to worry about 80-bit collision attacks or not?</title>
  <updated>2025-10-12T00:41:50.840958+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <author>
    <name>Gavin Andresen 2016-01-07 19:02:05 2016-01-07T19:02:05+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2016-01-07 19:13:22 2016-01-07T19:13:22+00:00</name>
  </author>
  <author>
    <name>Adam Back 2016-01-07 19:19:42 2016-01-07T19:19:42+00:00</name>
  </author>
  <author>
    <name>Ethan Heilman 2016-01-07 20:40:03 2016-01-07T20:40:03+00:00</name>
  </author>
  <author>
    <name>Dave Scotese 2016-01-07 20:56:33 2016-01-07T20:56:33+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2016-01-07 21:06:30 2016-01-07T21:06:30+00:00</name>
  </author>
  <author>
    <name>Ethan Heilman 2016-01-07 22:56:38 2016-01-07T22:56:38+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2016-01-07 23:39:58 2016-01-07T23:39:58+00:00</name>
  </author>
  <author>
    <name>Pieter Wuille 2016-01-07 23:52:27 2016-01-07T23:52:27+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2016-01-08 01:00:42 2016-01-08T01:00:42+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2016-01-08 01:26:22 2016-01-08T01:26:22+00:00</name>
  </author>
  <author>
    <name>Watson Ladd 2016-01-08 01:27:02 2016-01-08T01:27:02+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2016-01-08 01:54:00 2016-01-08T01:54:00+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2016-01-08 12:38:50 2016-01-08T12:38:50+00:00</name>
  </author>
  <author>
    <name>Watson Ladd 2016-01-08 14:34:09 2016-01-08T14:34:09+00:00</name>
  </author>
  <author>
    <name>Adam Back 2016-01-08 15:26:50 2016-01-08T15:26:50+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2016-01-08 15:33:29 2016-01-08T15:33:29+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2016-01-08 15:46:53 2016-01-08T15:46:53+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2016-01-08 15:50:06 2016-01-08T15:50:06+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2016-01-08 15:59:21 2016-01-08T15:59:21+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2016-01-08 16:06:34 2016-01-08T16:06:34+00:00</name>
  </author>
  <author>
    <name>Pieter Wuille 2016-01-08 17:38:34 2016-01-08T17:38:34+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2016-01-08 18:41:15 2016-01-08T18:41:15+00:00</name>
  </author>
  <author>
    <name>Jorge Tim√≥n 2016-01-11 20:32:15 2016-01-11T20:32:15+00:00</name>
  </author>
  <author>
    <name>Tier Nolan 2016-01-11 23:57:59 2016-01-11T23:57:59+00:00</name>
  </author>
  <author>
    <name>Tier Nolan 2016-01-12 00:00:08 2016-01-12T00:00:08+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2016-01-12 12:08:18 2016-01-12T12:08:18+00:00</name>
  </author>
  <author>
    <name>Zooko Wilcox-O'Hearn 2016-01-12 23:22:17 2016-01-12T23:22:17+00:00</name>
  </author>
  <link href="bitcoin-dev/Jan_2016/012237_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012234_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012231_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012230_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012229_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012225_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012219_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012223_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012222_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012221_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012220_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012218_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012217_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012216_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012215_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012209_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012210_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012208_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012207_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012205_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012206_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012204_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012203_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012201_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012202_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012200_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012199_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2016/012198_Time-to-worry-about-80-bit-collision-attacks-or-not-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012198.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012198.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Time to worry about 80-bit collision attacks or not?</title>
    <updated>2025-10-12T00:41:50.841127+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012198.html" rel="alternate"/>
    <published>2016-01-12T23:22:17+00:00</published>
    <summary>Zooko, a contributor to the Bitcoin development mailing list, suggests that the thread is omitting consideration of multi-target attacks. He explains that if an attacker is happy to find a collision with any one out of a large number of potential victims, they get an advantage proportional to the number of potential victims. Therefore, it would be wise to estimate how many public keys will eventually be in use. Zooko recommends a recent blog post by DJB for more information about the &quot;Attacker Economist&quot; approach.It is advised to worry about 80-bit collision attacks as they are likely to cost less than $1 million in the next ten to twenty years. If one agrees to lock up funds with someone else and they control the public key, they become susceptible to these attacks. It is suggested to avoid pay-to-script-hash addresses and instead use payment protocol and &quot;raw&quot; multisig outputs when dealing with significant amounts of money. Alternatively, one can ask for a hierarchical deterministic (BIP32) seed and derive a public key for them to use. To ensure maximum security, one should follow security in depth and validate all input secure coding principles.In an email conversation on January 11, 2016 at 11:57 PM, Tier Nolan corrected an error in a code block on the Bitcoin development mailing list. The original script had a syntax error in the order of the parameters for CHECKSIG and OP_DROP, and Tier Nolan swapped the positions of const_pub_key and prev_hash in the script to correct it.In a discussion on the bitcoin-dev mailing list, Gavin Andresen asked about how long it would take for a 2^84 attack where the work is an ECDSA private to public key derivation. However, another participant in the discussion suggested that the EC multiply may not actually be necessary and proposed using compressed public keys and a sha256 call instead. Gavin Andresen defended the choice of SHA256D over RipeMD160 for an update to the digital currency's software in a Bitcoin developer email thread. He argued that the tradeoff between crypto strength and code complexity is important and that &quot;the strength of the crypto is all that matters&quot; was not security-first. Another developer disagreed and stated that code complexity shouldn't be a concern, but rather the security versus space tradeoff.Peter Todd shared his experience of raising an issue with segregated witnesses on the BIP process in response to a comment by Gavin Andresen. Todd expressed concerns that it could make validationless mining easier and more profitable. The issue was discussed on IRC, and Todd plans to write the code to implement a fix and submit it as a pull-req against the segwit branch.Gavin Andresen proposed eliminating the risk of a potential attack by having only one witness program version in a Bitcoin-dev email thread in 2016. Pieter Wuille disagreed with this suggestion and argued for maintaining Bitcoin's 128-bit security target for witness scripts. The proposal remains under discussion.In an email exchange on January 8, 2016, Gavin Andresen asked if there was a similar attack scheme possible if the network had switched to Schnorr 2-of-2 signatures. However, he quickly corrected himself and acknowledged that the scheme would still work with Schnorr.Gavin Andresen discussed the tradeoff between crypto strength and code complexity in relation to segwitness in an email thread dated January 8, 2016. He highlighted two ways of stuffing the segwitness hash into the scriptPubKey but suggested keeping the design as simple as possible. He admitted that using a 32-byte hash could compromise short-term scalability but believed it was a no-brainer.In a forum thread, Gavin Andresen responded to concerns about the security of Bitcoin's code complexity. He acknowledged the importance of a &quot;security first&quot; mindset but pointed out the tradeoff between crypto strength and code complexity. The message suggests ongoing discussions around the topic of Bitcoin security.Gavin Andresen asked about the timeline for a 2^84 attack on ECDSA private to public key derivation in a message. He also asked about a similar attack scheme assuming the switch to Schnorr 2-of-2 signatures.In an email exchange on the bitcoin-dev mailing list, Gavin Andresen and Pieter Wuille discuss the use of cryptography in Bitcoin. Pieter argues for using better cryptography that is up to par with security standards, while Gavin emphasizes the importance of simplicity and points out the potential vulnerabilities in the scripting language. They also discuss the security of SHA256(SHA256) over RIPEMD160(SHA256) and the implementation of segwit. The discussion revolves around collision attacks and the need for collision security to protect against such attacks. There are concerns about the vulnerability of nested hash construction RIPEMD160(SHA256()) and length extension attacks. Ethan Heilman provides an algorithm that can find targeted substrings and raises concerns about cascading the same hash function twice. The participants also discuss the security</summary>
  </entry>
</feed>