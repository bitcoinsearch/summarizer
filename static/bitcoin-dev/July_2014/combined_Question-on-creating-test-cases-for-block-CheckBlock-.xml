<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Question on creating test cases for block.CheckBlock()</title>
  <updated>2025-10-12T01:53:19.624010+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <author>
    <name>Sergio Lerner 2014-07-21 17:30:34 2014-07-21T17:30:34+00:00</name>
  </author>
  <author>
    <name>Mike Hearn 2014-07-22 11:13:50 2014-07-22T11:13:50+00:00</name>
  </author>
  <link href="bitcoin-dev/July_2014/006334_Question-on-creating-test-cases-for-block-CheckBlock-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2014/006331_Question-on-creating-test-cases-for-block-CheckBlock-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006331.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006331.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Question on creating test cases for block.CheckBlock()</title>
    <updated>2025-10-12T01:53:19.624150+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-July/006331.html" rel="alternate"/>
    <published>2014-07-22T11:13:50+00:00</published>
    <summary>The author is currently working on a BIP that requires modifications to the block acceptance rules. They have two options for testing this BIP: mining blocks on the testnet or creating test cases for Bitcoin Core. The author specifically wants to create test cases for the block.CheckBlock() function by verifying 100 dynamically generated blocks.However, there are some uncertainties regarding the state of the blockchain when executing a test case. It is unclear which network (regtest, testnet3, or mainnet) the test case is configured for and what blocks are present in the blockchain. Upon investigation, the author discovered that the checkblock_tests.cpp file is the only test case available for CheckBlock(). However, this test case assumes that the mainnet is configured. To overcome this limitation, the author needs to utilize regtest, which will allow them to create blocks with a difficulty of 1.Currently, there is no infrastructure for writing blockchain unit tests. To address this issue, the pull tester has been extended as a solution. The pull tester is an app called BitcoindComparisonTool, based on bitcoinj, that builds a regtest chain and submits it to a local regtest node. This tool enables testing of reorgs and various rules by communicating with the node solely via P2P.While the pull tester provides a potential solution, there is still room for improvement. The code requires cleaning up, as copy/paste coding is prevalent. Additionally, the ease of verifying a BIP via P2P plays a crucial role in determining its feasibility.</summary>
  </entry>
</feed>