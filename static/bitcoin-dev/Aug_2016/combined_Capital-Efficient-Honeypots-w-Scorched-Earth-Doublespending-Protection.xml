<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Capital Efficient Honeypots w/ &quot;Scorched Earth&quot; Doublespending Protection</title>
  <updated>2025-10-29T13:08:36.676816+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Aug_2016/013092_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013091_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013086_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013087_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013085_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013083_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013082_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013075_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013073_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013072_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013070_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013069_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013067_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013066_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2016/013058_Capital-Efficient-Honeypots-w-Scorched-Earth-Doublespending-Protection.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Capital Efficient Honeypots w/ &quot;Scorched Earth&quot; Doublespending Protection</title>
    <updated>2025-10-29T13:08:36.676952+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-August/013058.html" rel="alternate"/>
    <published>2016-08-31T20:01:14+00:00</published>
    <summary>In the context of the Bitcoin blockchain, securing multiple servers can be challenging. One solution is to use one private key per server, but this can be costly when there are many servers to protect. Previous proposals for using tree signatures as honeypots have not been implemented in the Bitcoin protocol. However, a viable option is to use a 2-of-2 multisig and the SIGHASH_SINGLE feature.To implement this approach, a honeypot secret key is shared among all N servers, while a discriminator secret key is kept secret. Each server creates a unique signature with SIGHASH_SINGLE, paying a token amount to a notification address. Additionally, a pre-signed signature created with the discriminator secret key is left on the associated server along with the honeypot secret key.However, using non-standard SIGHASH flags may flag the transactions involved in risk analysis at exchanges and other platforms, which could threaten the fungibility of the reward. To address this, a suggestion is made to use a pre-signed standard transaction instead. This transaction spends the honeypot output to two addresses: a per-server canary address and a change address. Importantly, the private key associated with the change address is left on the server, giving the intruder the ability to spend the change output and claim their reward.A refinement to this concept involves the use of opt-in RBF flags and CPFP-aware transaction replacement. This allows the honeypot owner to potentially recover the honeypot while still learning about the intrusion. In cases where there are attempts at double-spending, the &quot;scorched earth&quot; concept can be employed. A second version of the honeypot pre-signed transaction would spend the entirety of the honeypot output to fees, making it costly for the honeypot owner to double-spend. By publishing this &quot;scorched earth&quot; transaction, the honeypot owner's honesty is encouraged, and CPFP-aware transaction replacement becomes irrelevant.It should be noted that the complexity of these methods may discourage intruders from targeting honeypots altogether. However, the use of Bitcoin-based honeypots provides an incentive for hackers to reveal their presence and activity, ultimately enhancing security measures.Overall, by utilizing a 2-of-2 multisig and the SIGHASH_SINGLE feature, along with additional measures such as opt-in RBF flags and CPFP-aware transaction replacement, the security of multiple servers on the Bitcoin blockchain can be enhanced, providing a more efficient and effective means of protection against intrusion. Additionally, the implementation of CHECKSEQUENCEVERIFY can further ensure that the honeypot output can only be spent if transaction replacement is enabled.</summary>
  </entry>
</feed>