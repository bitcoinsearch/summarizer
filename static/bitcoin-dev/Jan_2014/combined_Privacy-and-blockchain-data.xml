<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Privacy and blockchain data</title>
  <updated>2025-10-13T02:50:04.940155+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Jan_2014/004034_Privacy-and-blockchain-data.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2014/004026_Privacy-and-blockchain-data.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2014/004019_Privacy-and-blockchain-data.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004019.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004019.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004019.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Privacy and blockchain data</title>
    <updated>2025-10-13T02:50:04.940248+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004019.html" rel="alternate"/>
    <published>2014-01-10T10:10:51+00:00</published>
    <summary>The email conversation revolves around the trade-off between privacy and bandwidth in Bitcoin wallets. The concept is to generate addresses with a fixed prefix, which determines the anonymity set and the associated trade-off between privacy and bandwidth throughout the wallet's lifespan. However, this method expands the potential attackers from just those monitoring SPV queries to anyone with a copy of the blockchain. To enhance privacy, it is recommended to use non-specific filters and prefixed addresses for incoming payments.Instead of matching prefix filters against unspent transaction outputs (UTXO), it is suggested to match them against all transaction outputs within blocks. This approach increases privacy but also widens the scope of potential attackers. It is worth noting that change transaction outputs should not have prefixes to prevent easy identification of spend versus change addresses in a transaction.One way to achieve a privacy/bandwidth trade-off is by generating addresses with common prefixes, where the length of the prefix determines the size of the anonymity set. However, using this method allows anyone with a copy of the blockchain to become a potential attacker, rather than just those monitoring SPV queries. The current UTXO set comprises 7.4 million unspent outputs, 2.2 million transactions with unspent outputs, and 2.1 million unique unspent scriptPubKeys. If an 8-bit prefix is used, there would be approximately 10,000 transactions in the monitored UTXO. By analyzing the different days or time-periods a user transacted, an attacker could potentially deduce their prefix. Furthermore, anyone the user transacts with would directly know their prefix, making it easier to identify spend versus change addresses in a transaction.The provided context delves into the technical aspects of Bitcoin wallets and how they handle transaction outputs while safeguarding privacy. To ensure scalability, efficiency, and privacy, the wallet keeps track of all transactions associated with scriptPubKeys without scanning the entire blockchain for relevant information. However, syncing a wallet can inadvertently disclose information about the coins owned, leaving it susceptible to attacks from both internal and global adversaries. The article outlines a threat model and highlights the objectives of maintaining privacy against such attacks.The fundamental functionalities of spending funds, receiving new funds, detecting unauthorized spends, and confirming transactions are explained. To enhance scalability and efficiency, the workload is distributed across multiple nodes at both per-block and within-block levels. Deterministic wallets, utilizing technologies like BIP32, have gained popularity due to their simple backup models. Various query schemes, such as Bloom filters, prefix filters, and cryptographically blinded schemes, are examined, while addressing potential correlation attacks and denial-of-service (DoS) attacks.The article also covers address usage, management, and generation to address the challenge of users expecting prompt notifications for new transactions, regardless of the address generated by their wallet, while still maintaining privacy. The overarching objective of the article is to provide readers with a comprehensive understanding of Bitcoin wallets and their mechanisms.</summary>
  </entry>
</feed>