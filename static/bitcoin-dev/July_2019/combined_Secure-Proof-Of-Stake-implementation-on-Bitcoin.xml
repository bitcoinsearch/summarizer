<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Secure Proof Of Stake implementation on Bitcoin</title>
  <updated>2025-09-25T23:05:47.273350+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/July_2019/017163_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017161_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017144_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017143_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017142_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017141_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017134_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017133_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017131_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017130_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017132_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017129_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017128_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017127_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017126_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017125_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017124_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017122_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017121_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017120_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2019/017119_Secure-Proof-Of-Stake-implementation-on-Bitcoin.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-July/017119.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Secure Proof Of Stake implementation on Bitcoin</title>
    <updated>2025-09-25T23:05:47.273451+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-July/017119.html" rel="alternate"/>
    <published>2019-07-24T09:30:46+00:00</published>
    <summary>The email thread discusses the implementation of Proof of Stake (PoS) in Bitcoin and its advantages and drawbacks compared to Proof of Work (PoW). Kenshiro suggests using PoS v3.0 with additional improvements such as hardcoded checkpoints and the ability to detect transaction censorship. However, ZmnSCPxj argues that PoW is more efficient and secure due to the trust-minimization and uncensorability requirements of Bitcoin. ZmnSCPxj also points out flaws in Kenshiro's proposed improvements, including the need to trust developers and vulnerability to censorship attacks.The discussion highlights potential risks of PoS, including stake-grinding attacks and the possibility of a single entity controlling more than 51% of stakeable coins. The email thread emphasizes the trade-offs between PoW and PoS and the challenges of achieving a secure and decentralized consensus algorithm.The writer of the original email suggests that PoS could be a secure and eco-friendly alternative to PoW. They propose using PoS v3.0 with hardcoded checkpoints and a block explorer or trusted source to verify the hash of the current block height. However, ZmnSCPxj argues that PoW is more efficient and provides uncensorability. They also highlight the difficulty of detecting if a single entity controls more than 51% of stakeable coins under PoS, making it vulnerable to censorship attacks.In another email conversation, Kenshiro proposes a full change to the PoS protocol to prevent energy waste and 51% history rewrite attacks. Kenshiro suggests implementing hardcoded checkpoints and allowing only one staker to create a block in each block, preventing spamming by other stakers. However, Oscar Lafarga raises concerns about the security risk introduced by block explorers and the Bitcoin Core release dispatch system. Lafarga questions the usefulness of similar checkpointing schemes in improving the Bitcoin network.Lafarga notes that the proposed PoS implementation would operate as an addition to the current PoW consensus code. They caution against introducing block explorers and dispatch systems, which could reduce the trustlessness of the network. Lafarga also highlights past cases where similar checkpointing schemes weakened consensus without improving the network.The writer suggests that correctly implemented PoS could be secure against 51% history rewrite attacks. They propose hardcoded checkpoints and moving checkpoints as improvements to protect the blockchain and prevent long-range attacks. Nodes would only allow chain reorganizations not deeper than a certain number of blocks. The writer concludes that even with a large majority of coins, an attacker would be unable to perform a history rewrite attack, only slowing down the network or censoring transactions in their own blocks.</summary>
  </entry>
</feed>