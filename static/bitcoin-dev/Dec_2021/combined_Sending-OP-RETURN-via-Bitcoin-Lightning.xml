<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Sending OP_RETURN via Bitcoin Lightning</title>
  <updated>2025-10-12T00:45:30.083628+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m023e393e303343f5952d9430e55b2b5fe87c4f8c">
      <author>[bitcoin-dev] Sending OP_RETURN via Bitcoin Lightning Héctor José Cárdenas Pacheco</author>
      <timestamp>2021-12-06T09:54:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Sending OP_RETURN via Bitcoin Lightning Héctor José Cárdenas Pacheco" parent_id="mailing-list-2021-12-m023e393e303343f5952d9430e55b2b5fe87c4f8c" anchor="mc839a204a013ed5607412c8659abc2ba1ea61e21">
      <author>Karl</author>
      <timestamp>2021-12-06T10:20:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="Karl" parent_id="mailing-list-2021-12-mc839a204a013ed5607412c8659abc2ba1ea61e21" anchor="m2ca04283caf772db6e467acec7e365a9cd90582f">
      <author>[bitcoin-dev] [Lightning-dev] &quot; Martin Habovštiak</author>
      <timestamp>2021-12-06T11:31:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="2" position="3" reply_to="Karl" parent_id="mailing-list-2021-12-mc839a204a013ed5607412c8659abc2ba1ea61e21" anchor="ma9ee6d80cbf07baaa19345a19358fdab039539e8">
      <author>[bitcoin-dev] &quot; Christian Moss</author>
      <timestamp>2021-12-06T12:38:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="3" position="4" reply_to="[bitcoin-dev] [Lightning-dev] &quot; Martin Habovštiak" parent_id="mailing-list-2021-12-m2ca04283caf772db6e467acec7e365a9cd90582f" anchor="m1f990d4fc7184b11838103d4552e9b484b5b3b18">
      <author>Christian Moss</author>
      <timestamp>2021-12-06T16:35:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="4" position="5" reply_to="Christian Moss" parent_id="mailing-list-2021-12-m1f990d4fc7184b11838103d4552e9b484b5b3b18" anchor="m9ac3b97cd649c2b4d40b1cd8d05adf557082282f">
      <author>Peter Todd</author>
      <timestamp>2021-12-09T09:12:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="5" position="6" reply_to="Peter Todd" parent_id="mailing-list-2021-12-m9ac3b97cd649c2b4d40b1cd8d05adf557082282f" anchor="m38087765cbb9a71a9a04f53e12656e65b93ac772">
      <author>Christian Moss</author>
      <timestamp>2021-12-09T09:49:00.000Z</timestamp>
    </message>
    <message id="msg_8" depth="6" position="7" reply_to="Christian Moss" parent_id="mailing-list-2021-12-m38087765cbb9a71a9a04f53e12656e65b93ac772" anchor="m65fbcfc2d52a929ae94fb414b0bfd4bfb2fab121">
      <author>Peter Todd</author>
      <timestamp>2021-12-09T10:07:00.000Z</timestamp>
    </message>
    <message id="msg_9" depth="7" position="8" reply_to="Peter Todd" parent_id="mailing-list-2021-12-m65fbcfc2d52a929ae94fb414b0bfd4bfb2fab121" anchor="maaa4a6dc35461b9dcf93827b8277c3b97ea8b008">
      <author>Alex Schoof</author>
      <timestamp>2021-12-09T12:12:00.000Z</timestamp>
    </message>
    <message id="msg_10" depth="8" position="9" reply_to="Alex Schoof" parent_id="mailing-list-2021-12-maaa4a6dc35461b9dcf93827b8277c3b97ea8b008" anchor="m8fa0bd9d2b1c6c730ae478c27d33d22ec55afb1f">
      <author>Peter Todd</author>
      <timestamp>2021-12-09T12:56:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Dec_2021/019651_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019650_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019649_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019648_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019644_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019626_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019625_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019624_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019623_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019622_Sending-OP-RETURN-via-Bitcoin-Lightning.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-December/019651.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-December/019651.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Sending OP_RETURN via Bitcoin Lightning</title>
    <updated>2025-10-12T00:45:30.084846+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-December/019651.html" rel="alternate"/>
    <published>2021-12-09T12:56:19+00:00</published>
    <summary>The discussion revolves around the multisig scheme and Single Use Seals. The author suggests that for on-chain aggregation seals, instead of relying on a single common service provider, it would be better to use multiple aggregation services. This mitigates both availability and censorship risks.However, the other person in the discussion misunderstands the protocol, as seals are trustless with regard to validity, and one can validate any seal regardless of which aggregation service is used. An example is given of an exchange being their own aggregator and not needing multisig, while a customer might use a 3-of-5 multisig since they only do a few transactions a month.Interestingly, it might be worthwhile to run your own aggregator and use multisig in some scenarios. For example, Alice can use a 2-of-3 with two third-party aggregators and her own aggregation chain. If both third-parties are up, she does no on-chain transactions at all; if one third-party is down, she can use her own and the remaining third-party. Thus, she would only do an on-chain transaction to defeat censorship or failure.In a recent email exchange, Christian Moss and Peter Todd discussed the use of single-use seals for asset transfers on the Bitcoin ledger. Todd explains that such seals require an on-chain transaction to post proof of publication to the ledger. However, he notes that scalability is possible because multiple proofs of transfer can be batched into a Merkle tree and added as a single transaction to the ledger.Peter Todd, a well-known Bitcoin developer, responded to a question on the scalability of non-fungible tokens (NFTs) in the context of the RGB protocol. Todd explained that RGB intends to scale NFTs and similar assets in the future via scalable single-use-seals. He referred to an article he wrote back in 2017 explaining how single use seals require an on-chain transaction to post the proof of publication to the ledger. However, batch processing can be used by adding the merkle root into the single transaction going into the ledger, thus allowing scalability.In a recent email thread on the bitcoin-dev mailing list, Christian Moss brought up the issue of scalability for non-fungible tokens (NFTs) in the context of the RGB protocol. Moss questioned whether RGB could scale NFTs as each transaction to transfer ownership of an NFT would require an on-chain transaction. In response, Peter Todd, one of the co-founders of the RGB protocol, pointed out that they intend to address this issue in the future by using scalable single-use-seals. Todd provided a link to his 2017 blog post that explains how these seals can be used to transfer assets off-chain while still maintaining their integrity and security.A discussion on the usage of OP_RETURN for creating and trading NFTs on Bitcoin led to questions about the possibility of using this opcode via Lightning. The idea was to explore if OP_RETURN could be inside a channel's opening or closing transaction and if it could change hands within that channel or network of channels. It was noted that OP_RETURNs do not have ownership according to the bitcoin network, but it is possible to define a protocol that associates an OP_RETURN with ownership, which could then be transferred via lightning by sending associated currency.The discussion also touched on the possibility of making OP_RETURN divisible and sending a piece of OP_RETURN just like one can do on the primary ledger. It was noted that OP_RETURNs themselves do not have ownership, but a protocol that gives them divisible ownership, including via lightning, could be defined. However, it was assumed that this would need a protocol layer parallel to Bitcoin/Lightning that stores and reads all Bitcoin transactions and the ones involving the node's channels as well as the ones with the OP_RETURN. One participant recommended researching RGB, which does not scale NFTs as each transaction to transfer ownership of an NFT would require an on-chain transaction. The participants in the discussion were from the bitcoin-dev and lightning-dev mailing lists.It has been discussed that it is not possible to use Lightning network for NFTs on Bitcoin because lightning relies on liquidity to work, which NFTs are not. A solution suggested is using Ruben Somsens state chain protocol, which allows swapping utxos off-chain and could harbor an op return/nft. The discussion also mentioned the possibility of defining a protocol that associates an OP_RETURN with ownership, which could then be transferred via lightning by sending associated currency via lightning.The discussion thread revolves around the possibility of using OP_RETURN to create and trade NFTs on Bitcoin via Lightning, and if it could be divisible. The potential of defining a protocol for OP_RETURN ownership transfer via lightning is also discussed. The conversation includes questions on whether OP_RETURN can be used in opening or closing transactions within a channel or network of channels and if they have ownership. The need for a parallel protocol layer that stores and reads all Bitcoin transactions and those involving the node's channels</summary>
  </entry>
</feed>