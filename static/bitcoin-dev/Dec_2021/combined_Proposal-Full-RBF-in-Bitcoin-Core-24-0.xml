<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Proposal: Full-RBF in Bitcoin Core 24.0</title>
  <updated>2025-09-26T11:50:06.925389+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m748899c17f5943ad57cc557143e6fad45234c3ac">
      <author>[bitcoin-dev] Proposal: Full-RBF in Bitcoin Core 24.0 Antoine Riard</author>
      <timestamp>2021-06-15T16:55:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Proposal: Full-RBF in Bitcoin Core 24.0 Antoine Riard" parent_id="mailing-list-2021-06-m748899c17f5943ad57cc557143e6fad45234c3ac" anchor="mace075d917a1dc4b1875bb7f408517c9430ff1d2">
      <author>Billy Tetrud</author>
      <timestamp>2021-06-17T00:58:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="Billy Tetrud" parent_id="mailing-list-2021-06-mace075d917a1dc4b1875bb7f408517c9430ff1d2" anchor="me2edd4c5fd3325df6d114b6b96cafdcf2354e665">
      <author>Greg Sanders</author>
      <timestamp>2021-06-17T22:28:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="2" position="3" reply_to="Billy Tetrud" parent_id="mailing-list-2021-06-mace075d917a1dc4b1875bb7f408517c9430ff1d2" anchor="m20a0b3f030feb792aaa83036b36cd7d80e387f6a">
      <author>Antoine Riard</author>
      <timestamp>2021-06-25T00:23:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="3" position="4" reply_to="Antoine Riard" parent_id="mailing-list-2021-06-m20a0b3f030feb792aaa83036b36cd7d80e387f6a" anchor="m01e2f1e06ca316fce363a0680f8c147231b42547">
      <author>Billy Tetrud</author>
      <timestamp>2021-06-26T16:13:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="4" position="5" reply_to="Billy Tetrud" parent_id="mailing-list-2021-06-m01e2f1e06ca316fce363a0680f8c147231b42547" anchor="m7890722812bfc04b118a9078aefc766f6b2a2b4a">
      <author>Jeremy</author>
      <timestamp>2021-06-26T19:00:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="5" position="6" reply_to="Jeremy" parent_id="mailing-list-2021-06-m7890722812bfc04b118a9078aefc766f6b2a2b4a" anchor="m797d7a2e6b2e1c4d4b1043adc3027808d6473142">
      <author>Corey Haddad</author>
      <timestamp>2021-06-30T14:06:00.000Z</timestamp>
    </message>
    <message id="msg_8" depth="6" position="7" reply_to="Corey Haddad" parent_id="mailing-list-2021-06-m797d7a2e6b2e1c4d4b1043adc3027808d6473142" anchor="m1cedc50c78830ebde4e6174bbeba576a8aeed237">
      <author>Billy Tetrud</author>
      <timestamp>2021-06-30T19:21:00.000Z</timestamp>
    </message>
    <message id="msg_9" depth="1" position="8" reply_to="[bitcoin-dev] Proposal: Full-RBF in Bitcoin Core 24.0 Antoine Riard" parent_id="mailing-list-2021-12-m748899c17f5943ad57cc557143e6fad45234c3ac" anchor="mc944e313d63b119b8fca2cceefc92f4b6d7abc07">
      <author>Jeremy</author>
      <timestamp>2021-12-18T16:51:00.000Z</timestamp>
    </message>
    <message id="msg_10" depth="2" position="9" reply_to="Jeremy" parent_id="mailing-list-2021-12-mc944e313d63b119b8fca2cceefc92f4b6d7abc07" anchor="m00bb74b63fe4841272f778699edc25dd17741a69">
      <author>Peter Todd</author>
      <timestamp>2021-12-18T17:52:00.000Z</timestamp>
    </message>
    <message id="msg_11" depth="2" position="10" reply_to="Jeremy" parent_id="mailing-list-2021-12-mc944e313d63b119b8fca2cceefc92f4b6d7abc07" anchor="ma1c59a63504b6eac57aeb7717e906c9fb8ccd1e7">
      <author>Antoine Riard</author>
      <timestamp>2021-12-19T18:55:00.000Z</timestamp>
    </message>
    <message id="msg_12" depth="3" position="11" reply_to="Peter Todd" parent_id="mailing-list-2021-12-m00bb74b63fe4841272f778699edc25dd17741a69" anchor="mda45780ce3ff72a4728ca49d9d895f1a58feb2fd">
      <author>damian</author>
      <timestamp>2021-12-20T02:30:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Dec_2021/019701_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019699_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019697_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2021/019696_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019171_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019169_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019116_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019114_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019111_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019080_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019076_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2021/019074_Proposal-Full-RBF-in-Bitcoin-Core-24-0.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-December/019701.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Proposal: Full-RBF in Bitcoin Core 24.0</title>
    <updated>2025-09-26T11:50:06.926942+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-December/019701.html" rel="alternate"/>
    <published>2021-12-20T02:30:57+00:00</published>
    <summary>The Bitcoin community is currently engaged in a discussion about the future of 0-conf transactions and how to address the associated security risks. One proposal that has been put forward is to deprecate opt-in Replace-by-Fee (RBF) and replace it with full-RBF as the default replacement policy in Bitcoin Core version 24.0. The rationale behind this proposal is to mitigate the risk of denial-of-service (DoS) attacks on multi-party funded transactions enabled by RBF opt-out. These attacks can occur when a malicious counterparty broadcasts a low-feerate, opt-out spending of its own collateral input before engaging in cooperative funding, leading to a DoS situation.Another concern is the risk of mempool malicious partitions, where an attacker exploits network topology or divergence in mempools policies to partition network mempools into different subsets. Opt-in RBF serves as a low-cost partitioning tool, which nullifies most potential progress to mitigate such malicious partitioning. To address these issues, it has been suggested to gradually transition away from full-RBF by enforcing non-replaceability n seconds after the first seen transaction. The goal is to reduce the ability to partition mempools by broadcasting irreplaceable conflicts all at once.In terms of enhancing the security of 0-conf transactions, proactive and reactive security models have been proposed. Proactive models include double-spend monitoring and receiver-side fee-topping with package relay, while reactive models involve economic reputation-based compensations. These approaches aim to detect and respond to successful double-spend attempts and ensure the integrity of 0-conf transactions.The discussion also highlights the need to balance the interests of existing 0-conf users and the development of Layer 2 solutions. While some argue for the preservation of 0-conf transactions, others believe that enabling upcoming interests of fancy Layer 2 solutions is crucial. The decision to switch to full-RBF may be deferred to future updates if it is deemed too early.The proposal to deprecate opt-in Replace-by-Fee (RBF) in favor of full-RBF as the default replacement policy in Bitcoin Core version 24.0 has been put forward by Antoine Riard. This proposal is motivated by ongoing and anticipated changes in the Bitcoin ecosystem. One issue with opt-in RBF is that it doesn't suit the deployment of robust second-layer protocols, and opt-out RBF can be used as a Denial-of-Service (DoS) vector against multi-party funded transactions and mempool partitions.There are questions about whether the community wants to support 0-conf payments at this point, given that there are better mechanisms for fast payments such as Lightning. While few service providers are offering zero-conf channels, where you can start to spend instantly, the security model of 0-conf is far weaker than other payment models. However, there are some Bitcoin services well-known to rely on 0-conf, but beyond how much of the Bitcoin traffic is tied to 0-conf is a hard question. Furthermore, it's not clear how software generally informs the user about 0-conf payment detection, though typically, it's something like an &quot;Unconfirmed&quot; annotation on incoming transactions.To enhance 0-conf security, double-spend monitoring/receiver-side fee-topping with package relay and economic reputation-based compensations are some approaches that could be considered. Overall, the proposal highlights the fact that a transaction relay/mempool acceptance policy might be beneficial to some class of already-deployed Bitcoin applications while being detrimental to newer ones. It is essential to preserve the current interests of 0-conf users while enabling upcoming interests of fancy Layer 2 solutions to flourish. If there is agreement on switching to full-RBF, but 0.24 sounds too early, it can be deferred to 0.25 or 0.26.The bitcoin-dev mailing list has been discussing the adoption of RBF as a standard treatment for all transactions, rather than an opt-in/out feature. Some members believe that opting out of RBF is a weak defense and could lead to theft events. However, there are concerns that eliminating opt-in RBF could affect users who rely on 0-conf payments, which are based on far weaker assumptions. The use of 0-conf payments is still unclear, and it is uncertain how often they are used in the Bitcoin ecosystem at this point.One issue with opt-out RBF is that it allows attackers to perform DoS attacks against multi-party funded transactions by propagating an RBF opt-out double-spend of its contributed input before the honest transaction is broadcasted by the protocol orchestra. This can waste the time value of the victim's inputs or force exhaustion of the fee-bumping reserve. Another problem with opt-out RBF is the risk of mempool malicious partitions where an attacker exploits network topology or divergence in mempools policies to partition network mempools into different subsets.To enhance 0-conf security, reactive security models such as economic reputation-based compens</summary>
  </entry>
</feed>