<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Refreshed BIP324</title>
  <updated>2025-10-11T02:28:45.121840+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Oct_2023/021990_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021509_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021508_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021497_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021493_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021491_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021479_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021478_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021472_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021317_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021313_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021312_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021214_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021206_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021204_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021201_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021181_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021162_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2022/021160_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/021117_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/021115_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020985_Refreshed-BIP324.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021990.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Refreshed BIP324</title>
    <updated>2025-10-11T02:28:45.121950+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021990.html" rel="alternate"/>
    <published>2023-10-11T20:52:52+00:00</published>
    <summary>The discussion among Bitcoin developers revolves around the possibility of merging short and long command structures into a single variable-length command structure. Pieter Wuille suggests using a simple variable-length integer approach, with each byte indicating whether another byte follows. This would provide more space for message IDs and simplify the allocation process. The conversation also addresses the need for negotiation and coordination mechanisms for assigning message IDs, as well as the potential impact on bandwidth and implementation complexity.In order to increase space while maintaining conservatism, suggestions are made to treat the first bit as a 2-byte message ID or use an explicit signaling system. The group agrees to exclude rarely-sent commands from assigning short IDs. There is a discussion on introducing novel 1-byte messages before allocating them and reserving a byte for one-shot messages is discouraged. The mapping table between 1 byte IDs and commands is discussed, with three possible solutions presented: introducing a fixed initial table using the BIP process, maintaining a purely local and hardcoded internal mapping, or negotiating the mapping dynamically without a fixed table.The network is expected to have 35 message types with around 256 possible IDs. To increase conservatism, the first bit could be used to signal a 2-byte message ID or the short ID 0xFF could be reserved. The main benefit of short IDs is bandwidth optimization, but not all message types need to use them. It is suggested that only frequently sent messages should reserve a short ID or exclude one-time message types from assigning a short ID.Pieter Wuille proposes using the BIP process to introduce a fixed initial table for the mapping between IDs and commands. Murch suggests using the first bit to signal a 2-byte message ID, with less prevalent message types utilizing a 2-byte ID to mitigate collision risks.Pieter Wuille recently sent an email proposing the idea of using the BIP process to improve the protocol. Vasil Dimov agrees with the proposal and includes a quote from Edsger W. Dijkstra about considering the long-term implications of actions.The refreshed proposal for BIP324, a new bitcoin peer-to-peer protocol, is open for review by the community members. The proposal includes features such as opportunistic encryption, bandwidth reduction, and upgradability. Changes have been made since the last public appearance, including Elligator-swift encoding for pubkeys, x-only ECDH secret derivation, transport versioning, traffic shapability, and a shapable handshake. Links to the BIP pull request, historical and current PRs, and a gist of the previous appearance are provided for review and comments.</summary>
  </entry>
</feed>