<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Wallet vaults with pre-signed transactions but no ephemeral keys</title>
  <updated>2025-10-12T01:35:56.403809+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m1acc27828abf6bbc2bdc426e2dc89ae64fcb624e">
      <author>[bitcoin-dev] Wallet vaults with pre-signed transactions but no ephemeral keys Billy Tetrud</author>
      <timestamp>2023-01-23T17:39:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Wallet vaults with pre-signed transactions but no ephemeral keys Billy Tetrud" parent_id="mailing-list-2023-01-m1acc27828abf6bbc2bdc426e2dc89ae64fcb624e" anchor="mb5258ad3b127253a405abc07e48a9e10355e3f7d">
      <author>darosior</author>
      <timestamp>2023-01-26T14:30:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="darosior" parent_id="mailing-list-2023-01-mb5258ad3b127253a405abc07e48a9e10355e3f7d" anchor="mca87766458f036756450b70fee24c3de2ff9aad9">
      <author>Billy Tetrud</author>
      <timestamp>2023-01-31T15:02:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Jan_2023/021382_Wallet-vaults-with-pre-signed-transactions-but-no-ephemeral-keys.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021368_Wallet-vaults-with-pre-signed-transactions-but-no-ephemeral-keys.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021365_Wallet-vaults-with-pre-signed-transactions-but-no-ephemeral-keys.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021365.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021365.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Wallet vaults with pre-signed transactions but no ephemeral keys</title>
    <updated>2025-10-12T01:35:56.404370+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021365.html" rel="alternate"/>
    <published>2023-01-31T15:02:51+00:00</published>
    <summary>The discourse on James' OP_VAULT proposal introduces an innovative approach to wallet vaults that circumvents the need for ephemeral keys, which must be deleted after use as suggested in Bryan Bishop's earlier proposal. This method employs the creation of an N-of-N multisig address alongside pre-signing transactions with N-1 keys to another address that features various timelocked spend paths. This mechanism ensures that funds can be immediately accessed if all keys are available, similar to a standard N-of-N multisig setup. However, utilizing any of the pre-signed transactions transitions the funds to an address that allows for a clawback within a specified time frame, thus adding a layer of security.
The proposed system intricately outlines the process of setting up such a vault, involving the establishment of a 3 of 3 Vault Address and an Interim Address. The latter enables transactions with varying key combinations subject to specific timelocks. This setup requires meticulous storage of seeds, wallet configuration, and pre-signed transactions separately to facilitate recovery and unvaulting processes. Despite its innovative approach, this methodology introduces challenges such as the necessity for backing up transactions for each vaulting instance, inflexibility regarding transaction fees, and limitations on the amount that can be unvaulted, mandating the entire utxo to be used without providing for change.
The Revault project offers a more sophisticated instantiation of this concept, allowing for additional security measures through cosigning servers acting as anti-replay oracles, thereby enabling policy enforcement on spending transactions. This is particularly relevant as it addresses two significant issues identified: ensuring all watchtowers have received the Cancel signature before executing the Unvault transaction and the lack of policy application on Spend transactions. Although covenants could potentially resolve these concerns, the use of cosigning servers presents a suboptimal solution. For further details on Revault, interested parties can visit [Revault on GitHub](https://github.com/revault/).
This exploration into alternative vaulting methodologies demonstrates a clear evolution from traditional mechanisms requiring the deletion of ephemeral keys, moving towards more secure and flexible solutions. Despite the inherent challenges and potential for improvement, particularly in fee handling and unvaulting flexibility, these proposals mark significant advancements in cryptocurrency wallet security.</summary>
  </entry>
</feed>