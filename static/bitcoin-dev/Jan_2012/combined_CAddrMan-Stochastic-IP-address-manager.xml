<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - CAddrMan: Stochastic IP address manager</title>
  <updated>2025-10-14T02:31:31.183990+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Jan_2012/001140_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001141_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001131_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001122_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001119_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001118_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001116_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001115_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001114_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001113_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001104_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001101_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001100_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001100.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001100.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001100.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001100.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - CAddrMan: Stochastic IP address manager</title>
    <updated>2025-10-14T02:31:31.184092+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001100.html" rel="alternate"/>
    <published>2012-01-31T15:07:16+00:00</published>
    <summary>To address the weakness of potential Sybil attacks in the context of IPv6, a developer has devised a new design. This design involves maintaining two tables: one for addresses that have had actual connections and another for untried/new addresses. Both tables are divided into limited-size buckets.In the first table, addresses with actual connections are assigned to a small number of buckets based on their address range (/16 for IPv4). This ensures that attackers cannot have numerous active nodes within the same /16 range. The second table handles untried/new addresses. These addresses are placed in buckets determined by the address range the information came from, rather than the address itself. This further prevents attackers from easily manipulating the cache.To enhance efficiency, all crucial decisions such as address selection, bucket placement, and entry eviction are randomized with biases. The selection of buckets is determined through a cryptographic hash using a secret key, ensuring behavior is deterministically randomized.An implementation of this design can be found in pull request 787 on GitHub. However, further testing and improvements are required. The developer welcomes test reports, comments, constructive criticism, suggestions, and improvements to refine the design and ensure its effectiveness against Sybil attacks.In another discussion, Gavin Andresen suggests removing the IRC bootstrapping mechanism from Bitcoin. He believes that removing it would reduce code complexity and prevent reports of Bitcoin being tagged as malware by ISPs. Gavin proposes disabling the mechanism by default in version 0.6 and completely removing it before version 0.7 if there are no issues.The email thread also touches on the topic of Sybil attacks. It is mentioned that an attacker with control over 60% of the network's nodes would have a 1.7% chance of success in a Sybil attack if a client has eight connections to the network. However, nodes that accept incoming connections are less vulnerable, as the probability of success decreases exponentially with the number of connections. To mitigate the risk of Sybil attacks, a command-line option for increasing the maximum number of outbound connections is suggested.Additionally, the discussion highlights the importance of having multiple mechanisms for bootstrapping the Bitcoin network to prevent blocking. It is noted that relying solely on DNS and hardcoded seed nodes leaves the network susceptible to being blocked. Suggestions are made to allow users to add nodes/addr.txt as an alternative mechanism. The potential removal of IRC bootstrapping is also considered, with the suggestion to fix the protocol's weaknesses if it remains, or remove it altogether.Overall, the email exchanges discuss various aspects of the Bitcoin network, including the potential risks of Sybil attacks, the need for efficient address management, the consideration of removing the IRC bootstrapping mechanism, and the importance of having multiple mechanisms to prevent blocking. Feedback and suggestions for improvement are encouraged to ensure the continued development and security of the Bitcoin network.</summary>
  </entry>
</feed>