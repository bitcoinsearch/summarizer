<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP16/17 replacement</title>
  <updated>2025-10-15T02:38:29.312792+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Feb_2012/001158_BIP16-17-replacement.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2012/001157_BIP16-17-replacement.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2012/001156_BIP16-17-replacement.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2012/001155_BIP16-17-replacement.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2012/001154_BIP16-17-replacement.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001147_BIP16-17-replacement.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001146_BIP16-17-replacement.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001145_BIP16-17-replacement.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001144_BIP16-17-replacement.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001144.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001144.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001144.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001144.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001144.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP16/17 replacement</title>
    <updated>2025-10-15T02:38:29.312865+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001144.html" rel="alternate"/>
    <published>2012-02-01T14:14:08+00:00</published>
    <summary>On January 31, 2012, Andy Parkins proposed changes to the Bitcoin protocol. He suggested replacing the &quot;scriptPubKey&quot; field with a new &quot;hashOfClaimingScript&quot; field and adding an &quot;unsignedParameters&quot; array. However, he later realized that his proposal was essentially BIP16 without backward compatibility work. He suggested renaming the scriptPubKey field to &quot;hashOfClaimingScript&quot; and no longer running it as a script. This format of scriptPubKey would activate &quot;version2&quot; processing of the transaction. The scriptSig would have two fields: unsignedInitialStackBlock and scriptClaim. Parkins concluded that he now supported BIP16 as it moves towards having a literal claimScriptHash field instead of scriptPubKey.On February 1, 2012, Pieter Wuille and Dr. Andy Parkins discussed changes to the Bitcoin protocol. They noted that non-standard transactions are verified in the blockchain but are rejected when entering the memory pool due to the IsStandard() function. They also discussed the importance of upgrading to avoid seeing a fork of the chain from before the first new-style transaction if a breaking change is made to the protocol.On the same day, Andy Parkins had a discussion with Luke-Jr regarding BIP16 and BIP17. Luke-Jr claimed that both proposals were backward compatible enough for users to continue using old clients with each other, but Andy questioned this. It was explained that IsStandard() is used for accepting transactions into the memory pool, and non-standard transactions are verified in the blockchain. BIP16/17 create transactions that, when interpreted as old scripts, are valid. The only change to the protocol is that previously-valid transactions become invalid. As long as a supermajority of miners enforce the new rules, everyone can keep using their old bitcoin client.Gregory Maxwell responded on January 31, 2012, stating that nodes in Bitcoin do not need to trust the network and can validate information themselves. He argued against making breaking changes to the system as it is a zero-trust system and any change would require a client update. However, he considered BIP16/17 not to be breaking changes. The author of the original proposal disagreed but agreed that making such changes would be difficult due to resource requirements. Increasing the version number of the transaction structure was suggested as a reasonable solution.In an email conversation on January 31, 2012, Andy Parkins expressed nervousness about the ongoing debate surrounding BIP16/BIP17. Another participant explained that the differences between the options were technically obscure and generally agreed upon by technically-minded individuals. They referred to Luke's opinion tracker page, which reflects the views of core developers and informed parties. It was noted that BIP16 was the consensus path forward from earlier discussions, while BIP12 was deemed too computationally powerful. Client upgrade would be necessary to make use of new functionality, as Bitcoin is a zero-trust system and breaking changes like those proposed could not be taken lightly.Luke-Jr wrote on January 31, 2012, that there were no remaining tangible objections to BIP17. Both BIP16 and 17 were backward compatible enough for users to continue using old clients with each other. An upgrade was only required to send or receive on the new 3...-form addresses. The practical implications of both proposals could be rewritten in a format suggested by Andy, which would be backward compatible. Only version2 transactions for version2 addresses would need to be made.In another email conversation, Andy Parkins expressed his nervousness about the ongoing debate surrounding BIP17 and BIP16. He suggested that if there were objections to both proposals, then perhaps another solution would be better. He was willing to withdraw BIP17 if a better solution emerged. Both BIP16 and 17 were backward-compatible enough for users to continue using old clients with each other. Upgrades would only be necessary to send or receive new 3...-format addresses. The practical implications of both proposals could be rewritten in the suggested format, which would eliminate one of the major objections to BIP16.The author of an email expressed nervousness about suggesting an idea for a change in transactions. They proposed increasing the version number in transactions and making changes to the transaction structure. The proposal included replacing the &quot;scriptPubKey&quot; field with &quot;hashOfClaimingScript&quot; and adding an &quot;unsignedParameters&quot; array. The hashOfClaimingScript would be the hash of the script allowed to claim the output. The proposal invited feedback from others.</summary>
  </entry>
</feed>