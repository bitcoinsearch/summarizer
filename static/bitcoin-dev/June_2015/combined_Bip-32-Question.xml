<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Bip 32 Question</title>
  <updated>2023-08-01T13:14:18.514023+00:00</updated>
  <author>
    <name>William Swanson 2015-06-12 19:42:46+00:00</name>
  </author>
  <author>
    <name>James Poole 2015-06-12 18:22:19+00:00</name>
  </author>
  <link href="bitcoin-dev/June_2015/008605_Bip-32-Question.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008599_Bip-32-Question.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Bip 32 Question</title>
    <updated>2023-08-01T13:14:18.514974+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008599.html" rel="alternate"/>
    <summary>In a discussion about BIP32, James Poole is seeking clarification on the meaning of "n" in the context of an algorithm. Specifically, he is referring to the line in the BIP32 definition that states "The returned child key ki is parse256(IL) + kpar (mod n)." To understand the role of "n," James has provided a link to the Bitcoin wiki page for Secp256k1, which explains that "n" represents the curve order. This step is essential to ensure that the user stays on the curve. The function secp256k1_ec_privkey_tweak_add from libsecp256k1 automatically handles this process, but for those using OpenSSL or non-EC math libraries, it may need to be done manually. By asking for help, James hopes to gain a clearer understanding of how "n" functions within the algorithm. For further information, you can refer to the provided links.</summary>
    <published>2015-06-12T19:42:46+00:00</published>
  </entry>
</feed>
