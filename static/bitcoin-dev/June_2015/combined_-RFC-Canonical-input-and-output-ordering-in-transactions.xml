<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [RFC] Canonical input and output ordering in transactions</title>
  <updated>2025-10-18T02:28:57.028343+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/June_2015/009054_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008755_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008728_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008705_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008669_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008666_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008664_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008663_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008657_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008656_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008521_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008518_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008497_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008496_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008495_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008488_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2015/008487_-RFC-Canonical-input-and-output-ordering-in-transactions.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008487.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008487.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008487.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008487.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008487.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008487.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008487.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008487.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - [RFC] Canonical input and output ordering in transactions</title>
    <updated>2025-10-18T02:28:57.028478+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-June/008487.html" rel="alternate"/>
    <published>2015-06-24T22:09:32+00:00</published>
    <summary>However, there are concerns raised about the strict ordering requirements of the proposal. Some argue that these requirements may not be compatible with future soft-forks that could impose additional ordering constraints. It is also suggested that there might be invisible constraints in systems like hardware wallets or future transaction covenants that have their own ordering restrictions. One alternative suggestion is to privately derandomize the ordering, allowing for more flexibility.Additionally, collaborative transaction systems such as coinjoins or micropayment channels are seen as potential drivers for the need to establish a canonical order for inputs and outputs. These systems rely on multiple parties coming together to create a single transaction, and having a consistent ordering of inputs and outputs would simplify the process.There have been discussions regarding the use of mid-state compression, which allows for compact commitments through an OP_RETURN output. Some suggest exempting this type of output from soft-fork enforcement, while others argue that this approach is not ideal. Another proposal suggests using a more general best-effort language that does not distinguish non-canonical ordering for OP_RETURN transactions.Some developers express skepticism towards enforcing strict transaction ordering requirements. They believe that such requirements could potentially conflict with future soft-forks and invisible constraints in various systems. However, they acknowledge that the motivations for the proposal are understated and suggest considering alternative proposals, such as privately derandomizing the ordering or proposing a simple derandomized randomization algorithm.Furthermore, there are discussions about the significance of the zeroth input and the position of the OP_RETURN colored coin marker output in the Open Assets colored coin protocol. Reordering the inputs or outputs would break the colored coin representation. While sorting inputs and outputs as a best practice is recommended, it should not be part of IsStandard() or consensus rules due to cases where the order is significant.In conclusion, the Canonical Input and Output Ordering BIP proposes a standardized order for inputs and outputs in Bitcoin transactions. While there are objections and concerns, alternative suggestions and ongoing discussions aim to find ways to improve transaction ordering while considering privacy, compatibility, and future developments in the Bitcoin ecosystem.</summary>
  </entry>
</feed>