<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - UUID to identify chains (payment protocol and elsewhere)</title>
  <updated>2025-10-21T02:47:12.386748+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/May_2013/002652_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2013/002651_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2013/002650_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2013/002649_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2013/002648_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2013/002647_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2013/002646_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2013/002633_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2013/002634_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2013/002629_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2013/002627_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2013/002623_UUID-to-identify-chains-payment-protocol-and-elsewhere-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - UUID to identify chains (payment protocol and elsewhere)</title>
    <updated>2025-10-21T02:47:12.386856+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-May/002623.html" rel="alternate"/>
    <published>2013-05-22T15:59:53+00:00</published>
    <summary>Gavin Andresen, the Chief Scientist at Bitcoin Foundation, voted against a proposal to use uuid instead of &quot;main&quot; / &quot;test&quot; in the payment protocol. He explained that the payment protocol would become at least 3 BIPs, including Protocol messages, MIME type, and bitcoin: URI extension. He discussed how alt coins would need their own version of these components. He also changed his mind regarding which coin would be encoded in the MIME type and which chain for that coin would be encoded in PaymentDetails.network.An email conversation between Luke-Jr and Jeff Garzik discussed the possibility of multiple currencies using the same blockchain. They agreed that encouraging such a use case would benefit altcoins that fit within the scope of Bitcoin or another existing altchain. However, they did not want to support cases like a fork that leaves the genesis block intact and the subsidy at 50.0 BTC forever.In a conversation between Jeff Garzik and Melvin Carvalho, they discussed the possibility of multiple coin ecosystems sharing the same genesis block. Melvin suggested an out-of-band algo/hash could work if there was a one-to-one relationship between the object and UUID. Jeff disagreed, stating that it would have bad side effects and go against the point of the Bitcoin consensus algorithm. He did not want to encourage such behavior with code.Mark Friedenbach proposed a standard mechanism for identifying chains using UUIDs. He suggested using Version 4 (random) UUIDs with random bits extracted from the double-SHA256 hash of the genesis block of the chain. He argued that namespaces become more important as registries grow and that an out of band algo/hash could work as long as there was a one-to-one relationship between the object and the UUID. He recommended allowing the registry to be a URI for better readability and usability.Bitcoin developer Mark Friedenbach proposed a way to uniquely identify coloured coins and chains using UUIDs. He suggests using Version 4 (random) UUIDs with random bits extracted from the double-SHA256 hash of the genesis block of the chain. The proposal would help adopt the payment protocol to coloured coins. Some altcoins may share a blockchain, or even merely the genesis block, so requiring a 1:1 mapping between genesis block and chain or coin seems non-ideal.In an email conversation between Jeff Garzik and Mark Friedenbach, they discussed identifying chains/coins using UUIDs. Friedenbach suggested using Version 4 (random) UUIDs with random bits extracted from the double-SHA256 hash of the genesis block of the chain. Garzik proposed a double-SHA256 Version 6 as it is more applicable for identifying chains/coins. They also discussed different chain identifiers and the need for readable shortname strings.The Bitcoinj project discussed creating a global naming system using Version 4 (random) UUIDs. The proposal included examples of chain identifiers such as mainnet, testnet3, and namecoin. Jeff Garzik commented on the proposal, suggesting a bitcoin-specific version 6 may be necessary.In an email exchange between Mark Friedenbach and Jeff Garzik, Friedenbach recommended using Version 4 UUIDs with random bits extracted from the double-SHA256 hash of the genesis block of the chain. Garzik proposed a bitcoin-specific Version 6. They discussed the need for readable shortname strings despite attempts to avoid them.During a developer round-table discussion, it was mentioned that the payment protocol supports alt-chains. Mark Friedenbach proposed using UUID to uniquely identify any chain by its genesis block. He suggested using Version 4 (random) UUIDs with random bits extracted from the double-SHA256 hash of the genesis block. His proposal aimed to avoid issues with alt-chains or colored coins.Overall, the discussions revolve around the use of UUIDs to identify chains and coins, the need for readable shortname strings, and the considerations for supporting alt-chains in the payment protocol.</summary>
  </entry>
</feed>