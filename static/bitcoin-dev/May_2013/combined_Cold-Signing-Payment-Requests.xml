<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Cold Signing Payment Requests</title>
  <updated>2025-10-11T21:33:32.145010+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <author>
    <name>Peter Todd 2013-05-06 21:29:59+00:00</name>
  </author>
  <author>
    <name>Jeremy Spilman 2013-04-30 17:17:23+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2013-04-30 13:14:53+00:00</name>
  </author>
  <author>
    <name>Jouke Hofman 2013-04-30 11:32:54+00:00</name>
  </author>
  <author>
    <name>Mike Hearn 2013-04-30 09:17:05+00:00</name>
  </author>
  <author>
    <name>Jeremy Spilman 2013-04-29 18:40:29+00:00</name>
  </author>
  <author>
    <name>Timo Hanke 2013-04-28 18:03:04+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2013-04-26 01:07:07+00:00</name>
  </author>
  <author>
    <name>Jeremy Spilman 2013-04-25 19:12:37+00:00</name>
  </author>
  <author>
    <name>Mike Hearn 2013-04-25 14:31:16+00:00</name>
  </author>
  <author>
    <name>Timo Hanke 2013-04-25 11:55:59+00:00</name>
  </author>
  <author>
    <name>Mike Hearn 2013-04-25 10:52:33+00:00</name>
  </author>
  <author>
    <name>Mike Hearn 2013-04-25 10:45:33+00:00</name>
  </author>
  <author>
    <name>Timo Hanke 2013-04-25 10:28:53+00:00</name>
  </author>
  <author>
    <name>Mike Hearn 2013-04-25 10:05:06+00:00</name>
  </author>
  <author>
    <name>Timo Hanke 2013-04-25 09:58:55+00:00</name>
  </author>
  <author>
    <name>Mike Hearn 2013-04-25 09:08:26+00:00</name>
  </author>
  <author>
    <name>Alan Reiner 2013-04-24 23:07:59+00:00</name>
  </author>
  <author>
    <name>Jeremy Spilman 2013-04-24 23:01:51+00:00</name>
  </author>
  <link href="bitcoin-dev/May_2013/002523_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002482_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002480_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002479_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002478_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002477_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002465_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002459_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002458_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002457_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002455_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002454_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002453_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002452_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002451_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002450_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002449_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002448_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2013/002447_Cold-Signing-Payment-Requests.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-April/002447.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Cold Signing Payment Requests</title>
    <updated>2025-10-11T21:33:32.145215+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-April/002447.html" rel="alternate"/>
    <published>2013-05-06T21:29:59+00:00</published>
    <summary>In a series of email exchanges, discussions surrounding the security and functionality of Bitcoin payment protocols are explored. One concern is the potential risks associated with compromised web servers and the need to protect refund addresses. It is suggested that archiving key documentation on archive.org could help ward off potential patent threats in the future. The challenges faced by merchants regarding missed payments and server vulnerabilities are also discussed.The threat of malware-compromised hosts and the potential redirection of payments is another area of concern. The complexities involved in handling errors during payment posting and the need for secure channels to obtain cryptographic identities are examined. Code review and testing for version updates are highlighted as a bottleneck in the development process. Suggestions are made for protecting pay-to addresses in case of web server compromise, such as using different types of certificates and encoding pubKeys or fingerprints.The limitations of SSL PKI and the challenges of obtaining a more trusted payment request signing key than an SSL key are covered. The difficulties in implementing offline intermediate certificates are also discussed. The proposal to sign payment requests with keys kept offline is considered, with debates on the feasibility and effectiveness of chaining custom certificates onto SSL certificates.Another discussion on bitcointalk.org suggests using x509 certificates to sign Payment Requests to enhance verification and prevent address tampering. However, generating live Payment Requests exposes the signing key to potential theft. A solution is proposed involving a two-tier certificate system, where a 'parent' certificate is kept offline and a 'child' certificate is used for live signing. This approach ensures that the payer can verify the address in the payment request belongs to the intended recipient.To implement this solution, the Payment Protocol utilizes x509 certificates to sign payment requests, allowing wallets to display metadata from the certificate. However, the key used to sign these requests is vulnerable to theft. To mitigate this risk, the proposed two-tier certificate system is explained, where the parent certificate is kept offline and the child certificate is used for live signing on the payment server.While this solution offers improved security, there is a need for established conventions to identify which certificate is the 'most trusted' and which is the 'less trusted'. Alternative ideas are needed for better identification. However, if merchants can keep the key used for signing the address offline, several benefits can be gained, such as enhanced verification and protection against address tampering.</summary>
  </entry>
</feed>