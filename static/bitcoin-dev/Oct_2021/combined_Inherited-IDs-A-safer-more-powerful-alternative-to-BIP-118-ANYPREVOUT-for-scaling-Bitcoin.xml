<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Inherited IDs - A safer, more powerful alternative to BIP-118 (ANYPREVOUT) for scaling	Bitcoin</title>
  <updated>2025-10-24T02:34:48.837109+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Oct_2021/019534_Inherited-IDs-A-safer-more-powerful-alternative-to-BIP-118-ANYPREVOUT-for-scaling-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2021/019478_Inherited-IDs-A-safer-more-powerful-alternative-to-BIP-118-ANYPREVOUT-for-scaling-Bitcoin.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Inherited IDs - A safer, more powerful alternative to BIP-118 (ANYPREVOUT) for scaling	Bitcoin</title>
    <updated>2025-10-24T02:34:48.837194+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-October/019534.html" rel="alternate"/>
    <published>2021-10-10T22:03:38+00:00</published>
    <summary>In a recent email exchange, John responded to Anthony Towns' gratitude for reviewing his paper on Inherited IDs (IIDs) and clarified some misunderstandings. Despite the use of an operator in certain protocols, John emphasized that IIDs remain trust-free since the operator cannot control funds or hinder others from receiving their rightful share. Moreover, the simulation of IIDs with anyprevout is not feasible due to its lack of a covenant mechanism, which is crucial for unconditional ownership transfer.John's paper highlights the fundamental functionality of IIDs, namely the ability to facilitate &quot;update-forest&quot; and &quot;challenge-and-response&quot; operations. These features enable the secure transfer of channel ownership in a trust-free manner using a single transaction. By utilizing this approach, IIDs can eliminate the need for watchtowers and create factories with an unlimited number of parties and channels. Importantly, these achievements are made possible by implementing a safer change to Bitcoin compared to the support provided for floating transactions.During a conversation between John Law and ZmnSCPxj, ZmnSCPxj presents a counterargument regarding the necessity of on-chain transactions for updating a factory's set of channels. ZmnSCPxj asserts that factories can already be created without relying on Taproot technology. This can be achieved by initially creating an n-of-n output for the funding transaction, which can then be split through an off-chain transaction. To modify the set of channels, participants simply create and sign an alternate transaction that spends the original output to a new n-of-n output involving the same participants. Subsequently, they broadcast this transaction to update the channel configuration. ZmnSCPxj describes this process as akin to a &quot;no updates&quot; factory, as it bypasses the closing transaction of the previous factory by initiating a new one.Overall, John's response sheds light on the capabilities of IIDs and their potential to revolutionize the way channels are managed and ownership is transferred. Meanwhile, ZmnSCPxj introduces an alternative perspective on the concept of factories and challenges the necessity of on-chain updates.</summary>
  </entry>
</feed>