<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A bitcoin UDP P2P protocol extension</title>
  <updated>2025-10-23T02:30:43.781012+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/March_2013/002332_A-bitcoin-UDP-P2P-protocol-extension.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2013/002331_A-bitcoin-UDP-P2P-protocol-extension.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2013/002330_A-bitcoin-UDP-P2P-protocol-extension.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2013/002329_A-bitcoin-UDP-P2P-protocol-extension.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2013/002328_A-bitcoin-UDP-P2P-protocol-extension.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2013/002327_A-bitcoin-UDP-P2P-protocol-extension.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2013/002326_A-bitcoin-UDP-P2P-protocol-extension.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2013/002316_A-bitcoin-UDP-P2P-protocol-extension.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2013/002315_A-bitcoin-UDP-P2P-protocol-extension.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2013/002314_A-bitcoin-UDP-P2P-protocol-extension.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2013/002313_A-bitcoin-UDP-P2P-protocol-extension.xml" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - A bitcoin UDP P2P protocol extension</title>
    <updated>2025-10-23T02:30:43.781106+00:00</updated>
    <link href="https://bitcointalk.org/index.php?topic=156769.msg1661981#msg1661981" rel="alternate"/>
    <published>2013-03-24T09:11:24+00:00</published>
    <summary>The conversation revolves around the usage of SCTP (Stream Control Transmission Protocol) and newer user-mode transports that run over UDP. The person expressing their opinions is a fan of SCTP but acknowledges that firewall practices often restrict the implementation of new protocols like SCTP. They suggest exploring alternative protocols like UDT (UDP-based Data Transfer Protocol) and SCTP, which offer advanced features such as reliable data transfer, multi-streaming capabilities, and support for multiple flows sharing a single port. The person also mentions that they are not directly involved in the project but want to prevent reinventing the wheel.In another conversation between Gregory Maxwell and Jeff Garzik, it is mentioned that SCTP is considered an optimal transport for Bitcoin-like messaging due to its versatility in adjusting almost everything into a message. However, Jeff Garzik points out that firewall practices tend to hinder the implementation of new protocols like SCTP.Jay F raises concerns about TCP/UDP port forwarding for bulk data transfer and suggests using tunneling. They provide a link to a document discussing the encapsulation of DTLS over SCTP and suggest that using SCTP could be beneficial for Bitcoin-like messaging. Jay F also suggests that using SCTP could result in a data stream resembling WEBRTC traffic.UDT is highlighted as a solution for breaking the data transfer bottleneck, as it uses UDP to transfer bulk data with its own reliability control and congestion control mechanisms. It allows multiple UDT flows to share a single UDP port, making it firewall-friendly. However, it may not be friendly to NAT. SCTP is mentioned as another protocol that provides reliable, ordered, and error-checked delivery of data between applications, with support for multiple streams of messages in a single connection.Jeff Garzik proposes a rough draft implementation of a UDP P2P protocol extension for Bitcoin. The goals include improving &quot;inv&quot; relay speed, unconditional &quot;tx&quot; broadcasting via UDP as an alternative to &quot;inv&quot; for small transactions, improving block relay speed, and opening up new design avenues more suited to UDP than TCP. The protocol specification includes using UDP bound to the same port as TCP P2P, requiring an active simultaneous TCP P2P connection, permitting multiple P2P messages per UDP packet, and setting a maximum UDP packet size of 100*1024 bytes.The conversation discusses the usage of UDP and the need for a notion of association when subscribing to a broadcast. It is proposed that a parallel TCP connection with a version/verack sequence can be used if a connection is needed. Alternatively, a more robust and heavyweight UDP P2P protocol could be a hole-punching TCP alternative, but further experimentation and community input are required. Bittorrent's use of UDP in its protocols is mentioned as a potential solution to problems with short-lived HTTP connections and bufferbloat in active TCP connections.Randy Willis suggests introducing super-nodes with thousands of connected peers to enhance the capabilities of UDP, but Luke-Jr emphasizes that any UDP bitcoin protocol should not try to emulate a connection.Jeff Garzik's rough draft implementation of the UDP P2P protocol extension for Bitcoin is detailed, highlighting its features, such as multiple P2P messages per UDP packet, advertising NODE_UDP, and handling commands like &quot;inv&quot;, &quot;tx&quot;, and &quot;addr&quot;. The project aims to improve &quot;inv&quot; relay speed, investigate unconditional &quot;tx&quot; broadcasting via UDP, improve block relay speed, and explore new design avenues for P2P patterns more suited to UDP. Jeff Garzik believes that productive discussions start with code rather than endless discussion.</summary>
  </entry>
</feed>