<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Draft BIP: Version bits extension with guaranteed lock-in</title>
  <updated>2025-10-11T02:28:29.542832+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/April_2017/014198_Draft-BIP-Version-bits-extension-with-guaranteed-lock-in.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014086_Draft-BIP-Version-bits-extension-with-guaranteed-lock-in.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014070_Draft-BIP-Version-bits-extension-with-guaranteed-lock-in.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014066_Draft-BIP-Version-bits-extension-with-guaranteed-lock-in.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014063_Draft-BIP-Version-bits-extension-with-guaranteed-lock-in.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014049_Draft-BIP-Version-bits-extension-with-guaranteed-lock-in.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014049.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Draft BIP: Version bits extension with guaranteed lock-in</title>
    <updated>2025-10-11T02:28:29.542948+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014049.html" rel="alternate"/>
    <published>2017-04-18T12:37:29+00:00</published>
    <summary>The proposed uaversionbits aims to simplify the activation process of BIP9 by introducing a boolean flag to ensure lock-in of a BIP9 deployment by the timeout. This allows for user-activated soft forks that can be activated early by the hash power. However, one criticism is the lack of a back-out procedure if a critical flaw is found after activation. To address this, the author suggests using a second version bit as an abandonment vote, which would require sufficient hashpower to abandon the protocol change. This changes the dynamic from BIP9's &quot;opt-in&quot; system to an &quot;opt-out&quot; system, still governed by hashpower but less susceptible to minority miner veto.In an email exchange between two individuals, it was challenged whether a misconfiguration could result in a stopped chain. The respondent clarified that this statement is only true for BIP9 soft forks. They explained that if rule changes are made at different times from the chain with the most work, there could be subjective hardfork-ness. This occurs when miners create blocks that the economic majority accepts despite having less restrictive rules than other chains. The segwit soft fork narrows the definition of a nonstandard transaction, and any block with a transaction violating cleanstack on a non-segwit chain would likely be considered malicious. However, they acknowledged that future forks may restrict more common things. In response to the suggestion of notifying users when a newly activated soft fork rule causes a block to be rejected, the respondent suggested that clients could make these decisions themselves.A discussion on the Bitcoin-dev mailing list revolved around the failure mode of a user's misconfiguration of nTimeout, which could result in a stopped chain. Praxeology Guy pointed out that this claim is incorrect since BIP9 only applies to soft forks and not hard forks. To have a stopped chain with a soft fork, a user must adopt more stringent rules while someone maliciously creates an invalid block that is valid to older nodes, and no miner ever mines a different block at the height of the block in question. Praxeology Guy also suggested that users should be notified when a newly activated more stringent soft fork rule causes a block to be rejected, as it could serve as an excellent trigger to enable replay attack prevention.The importance of understanding and properly configuring nTimeout to avoid potential issues with blockchain progress is highlighted. It is suggested that if less-sophisticated users are given these configuration settings, any chaintip progress failures resulting from them should be displayed prominently. Clear and visible notifications when such failures occur are emphasized, particularly for users who may not be as familiar with the technology.A proposal to orphan valid old blocks has been deemed unnecessary. The &quot;lockinontimeout&quot; variable has been extracted so that the same method can be used in future softfork proposals instead of hardcoding a special case hack for SegWit. Users are suggested to have the ability to set this variable in a configuration file, along with the &quot;nTimeout&quot; in &quot;src/chainparams.cpp&quot;. This would allow users to expedite when a softfork becomes active on their node when combined with &quot;lockinontimeout&quot;. Developers like the Core team could provide more conservative values in the program, while community members such as miners and nodes who feel strongly about SegWit could either compile their own settings or use a popular configuration file if available.The proposed BIP is an extension to BIP9 that introduces an additional activation parameter to guarantee the activation of backward-compatible changes, or soft forks. It aims to simplify the original uaversionbits proposal by introducing a boolean flag to ensure lock-in of a BIP9 deployment by the timeout. This combines optional flag day activation with BIP9, allowing for user-activated soft forks that can be activated early by the hash power. The specification adds a new per-chain deployment parameter to the existing BIP9 specification. A reference implementation of the proposed BIP is available on GitHub, and the document is licensed under BSD 3-clause and Creative Commons CC0 1.0 Universal.</summary>
  </entry>
</feed>