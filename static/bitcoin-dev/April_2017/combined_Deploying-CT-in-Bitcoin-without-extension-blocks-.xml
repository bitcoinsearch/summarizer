<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Deploying CT in Bitcoin without extension blocks?</title>
  <updated>2025-09-26T15:46:25.189025+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m690ae9cd07ad3735000a35087084925aec1f758e">
      <author>[bitcoin-dev] Deploying CT in Bitcoin without extension blocks? Oleg Andreev</author>
      <timestamp>2017-04-13T00:43:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Deploying CT in Bitcoin without extension blocks? Oleg Andreev" parent_id="mailing-list-2017-04-m690ae9cd07ad3735000a35087084925aec1f758e" anchor="mb7abcdd8cb708498129e29e4122dd505dfa7c3aa">
      <author>Adam Back</author>
      <timestamp>2017-04-13T01:43:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/April_2017/014145_Deploying-CT-in-Bitcoin-without-extension-blocks-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2017/014144_Deploying-CT-in-Bitcoin-without-extension-blocks-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014144.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Deploying CT in Bitcoin without extension blocks?</title>
    <updated>2025-09-26T15:46:25.189485+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-April/014144.html" rel="alternate"/>
    <published>2017-04-13T01:43:46+00:00</published>
    <summary>On the Bitcoin-dev mailing list, Oleg Andreev has put forward a proposal for implementing Confidential Transactions on the Bitcoin network. The proposal suggests a new accounting model and representation of numbers, using EC points as Pedersen commitments. The goal is to make the change compatible with the existing system and maintain the 1 MB limit. To achieve this, the proposal introduces two new script versions (version A and version B) and implements six new soft fork rules.One of the key features of the proposal is that it allows for the use of confidential transactions alongside plaintext inputs/outputs using legacy software. This means that users can still participate in confidential transactions without having to upgrade their software. The proposal also utilizes the same UTXO set, further ensuring compatibility.In terms of transaction structure, the proposal suggests sticking confidential values directly into the existing format. It also introduces a range proof, which can be either confidential or non-confidential. Additionally, the transaction witness can include an excess value and cleartext amount for a miner's fee.The proposal has a side effect that benefits miners. As they are the ones minting the confidential coins, they have the ability to sell them at a premium. This creates an incentive for miners to support the feature and work on improving the performance of rangeproof validation.To enhance scalability, the proposal suggests compressing on-chain transactions using mimblewimble cut-through. However, implementing more complex support from miners to merge outputs representing &quot;plaintext value bank&quot; would require further development of non-malleable TxID, which excludes miner-adjustable export/import outputs.Overall, the proposal offers a comprehensive plan for implementing Confidential Transactions on the Bitcoin network. It takes into account compatibility with existing systems, introduces new script versions and soft fork rules, and provides incentives for miners to support and improve the feature. By utilizing the same UTXO set and allowing co-authorship with plaintext inputs/outputs, the proposal ensures that users can participate in confidential transactions without the need for significant software upgrades.</summary>
  </entry>
</feed>