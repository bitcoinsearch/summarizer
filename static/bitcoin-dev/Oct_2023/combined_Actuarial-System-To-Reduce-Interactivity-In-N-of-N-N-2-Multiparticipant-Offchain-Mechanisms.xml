<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Actuarial System To Reduce Interactivity In N-of-N (N &gt; 2) Multiparticipant Offchain Mechanisms</title>
  <updated>2025-09-26T09:52:07.477131+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="mc74551e2cc10403629e4747f62e19504554feb76">
      <author>[bitcoin-dev] Actuarial System To Reduce Interactivity In N-of-N (N &gt; 2) Multiparticipant Offchain Mechanisms ZmnSCPxj</author>
      <timestamp>2023-09-09T01:27:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Actuarial System To Reduce Interactivity In N-of-N (N &gt; 2) Multiparticipant Offchain Mechanisms ZmnSCPxj" parent_id="mailing-list-2023-09-mc74551e2cc10403629e4747f62e19504554feb76" anchor="m9c479e8d762d8298794ac1c18c3c5ab9f0461635">
      <author>Antoine Riard</author>
      <timestamp>2023-09-11T06:02:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="Antoine Riard" parent_id="mailing-list-2023-09-m9c479e8d762d8298794ac1c18c3c5ab9f0461635" anchor="me7f9f8f746870bec1882f61e161398083101d8a0">
      <author>ZmnSCPxj</author>
      <timestamp>2023-09-12T09:41:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="1" position="3" reply_to="[bitcoin-dev] Actuarial System To Reduce Interactivity In N-of-N (N &gt; 2) Multiparticipant Offchain Mechanisms ZmnSCPxj" parent_id="mailing-list-2023-09-mc74551e2cc10403629e4747f62e19504554feb76" anchor="m3462d25259476098989614c03361683fd96677c2">
      <author>David A. Harding</author>
      <timestamp>2023-09-18T00:12:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="2" position="4" reply_to="David A. Harding" parent_id="mailing-list-2023-09-m3462d25259476098989614c03361683fd96677c2" anchor="m6c23215789f605001c2387b6c1a03e1f04122893">
      <author>ZmnSCPxj</author>
      <timestamp>2023-09-18T03:37:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="3" position="5" reply_to="ZmnSCPxj" parent_id="mailing-list-2023-10-me7f9f8f746870bec1882f61e161398083101d8a0" anchor="m98bf6701d7a414c15409b07d1c7fb0e4c84e67d9">
      <author>Antoine Riard</author>
      <timestamp>2023-10-05T02:12:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="3" position="6" reply_to="ZmnSCPxj" parent_id="mailing-list-2023-10-m6c23215789f605001c2387b6c1a03e1f04122893" anchor="mab496f952f7696bf3a58cbe0802373686a496214">
      <author>ZmnSCPxj</author>
      <timestamp>2023-10-15T13:36:00.000Z</timestamp>
    </message>
    <message id="msg_8" depth="4" position="7" reply_to="Antoine Riard" parent_id="mailing-list-2023-10-m98bf6701d7a414c15409b07d1c7fb0e4c84e67d9" anchor="mec60bb84480a6d22d15c645c5b5e74711a98ad5e">
      <author>AdamISZ</author>
      <timestamp>2023-10-31T22:12:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Oct_2023/022106_Actuarial-System-To-Reduce-Interactivity-In-N-of-N-N-2-Multiparticipant-Offchain-Mechanisms.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/021980_Actuarial-System-To-Reduce-Interactivity-In-N-of-N-N-2-Multiparticipant-Offchain-Mechanisms.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021955_Actuarial-System-To-Reduce-Interactivity-In-N-of-N-N-2-Multiparticipant-Offchain-Mechanisms.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021952_Actuarial-System-To-Reduce-Interactivity-In-N-of-N-N-2-Multiparticipant-Offchain-Mechanisms.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021942_Actuarial-System-To-Reduce-Interactivity-In-N-of-N-N-2-Multiparticipant-Offchain-Mechanisms.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022106.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Actuarial System To Reduce Interactivity In N-of-N (N &gt; 2) Multiparticipant Offchain Mechanisms</title>
    <updated>2025-09-26T09:52:07.478173+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022106.html" rel="alternate"/>
    <published>2023-10-31T22:12:20+00:00</published>
    <summary>The email discusses various aspects related to off-chain mechanisms in blockchain technology, specifically focusing on the Bitcoin blockchain. The sender introduces the concept of an actuary role, similar to miners in the blockchain, who are responsible for deciding transaction ordering without having custody of funds. Two proposed softforks, namely `SIGHASH_ANYPREVOUT` and `OP_CHECKSEPARATEDSIG`, are suggested to enable this actuary role.
The advantages of using an N-of-N signatory set in off-chain mechanisms are highlighted, providing consensus and preventing a majority from forcing movement of funds against a participant's will. However, it is noted that all participants need to be online to sign a new state, which can stall the protocol if one participant is offline.
The concept of an off-chain &quot;mempool&quot; is introduced, where the state of the mechanism is considered as pairs of Bitcoin SCRIPT and satoshis, instantiated as actual transaction outputs. Participants can create transactions within the current state and send money to each other, but these transactions remain unconfirmed until they are signed off by all participants.
To address the confirmation issue without custodianship, the email suggests adding the actuary to the contract controlling the funds with a specific `R` value, preventing `R` reuse and enforcing single-spend. This ensures non-custodiality while maintaining an N-of-N requirement for spending.
The desired properties for the actuary role are highlighted, including the ability to select one transaction, inability to spend funds unilaterally or hold them hostage, and assurance that participants can drop the mechanism on-chain and recover their funds if the actuary stops responding. A suggested method to ensure these properties is infecting the SCRIPT of all outputs with `(sign-only-once(M) || CSV) &amp;&amp; C`.
The email also discusses the `SIGHASH_ANYPREVOUT` feature in Bitcoin transactions and its relationship to the actuary role. With `SIGHASH_ANYPREVOUT`, participants can confirm transactions &quot;confirmed&quot; by the actuary even if the actual transaction ID changes.
An example scenario is provided to illustrate the proposed mechanism, involving three participants (A, B, C) and an actuary (M). Each participant has a base contract, and the actuary signs transactions using a fixed `R` nonce. When A wants to send money to B, they create a transaction with two new outputs. A solicits a single-spend signature from the actuary to ensure B's assurance against double-spending. If dropped on-chain, the confirmed transaction can be immediately confirmed on-chain as well.
To update the state of the mechanism, the actuary proposes a new state to each participant. Participants only need to validate expected outputs, reducing bandwidth requirements and providing a scaling advantage. All participants must sign off on each state update, preventing invalid states and dropping the current state on-chain if needed.
Custodial solutions are avoided in this design to minimize control over coins. The actuary role only confirms transactions and cannot move funds without consent, ensuring consensus from all participants. Participants can go offline and online while the actuary coordinates new states.</summary>
  </entry>
</feed>