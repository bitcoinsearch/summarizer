<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - RFC for BIP: Derivation scheme for P2WPKH-nested-in-P2SH based accounts</title>
  <updated>2025-10-22T02:49:00.623645+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/June_2016/012770_RFC-for-BIP-Derivation-scheme-for-P2WPKH-nested-in-P2SH-based-accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012762_RFC-for-BIP-Derivation-scheme-for-P2WPKH-nested-in-P2SH-based-accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012761_RFC-for-BIP-Derivation-scheme-for-P2WPKH-nested-in-P2SH-based-accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012760_RFC-for-BIP-Derivation-scheme-for-P2WPKH-nested-in-P2SH-based-accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012759_RFC-for-BIP-Derivation-scheme-for-P2WPKH-nested-in-P2SH-based-accounts.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2016/012757_RFC-for-BIP-Derivation-scheme-for-P2WPKH-nested-in-P2SH-based-accounts.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - RFC for BIP: Derivation scheme for P2WPKH-nested-in-P2SH based accounts</title>
    <updated>2025-10-22T02:49:00.623780+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-June/012757.html" rel="alternate"/>
    <published>2016-06-18T06:07:48+00:00</published>
    <summary>On June 14, 2016, Daniel Weigl proposed a BIP for a P2SH accounts protocol on Github and sought feedback from the community. Aaron Voisine, co-founder and CEO of breadwallet, raised questions about the upcoming implementation of segwit version 2 with schnorr signatures and the possibility of supporting it without a third derivation path. However, no further information is provided regarding these questions.The discussion on the bitcoin-dev mailing list revolved around privacy concerns related to change outputs in transactions. One suggestion was to always use the same output type for change output if the wallet can recognize it. However, this method may still result in a privacy leak if there is only one P2PKH output and someone knows the algorithm being used. Another suggestion was to randomly select a change output that mimics one of the sending outputs to increase privacy. Additionally, to enhance privacy further, the redeemscript/witnessscript template should also be matched.Another discussion on the bitcoin-dev mailing list expressed concern about the privacy implications of using different output types for change outputs in transactions. It was suggested that &quot;normal&quot; send-to-single-address transactions should always use the same output type for the change output. To further enhance privacy, it was recommended to mimic one of the sending outputs by picking one at random if there are multiple &quot;sending&quot; outputs. The proposal also suggests matching the template of the redeemscript/witnessscript to maintain privacy even after the sends are spent.A proposal has been made to include both &quot;native&quot; P2WPKH addresses and P2WPKH over P2SH addresses in compatible wallets. The proposal suggests that every fully BIP-compatible wallet must support both address types. Different chain IDs could be used to differentiate between the address types, with 0 and 1 for P2WPKH over P2SH and 2 and 3 for native P2WPKH. Using P2WPKH over P2SH for change addresses instead of native P2WPKH is believed to potentially lead to a privacy leak. Therefore, it is recommended to always use the same output type for the change output in &quot;normal&quot; send-to-single-address transactions if the wallet can recognize it. However, there is no final decision yet on how the address encoding for P2WPKH public keys should look like as Bip141 is deferred.Daniel Weigl has proposed a BIP for P2SH accounts on the Bitcoin-dev mailing list and has requested comments and feedback from the community. He also asked if anyone is implementing something different for BIP44 compliant wallets. The question of whether to keep the discussion on the mailing list or move it to GitHub was raised. Jochen suggested considering not only P2WPKH over P2SH addresses but also &quot;native&quot; P2WPKH addresses and recommended that every fully BIP-compatible wallet should support both types of segwit addresses. Aaron Voisine's suggestion to use different chain IDs to distinguish between address types was also supported by Jochen.In summary, Daniel Weigl has prepared a proposal for a BIP related to a BIP44-compliant wallet and has sought feedback from the community. The discussion on the bitcoin-dev mailing list focused on privacy concerns related to change outputs and the inclusion of both P2WPKH over P2SH and &quot;native&quot; P2WPKH addresses in compatible wallets. Suggestions were made to enhance privacy by selecting the same output type for change outputs in &quot;normal&quot; send-to-single-address transactions and mimicking one of the sending outputs. The use of different chain IDs to differentiate between address types was also proposed.</summary>
  </entry>
</feed>