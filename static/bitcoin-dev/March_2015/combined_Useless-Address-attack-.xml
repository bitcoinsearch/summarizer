<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Useless Address attack?</title>
  <updated>2025-10-21T02:49:37.006083+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/March_2015/007635_Useless-Address-attack-.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007634_Useless-Address-attack-.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007633_Useless-Address-attack-.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2015/007632_Useless-Address-attack-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Useless Address attack?</title>
    <updated>2025-10-21T02:49:37.006209+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-March/007632.html" rel="alternate"/>
    <published>2015-03-05T03:18:54+00:00</published>
    <summary>A member of the Bitcoin development mailing list has expressed concerns about the potential for slowing down communication on the P2P network by utilizing dummy nodes. In response, Kevin Greene explains that Bitcoind effectively safeguards against this by storing addresses in randomized buckets, which are selected based on the IP of the peer and the address in the message. This random bucketing prevents attackers from overwhelming the database with their own nodes. Additionally, misbehaving nodes can be blacklisted for a certain period of time to prevent persistent connection attempts.Bitcoind's address manager protects against potential attackers by organizing addresses into buckets. The selection of these buckets is determined by the IP of the peer advertising the address message and the address itself. By randomly assigning addresses to buckets, the risk of an attacker filling the entire table with their own nodes is mitigated. Addresses that have not yet been tried are placed in &quot;new&quot; buckets, while addresses of known accessible nodes are stored in &quot;tried&quot; buckets. The selection of buckets is based on cryptographic hashing using a 256-bit key that is randomly generated. To ensure high performance, various indexes are maintained.Someone on the Bitcoin-development mailing list suggests the idea of congesting the address pool with dummy nodes to slow down communication on the P2P network. The proposal involves sending addr messages with 1000 addresses pointing to these useless nodes, potentially causing clients to connect to them instead of legitimate ones. The individual speculates that if the address pool were filled with enough addresses to these dummy nodes and they were kept fresh, it could have a notable impact, particularly if all eight outbound connections were occupied by these nodes. However, Bitcoind's address manager thwarts such an attack through the random organization of addresses into buckets and the use of cryptographic hashing for bucket selection.It is important to note that the writer of this message is merely considering this plan while building their own node and does not actually intend to carry it out. They seek information regarding the measures in place to prevent such tactics from being employed.</summary>
  </entry>
</feed>