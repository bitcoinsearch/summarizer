<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Reiterating centralized coinjoin (Wasabi &amp; Samourai) deanonymization attacks</title>
  <updated>2025-01-07T02:29:46.059484+00:00</updated>
  <author>
    <name>Yuval Kogman 2025-01-06 14:30:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Reiterating centralized coinjoin (Wasabi &amp; Samourai) deanonymization attacks</title>
    <updated>2025-01-07T02:29:46.059515+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAAQdECCq5n7zkRJboVwjLMWkGUP7-G2U7tK4Ekf5M9NqLypLQA@mail.gmail.com/T/#m67d35c282feb10ffc6980888dece47e68b7b95d4" rel="alternate"/>
    <summary>In the detailed analysis provided, the correct behavior for handling blind signatures in a mixing service involves not allowing clients to accumulate blind signatures for use in later rounds. This prevents the potential disruption of the mixing process. A specific bug related to this issue was identified and corrected in Wasabi 1, as evidenced by the archived code found at [Samourai Wallet's GitHub](https://github.com/Archive-Samourai-Wallet/whirlpool-server/blob/develop/src/main/java/com/samourai/whirlpool/server/beans/Mix.javaL67). The discussion further explores the possibility of observation attacks aimed at deanonymizing users through the manipulation of input registration data. However, it is noted that such attacks would require modifications to the client software, which seems implausible with the archived versions available.

Moreover, the text raises concerns about the potential for servers to covertly deanonymize users by controlling the placement of UTXOs (Unspent Transaction Outputs) in mixing rounds. This could be particularly effective if the server can group targeted UTXOs with those linked to known xpubs or adversary-controlled peers, thus bypassing the need for overt key tagging attacks. In this context, maintaining plausible deniability becomes easier for a malicious server, highlighting a subtle yet significant vulnerability.

The conversation also references Wasabi's logging practices, specifically regarding the publication and logging of round IDs, which could inadvertently compromise user privacy if logs are shared or intercepted. Despite some efforts to address these issues, including proposed log scrubbing and the publication of round IDs ahead of time, concerns remain about the effectiveness of these measures in protecting against history intersection attacks. Two GitHub issues ([#6770](https://github.com/WalletWasabi/WalletWasabi/issues/6770) and [#6670](https://github.com/WalletWasabi/WalletWasabi/issues/6670)) are mentioned in this regard, with ongoing discussions about how best to mitigate such attacks. Proposed solutions include redundant queries from isolated Tor circuits and deterministic shuffling of transactions to prevent equivocation, both aimed at enhancing user privacy and security within the mixing service.

This summary encapsulates the main points raised in the original text, focusing on the complexities and challenges associated with maintaining anonymity in cryptocurrency mixing services, and the technical and procedural measures being considered to address these challenges.</summary>
    <published>2025-01-06T14:30:00+00:00</published>
  </entry>
</feed>
