<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Who uses or wants to use PSBTv2 (BIP370)</title>
  <updated>2025-10-12T00:57:19.151651+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="md51eb2c3e35977945d83d47037a1b5754b26f491">
      <author>Who uses or wants to use PSBTv2 (BIP370) Sjors Provoost</author>
      <timestamp>2025-01-17T09:16:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="Who uses or wants to use PSBTv2 (BIP370) Sjors Provoost" parent_id="mailing-list-2025-01-md51eb2c3e35977945d83d47037a1b5754b26f491" anchor="m002f2f2369d26170167aa043210ddcd2870fa30f">
      <author>Salvatore Ingala</author>
      <timestamp>2025-01-17T09:45:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="1" position="2" reply_to="Who uses or wants to use PSBTv2 (BIP370) Sjors Provoost" parent_id="mailing-list-2025-01-md51eb2c3e35977945d83d47037a1b5754b26f491" anchor="m71c26fd74b6c842f4852e5fcd4e5a679a8286aec">
      <author>Kalle Rosenbaum</author>
      <timestamp>2025-01-17T10:01:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="2" position="3" reply_to="Salvatore Ingala" parent_id="mailing-list-2025-01-m002f2f2369d26170167aa043210ddcd2870fa30f" anchor="m4d45caee21eb27ba262489893e6a7cf43561bab4">
      <author>Kalle Rosenbaum</author>
      <timestamp>2025-01-17T10:38:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="3" position="4" reply_to="Kalle Rosenbaum" parent_id="mailing-list-2025-01-m4d45caee21eb27ba262489893e6a7cf43561bab4" anchor="m29fd7d6245cef0dccbb1749538a736ebb1836713">
      <author>Salvatore Ingala</author>
      <timestamp>2025-01-17T13:02:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="1" position="5" reply_to="Who uses or wants to use PSBTv2 (BIP370) Sjors Provoost" parent_id="mailing-list-2025-01-md51eb2c3e35977945d83d47037a1b5754b26f491" anchor="m0cdcc39877adeec959abb34021cbddab917b1a84">
      <author>Andrew Toth</author>
      <timestamp>2025-01-17T14:53:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Jan_2025/m0cdcc39877adeec959abb34021cbddab917b1a84_Who-uses-or-wants-to-use-PSBTv2-BIP370-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2025/m29fd7d6245cef0dccbb1749538a736ebb1836713_Who-uses-or-wants-to-use-PSBTv2-BIP370-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2025/m4d45caee21eb27ba262489893e6a7cf43561bab4_Who-uses-or-wants-to-use-PSBTv2-BIP370-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2025/m71c26fd74b6c842f4852e5fcd4e5a679a8286aec_Who-uses-or-wants-to-use-PSBTv2-BIP370-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2025/m002f2f2369d26170167aa043210ddcd2870fa30f_Who-uses-or-wants-to-use-PSBTv2-BIP370-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2025/md51eb2c3e35977945d83d47037a1b5754b26f491_Who-uses-or-wants-to-use-PSBTv2-BIP370-.xml" rel="alternate"/>
  <link href="https://gnusha.org/pi/bitcoindev/CAPswA9w0YGecAQ4ON43mL_Cj2WL3rcV5seUyyXJ=3aVx6zpTzQ@mail.gmail.com/T/#md51eb2c3e35977945d83d47037a1b5754b26f491" rel="alternate"/>
  <link href="https://gnusha.org/pi/bitcoindev/CAPswA9w0YGecAQ4ON43mL_Cj2WL3rcV5seUyyXJ=3aVx6zpTzQ@mail.gmail.com/T/#md51eb2c3e35977945d83d47037a1b5754b26f491" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Who uses or wants to use PSBTv2 (BIP370)</title>
    <updated>2025-10-12T00:57:19.152378+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAPswA9w0YGecAQ4ON43mL_Cj2WL3rcV5seUyyXJ=3aVx6zpTzQ@mail.gmail.com/T/#md51eb2c3e35977945d83d47037a1b5754b26f491" rel="alternate"/>
    <published>2025-01-17T14:53:00+00:00</published>
    <summary>The recent exchanges on the Bitcoin Development Mailing List bring to light several key discussions and updates regarding the Partially Signed Bitcoin Transaction (PSBT) protocol, specifically its version 2 (PSBTv2). Notably, PSBTv2 is essential for implementing silent payments through BIP375 by employing the PSBT_OUT_SCRIPT field. Silent payments are a method where the output script of a transaction isn't known at the time of its creation, making PSBTv2 crucial since its predecessor, version 0, doesn't support creating an unsigned transaction without an output script.
Salvatore Ingala points out that the PSBT implementations within various Ledger client libraries are minimalistic, designed primarily for necessary communication protocols rather than as comprehensive solutions. This limitation indicates there's no plan to expand their functionality to be more general-purpose. Nonetheless, there might have been some confusion or outdated information regarding Ledger's implementation of PSBTv2, as Salvatore later suggests looking at a potentially more relevant version of the Ledger's PSBTv2 [here](https://github.com/LedgerHQ/app-bitcoin-new/blob/53dfd1727ab55182f9e365747b26b862e48b7b8b/bitcoin_client_js/src/lib/psbtv2.ts).
Another significant point raised in the discussions is the mention of BIP370, a proposal aimed at being a backward-compatible change to the original PSBT standard defined by BIP174. The primary advantage of BIP370 is its ability to add new inputs and outputs to a transaction, which is currently under review with Bitcoin Core pull request 21283. However, this pull request has received limited attention so far. Testing against other implementations could facilitate this review process. It's noted that Core Lightning has adopted PSBTv2, albeit with some inefficiencies as it needs to revert to v0 when interacting with Bitcoin Core, highlighting a gap between current utilization and potential optimization.
In addition, Andrew Tothâ€™s contribution mentions Ledger's longstanding implementation of PSBTv2, used for facilitating communication between the Ledger Live software and hardware wallets, indicating an industry move towards broader adoption. This information is corroborated with a link to the specific implementation details found [here](https://github.com/LedgerHQ/ledger-live/blob/03b94dae50b1177801c57d9cee14cb5b4752b075/libs/ledgerjs/packages/hw-app-btc/src/newops/psbtv2.ts).
The ongoing discussion emphasizes the critical nature of PSBTv2 in advancing Bitcoin transaction capabilities, particularly in enhancing privacy through silent payments and improving transaction flexibility with BIP370. Despite these advancements, the dialogue also reveals areas requiring further development, such as the need for more comprehensive PSBT implementations and greater engagement with proposed enhancements like BIP370.</summary>
  </entry>
</feed>