<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Reiterating centralized coinjoin (Wasabi &amp; Samourai) deanonymization attacks</title>
  <updated>2025-01-07T02:29:52.266231+00:00</updated>
  <author>
    <name>Sjors Provoost 2025-01-06 13:07:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Reiterating centralized coinjoin (Wasabi &amp; Samourai) deanonymization attacks</title>
    <updated>2025-01-07T02:29:52.266268+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAAQdECCq5n7zkRJboVwjLMWkGUP7-G2U7tK4Ekf5M9NqLypLQA@mail.gmail.com/T/#m826c4dc6f86ae009c6724fd60ea05b48a450a730" rel="alternate"/>
    <summary>Yuval Kogman raises questions regarding the possibility of detecting attacks on a system by analyzing historical data or server-side code, specifically inquiring if a key remained consistent over time, changed with each round, or was unique for every registration request. These inquiries aim to understand if it would have been feasible to identify a targeted attack through proactive monitoring or retrospective analysis, assuming that application logs were adequately maintained to facilitate such a review. The discussion touches upon the potential for attackers to manipulate the system by influencing the server to issue different RSA keys or round IDs, thereby enabling them to track specific Unspent Transaction Outputs (UTXOs). This scenario underscores the importance of log management and the ability to trace interactions within the system to safeguard against or identify malicious activities.</summary>
    <published>2025-01-06T13:07:00+00:00</published>
  </entry>
</feed>
