<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - I want to rebuild the GUI in JavaScript</title>
  <updated>2025-10-11T02:26:17.629137+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Jan_2020/017589_I-want-to-rebuild-the-GUI-in-JavaScript.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2019/017492_I-want-to-rebuild-the-GUI-in-JavaScript.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2019/017491_I-want-to-rebuild-the-GUI-in-JavaScript.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2019/017490_I-want-to-rebuild-the-GUI-in-JavaScript.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2019/017488_I-want-to-rebuild-the-GUI-in-JavaScript.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-November/017488.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - I want to rebuild the GUI in JavaScript</title>
    <updated>2025-10-11T02:26:17.629246+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-November/017488.html" rel="alternate"/>
    <published>2020-01-16T18:30:24+00:00</published>
    <summary>In an email thread, the original sender thanks Jonas for his feedback and removes the topic from discussion on the Bitcoin Core Github issue. However, he mentions that he has been working on a proof-of-concept over the past month and has published it on GitHub for those interested in following the progress. He encourages contributions to the project and provides information on how to get involved. Jonas responds to the original sender's email, stating that the topic of rebuilding Bitcoin Core GUI using the JavaScript Electron framework is not appropriate for discussion on the Bitcoin Core Github issue. He suggests that if the original sender wants to pursue this idea, they should work on a third-party project where their Electron UI can connect to Bitcoin Core over RPC. Jonas also explains that adding an Electron/JavaScript UI to the Bitcoin Core repository is unlikely to happen due to concerns raised by Bitcoin Core contributors and users who are opposed to using a browser and JavaScript for a relatively simple user interface. He provides links to relevant Github issues for further reference.The email thread also mentions a front-end for Bitcoin available at bitcoin.electronrelocation.com, but development has been halted due to time constraints. The live demo of this front-end accepts payments and sends them via QR codes. The source code is available on git.esotericnonsense.com.A discussion on rebuilding Bitcoin Core GUI using the JavaScript Electron framework took place on the bitcoin-dev mailing list. One suggestion was to have Electron drive the UI by running bitcoind and communicating with it through RPC. However, there are concerns about achieving feature-parity with the existing Qt implementation and the need for a secure dependency management solution. The possibility of the Electron UI existing as an independent client rather than replacing the Qt UI is also discussed.In a forum post, a user expresses their desire to rebuild Bitcoin Core GUI using the Electron framework and seeks insights into the pros and cons of transitioning from Qt to Electron. However, many Bitcoin Core contributors and users are opposed to using a browser and JavaScript for a UI with simple user-stories. The user is advised to work on a third-party project where their Electron UI can connect to Bitcoin Core over RPC or contribute to incorporating long polling into Bitcoin Core. It is unlikely that an Electron/JavaScript UI will be added to the Bitcoin Core repository. Two relevant links are provided for further reading.The author of the email expresses their interest in rebuilding Bitcoin Core GUI using the Electron framework and asks if there have been any previous attempts or ongoing efforts in this direction. They propose having Electron drive the UI by running bitcoind and communicating with it through RPC but question whether this approach can achieve feature-parity with the Qt implementation, which has direct access to Bitcoin Core code. Another member of the mailing list highlights the need for secure dependency management due to the security-focused nature of Bitcoin Core software and the potential vulnerabilities in the way NPM handles Electron app dependencies. The discussion explores the possibility of the Electron UI existing as an independent client and debates whether it could replace the Qt UI. The topic of rebuilding Bitcoin Core GUI using the Electron framework is being explored with considerations for security and feature parity with the current Qt implementation.</summary>
  </entry>
</feed>