<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Against Allowing Quantum Recovery of Bitcoin</title>
  <updated>2025-09-22T13:49:39.840774+00:00</updated>
  <author>
    <name>ArmchairCryptologist 2025-05-26 15:40:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Against Allowing Quantum Recovery of Bitcoin</title>
    <updated>2025-09-22T13:49:39.840808+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CADL_X_cF=UKVa7CitXReMq8nA_4RadCF==kU4YG+0GYN97P6hQ@mail.gmail.com/T/#m4b9cf20d63b191ea7ed9ae4d31e31d5fdc4b5930" rel="alternate"/>
    <summary>In a recent discussion on the Bitcoin Development Mailing List, the topic of the legal ramifications associated with developers making code changes that could potentially confiscate funds was raised. The concern centers around whether developers could be held liable for any resulting losses if they intentionally implement such changes, despite providing a reasonable warning period to users. This issue is underscored by the historical legal challenges faced by Bitcoin, raising questions about the willingness of developers to take on a risk that could expose them to significant personal financial liability.

The conversation also touched on the technical strategies that might mitigate these legal concerns while addressing the threat posed by quantum computing to Bitcoin's security. One proposed approach involves limiting the applicability of such drastic code changes to UTXOs (Unspent Transaction Output) that have been inactive for an extended period, specifically those not moved for 15-20 years and are not subject to conditions like timelocks. This method aims to target funds presumed to be lost, thereby reducing the potential impact on the wider user base.

Moreover, there's acknowledgment of the inherent self-responsibility within a permissionless system like Bitcoin. It suggests that while developers can make non-Post-Quantum Cryptography (PQC) addresses obsolete in the wake of practical quantum attacks, it ultimately falls upon the users to transition to PQC addresses once they become available. This stance emphasizes user autonomy, even as it underscores the importance of adhering to recommended security practices to mitigate the risks associated with evolving technological threats.

For further details, readers can refer to the secure email platform used for this communication, [Proton Mail](https://proton.me/mail/home).</summary>
    <published>2025-05-26T15:40:00+00:00</published>
  </entry>
</feed>
