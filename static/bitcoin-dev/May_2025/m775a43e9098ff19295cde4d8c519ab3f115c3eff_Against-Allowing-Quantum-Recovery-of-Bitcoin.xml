<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Against Allowing Quantum Recovery of Bitcoin</title>
  <updated>2025-09-22T12:24:32.366918+00:00</updated>
  <author>
    <name>waxwing/ AdamISZ 2025-05-28 21:15:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Against Allowing Quantum Recovery of Bitcoin</title>
    <updated>2025-09-22T12:24:32.366948+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CADL_X_cF=UKVa7CitXReMq8nA_4RadCF==kU4YG+0GYN97P6hQ@mail.gmail.com/T/#m775a43e9098ff19295cde4d8c519ab3f115c3eff" rel="alternate"/>
    <summary>In a recent discussion on the Bitcoin Development Mailing List, a complex scenario was examined regarding the potential vulnerabilities of taproot in the event of an Elliptic Curve Discrete Logarithm Problem (ECDLP) breaker's presence. The dialogue began with a hypothetical situation where taproot is modified to exclusively necessitate script-path spending while eliminating the option for key-path spending. This modification raises intriguing security questions, especially in scenarios where an attacker possesses an ECDLP breaker.

The conversation further explores how an honest keyholder, under such a system, would generate a public key Q by adding a Nothing-Up-My-Sleeve (NUMS) internal key (P_N) to a hash-based tweak. This process inherently relies on the difficulty of solving the ECDLP for security. However, if an attacker could solve the ECDLP, they could potentially deduce the private key corresponding to Q. Despite this, the requirement for a hash commitment within taproot's rules introduces a significant hurdle for attackers, even those equipped with an ECDLP breaker. The commitment necessitates selecting a specific P_2 before hashing, complicating direct attacks on Q despite knowing its full private key.

The discussion acknowledges that disabling NUMS might be a viable security measure, underscoring the complexity of ensuring robustness against quantum adversaries. Moreover, it touches on the foundational assumption in cryptocurrency security that quantum computing will not soon breach hash function security, particularly SHA-2, which underpins many aspects of existing cryptographic protocols. The conversation concludes by contemplating the implications of quantum advancements that could efficiently invert such hash functions, hinting at the need for preemptive consideration of extreme threat models in cryptographic design.

This discourse underscores the nuanced challenges in securing cryptographic systems against quantum threats and the importance of forward-thinking strategies in the development of blockchain technologies.</summary>
    <published>2025-05-28T21:15:00+00:00</published>
  </entry>
</feed>
