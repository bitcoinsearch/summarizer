<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Removing checkpoints in Bitcoin Core v30</title>
  <updated>2025-10-11T02:31:47.267509+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/May_2025/m1631631add6a619f2c7f07ef01a284c502ad2162_Removing-checkpoints-in-Bitcoin-Core-v30.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2025/m48d590b1d6a833c493954c82bc8e4a2401ef66ee_Removing-checkpoints-in-Bitcoin-Core-v30.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2025/me6386f7ba6b6b2d7abe0c8566a34e682db97f592_Removing-checkpoints-in-Bitcoin-Core-v30.xml" rel="alternate"/>
  <link href="https://gnusha.org/pi/bitcoindev/F8E9B25A-5198-4A5E-B3D7-9DAD6B709825@sprovoost.nl/T/#u#me6386f7ba6b6b2d7abe0c8566a34e682db97f592" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Removing checkpoints in Bitcoin Core v30</title>
    <updated>2025-10-11T02:31:47.267635+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/F8E9B25A-5198-4A5E-B3D7-9DAD6B709825@sprovoost.nl/T/#u#me6386f7ba6b6b2d7abe0c8566a34e682db97f592" rel="alternate"/>
    <published>2025-05-02T21:16:00+00:00</published>
    <summary>In a comprehensive discussion on the Bitcoin Development Mailing List, the subject of checkpoints in the Bitcoin protocol was thoroughly examined. Checkpoints, initially implemented to safeguard against Denial of Service (DoS) attacks, have become a focal point due to their perceived potential to enhance performance. This has raised concerns over the possibility that their misuse for performance improvements could prompt the development of alternative Bitcoin Core or Libbitcoin versions exploiting &quot;honest&quot; checkpoints alongside a UTXO snapshot for accelerated performance. An experiment conducted on an M4 MacBook to evaluate the impact of checkpoints on Initial Block Download (IBD) times revealed that the difference in time with and without checkpoints up to block 295,000 was minimal, suggesting that the early blocks constituting only 3% of all transactions do not significantly benefit from checkpointing in terms of signature verification times. Moreover, it was argued that loading a UTXO snapshot at checkpoint height might offer a modest speedup, but this would only marginally improve efficiency.
The conversation also delved into the `-assumevalid` feature as an alternative to checkpoints, suggesting its replacement with a combination of AssumeUTXO and SwiftSync to allow more efficient background validation while maintaining full validation capabilities. This proposal aims to boost blockchain performance without overly depending on checkpoints or compromising security against DoS attacks. The upcoming v30 release of Bitcoin Core will see the removal of checkpoints and all related support code, based on the assessment that these measures have become redundant following the introduction of headers pre-sync functionality in v24, which effectively counteracts low proof-of-work header spam attacks. The consensus among developers suggests that new checkpoints are unnecessary for adequate security against such threats. The dialogue also recognized the potential for network splits due to extremely large reorganizations, though such events are considered highly improbable. Despite the humorous attribution of these scenarios to aliens or the NSA, they underline a significant vulnerability in network resilience. The conversation acknowledges the existential risks posed by such catastrophic events to Bitcoin's value and utility, proposing a Bitcoin Improvement Proposal (BIP) to establish protocols for restoring network consistency and recommending the permanent activation of certain soft fork rules from the genesis block in the absence of the last checkpoint header. This proactive approach reflects a commitment to preserving Bitcoin's integrity against theoretical threats to its continuity and stability. Further details and technical rationale behind these decisions can be found through references to [Bitcoin Core Pull Request](https://github.com/bitcoin/bitcoin/pull/0) and [Headers Pre-Sync Functionality](https://github.com/bitcoin/bitcoin/pull/1).</summary>
  </entry>
</feed>