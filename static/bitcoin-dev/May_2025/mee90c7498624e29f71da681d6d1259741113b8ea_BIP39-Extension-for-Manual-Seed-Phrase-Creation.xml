<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP39 Extension for Manual Seed Phrase Creation</title>
  <updated>2025-09-23T14:08:45.848336+00:00</updated>
  <author>
    <name>pithosian 2025-05-24 20:56:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP39 Extension for Manual Seed Phrase Creation</title>
    <updated>2025-09-23T14:08:45.848369+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CADXQin4VbtvyWDGYLJB0HyJ2+Eai-01CKt6J6UzXM9qtdGJbuw@mail.gmail.com/T/#mee90c7498624e29f71da681d6d1259741113b8ea" rel="alternate"/>
    <summary>The discussion revolves around the generation and utilization of BIP39 mnemonics, highlighting the feasibility of creating entropy without the use of a computer. A recommended method for generating entropy is through coin flips adjusted by Von Neumann skew correction. However, the process to convert this entropy into usable cryptographic keys involves complex steps such as SHA256 hashing for checksum calculation, SHA512 HMAC for further processing, and elliptic curve (EC) point multiplication among others. These procedures are detailed as impractical to perform manually due to their complexity, underlining the necessity of computational assistance.

Furthermore, there's mention of a unique bootable UEFI application developed by the author, which facilitates the generation of mnemonics via skew-corrected coin flips. This application is designed for air-gapped (offline) operation, ensuring enhanced security by minimizing exposure to potential online threats. The creator expresses intentions to re-implement and integrate this tool into a larger project but offers to make the existing version available if there's interest from the community.

Regarding mnemonic generation, the communication underscores that omitting the SHA256 hash step is inadvisable because the mnemonic generated would be unusable without undergoing this hashing process. It also touches on the concept of encoding derivation paths within mnemonics, comparing Electrum's Seed Version System with descriptor-based solutions for handling wallet metadata. Descriptors are advocated over the Seed Version System due to their efficiency in managing non-entropy metadata for wallets. 

Lastly, the message emphasizes the importance of educating users about standard derivation paths and the significance of making an effort to understand descriptors. This approach is favored over simplifying or obscuring critical information, advocating for transparency and informed usage among users.</summary>
    <published>2025-05-24T20:56:00+00:00</published>
  </entry>
</feed>
