<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP39 Extension for Manual Seed Phrase Creation</title>
  <updated>2025-09-21T22:40:30.097048+00:00</updated>
  <author>
    <name>pithosian 2025-05-24 20:56:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP39 Extension for Manual Seed Phrase Creation</title>
    <updated>2025-09-21T22:40:30.097083+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CADXQin4VbtvyWDGYLJB0HyJ2+Eai-01CKt6J6UzXM9qtdGJbuw@mail.gmail.com/T/#mee90c7498624e29f71da681d6d1259741113b8ea" rel="alternate"/>
    <summary>The email delves into the nuances of generating mnemonics, particularly for the purpose of Bitcoin wallet recovery phrases, emphasizing the feasibility of using coin flips as a source of entropy. The author highlights the necessity of employing Von Neumann's skew correction method to adjust for bias in the results of coin flips. Following this entropy generation, a series of cryptographic steps are outlined, including the necessity of performing a SHA256 hash to create a checksum word, which is integral to the mnemonic creation process. Furthermore, the discussion also touches upon the use of SHA512 HMAC, EC point multiplication, and several other complex processes that are deemed unrealistic for manual execution by individuals.

The author mentions possessing a bootable UEFI application designed for airgapped environments, which can generate mnemonics with skew-corrected coin flips among other features. There's an indication of plans to reimplement this tool as part of a larger project, yet an openness to publishing the existing version if there's enough interest. This tool underscores the practical aspects of secure mnemonic generation without direct reliance on online systems.

Additionally, the email addresses the concept of encoding derivation paths into mnemonics. It references Electrum's Seed Version System as an approach to incorporate non-entropy metadata into wallets, while also pointing out that descriptors offer a more effective solution for managing such data. The author argues against overly simplifying or obscuring critical information from users, advocating instead for educating them about standard derivation paths and the importance of understanding their wallet's operational mechanics.

This comprehensive overview not only encapsulates the technical intricacies involved in secure mnemonic generation but also emphasizes the balance between user-friendliness and the necessity of transparency and education in the realm of cryptocurrency security.</summary>
    <published>2025-05-24T20:56:00+00:00</published>
  </entry>
</feed>
