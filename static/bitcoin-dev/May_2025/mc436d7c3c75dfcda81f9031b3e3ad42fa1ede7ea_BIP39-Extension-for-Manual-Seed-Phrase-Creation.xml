<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP39 Extension for Manual Seed Phrase Creation</title>
  <updated>2025-09-21T22:40:19.460309+00:00</updated>
  <author>
    <name>nerdyrugbyguy 2025-05-25 14:26:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP39 Extension for Manual Seed Phrase Creation</title>
    <updated>2025-09-21T22:40:19.460342+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CADXQin4VbtvyWDGYLJB0HyJ2+Eai-01CKt6J6UzXM9qtdGJbuw@mail.gmail.com/T/#mc436d7c3c75dfcda81f9031b3e3ad42fa1ede7ea" rel="alternate"/>
    <summary>The discourse initiates with Eric Kvam reflecting on his decade-long journey in the bitcoin community, where he utilized coin flips to generate a seed phrase and later founded a bitcoin club to share his knowledge through printed guides and teaching. Despite his efforts, Kvam noticed a prevalent difficulty among people, including those with engineering degrees, in understanding binary math and checksums required for bitcoin self-custody. This observation led him to question whether bitcoin was truly accessible for the general populace or if it remained an elite concept due to the complexity involved in its secure management.

Kvam then introduces a discussion on a proposed UEFI application aimed at simplifying the process of generating a mnemonic from entropy inputs. He outlines the conventional methods involving hex or binary formats for entropy input, which are deemed error-prone and too complex for most users. The proposal suggests an extension to the existing specification to facilitate ease of use without altering the fundamental mechanisms of mnemonic generation. Kvam categorizes the current options for seed generation into using verifiable "white box" tools, relying on unverifiable "black box" tools, employing non-standard processes for cross-checking entropy inputs across different tools, or directly applying binary math for initial word derivation.

Further, Kvam touches upon the idea of encoding additional information like derivation paths into the mnemonic but decides to postpone this discussion. He emphasizes the practicality of BIP39 for entropy generation through manual methods, such as coin flips with Von Neumann skew correction, despite the necessity for subsequent computational steps that are impractical to perform without electronic assistance.

In conclusion, Kvam acknowledges the adequacy of the existing specifications for their intended purpose but suggests an extension to make the technology more accessible to non-experts. He also mentions his plan to republish a bootable UEFI application designed for airgapped operation, which aligns with his broader project objectives. Kvam advocates for user education over the abstraction of critical information, highlighting the importance of making users aware of standard derivation paths and the potential of descriptors for managing wallet metadata more effectively than attempting to encode it within the mnemonic itself.</summary>
    <published>2025-05-25T14:26:00+00:00</published>
  </entry>
</feed>
