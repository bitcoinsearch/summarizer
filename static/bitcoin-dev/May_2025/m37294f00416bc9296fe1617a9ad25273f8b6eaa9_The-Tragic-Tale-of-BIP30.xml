<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>The Tragic Tale of BIP30</title>
  <updated>2025-05-11T02:52:17.858252+00:00</updated>
  <author>
    <name>Sjors Provoost 2025-05-10 16:17:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>The Tragic Tale of BIP30</title>
    <updated>2025-05-11T02:52:17.858284+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/035301dbbba6$701dd490$50597db0$@voskuil.org/T/#m37294f00416bc9296fe1617a9ad25273f8b6eaa9" rel="alternate"/>
    <summary>The discussion opens with an acknowledgment of the complexity and educational value of handling deep-reorganization (deep-reorg) issues within Bitcoin's consensus code, despite its deemed low priority by the Bitcoin Core project. The historical context reveals a long-standing decision by the project to not focus on the graceful handling of extremely deep reorganizations, a stance that the author, Eric Voskuil, previously expressed disagreement with. This approach has led to the elimination of checkpoints in the system, seen as a move away from what was once considered necessary support for network consensus.

The possibility of reintroducing checkpoints is entertained but only under the condition of facing an attack that does not require "alien technology." This statement underscores a threshold for action that hinges on realistic threats rather than hypothetical or exceedingly advanced technological challenges. However, there's an openness to reviewing changes that either simplify the current handling of deep reorgs or thoroughly analyze and propose consistent mitigation strategies across various implementation versions without resorting to the reinstatement of checkpoints.

Checkpoints, once viewed as essential training wheels for consensus mechanisms, are now regarded as potentially harmful, inviting not just legal challenges but also encouraging a form of developer complacency. This shift reflects a nuanced understanding of Bitcoin's evolving security needs and the balance between maintaining robust defense mechanisms and fostering innovation and responsibility among developers. The conversation encapsulates a specific aspect of Bitcoin development, focusing on how best to manage extreme reorganizations without relying on previously discarded methods like checkpoints.</summary>
    <published>2025-05-10T16:17:00+00:00</published>
  </entry>
</feed>
