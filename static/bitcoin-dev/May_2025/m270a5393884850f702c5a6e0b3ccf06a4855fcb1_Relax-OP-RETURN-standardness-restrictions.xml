<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Relax OP_RETURN standardness restrictions</title>
  <updated>2025-05-03T02:49:27.195040+00:00</updated>
  <author>
    <name>Peter Todd 2025-05-02 20:10:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Relax OP_RETURN standardness restrictions</title>
    <updated>2025-05-03T02:49:27.195072+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/f19214a4-6a89-4a2f-a729-560d244573bfn@googlegroups.com/T/#m270a5393884850f702c5a6e0b3ccf06a4855fcb1" rel="alternate"/>
    <summary>The discussion on the utility of the `mempoolfullrbf` option in Bitcoin transactions highlights a nuanced stance on the flexibility and limitations of transaction relay policies. The core argument presented is that maintaining an option to reject certain types of standard transactions, such as full Replace-By-Fee (RBF) transactions, is largely ineffective. This inefficacy stems from the observation that despite some users opting not to relay these transactions, a substantial percentage of miners continue to mine them, essentially rendering the refusal to relay moot.

A specific illustration of where the option to disable full-RBF replacements was marginally beneficial involved Wasabi's Coordinator. In this instance, the full-RBF replacements posed technical challenges until the underlying issues were addressed. This scenario underscores a rare but tangible benefit of providing users with the capability to temporarily disable certain transaction types while they rectify compatibility issues within their systems. However, the narrative suggests that such cases are exceptions rather than the rule, particularly with OP_Return outputs, implying that broader applicability and usefulness of disabling transaction types through node configuration options are limited.

Furthermore, the recommendation for dealing with incompatible or problematic code bases is straightforward: delay upgrading the node software until the necessary fixes are implemented. This approach sidesteps the need for complex or temporary configurations to exclude specific transaction types from being relayed or processed.

For additional insights and perspectives on Bitcoin development and related technical discussions, interested readers can consult resources and contributions by Peter Todd at [https://petertodd.org](https://petertodd.org).</summary>
    <published>2025-05-02T20:10:00+00:00</published>
  </entry>
</feed>
