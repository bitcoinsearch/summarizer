<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP39 Extension for Manual Seed Phrase Creation</title>
  <updated>2025-05-24T02:48:37.706064+00:00</updated>
  <author>
    <name>Russell OConnor 2025-05-23 20:45:00+00:00</name>
  </author>
  <author>
    <name>Kyle Honeycutt 2025-05-23 14:29:00+00:00</name>
  </author>
  <author>
    <name>Eric Kvam 2025-05-23 11:25:00+00:00</name>
  </author>
  <link href="bitcoin-dev/May_2025/m5ee4dbf271c5106a7cd8fd71b1eee5cec73f9e8a_BIP39-Extension-for-Manual-Seed-Phrase-Creation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2025/m7dea616a9327ae3fd9cf9f98efb46332308c6833_BIP39-Extension-for-Manual-Seed-Phrase-Creation.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2025/mba59c9822cf0ee6b4b1e61b36d887ff7b03bd6f2_BIP39-Extension-for-Manual-Seed-Phrase-Creation.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP39 Extension for Manual Seed Phrase Creation</title>
    <updated>2025-05-24T02:48:37.706107+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAMZUoK=A8T5N4ekR7r6+cfaxMCYL=a5_v0kqdPNVDzgcUY9xrg@mail.gmail.com/T/#mba59c9822cf0ee6b4b1e61b36d887ff7b03bd6f2" rel="alternate"/>
    <summary>The development and implementation of BIP-93, also known as codex32, represents a significant advancement in the realm of cryptographic security and user autonomy within digital currency systems. Codex32 is designed to cater to both human and computer-generated randomness, enhancing the flexibility and security of secret sharing mechanisms. For further information on codex32, interested individuals can visit [secretcodex32.com](https://secretcodex32.com/).

In the pursuit of enabling users to generate mnemonic passphrases without relying on potentially untrustworthy third-party software, often referred to as a "black box," the BIP39 standard offers a well-defined methodology. This standard allows users to create their own mnemonics in a trustless manner using any source of entropy. The process involves performing a SHA256 hash on the entropy to obtain a 256-bit string, converting that string into binary, then performing another SHA256 hash and extracting the first 8 bits as a checksum before finalizing the mnemonic words. Detailed guidelines for this procedure are available at [Bitcoin BIPs GitHub page](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawikiGenerating_the_mnemonic).

A novel approach has been suggested to simplify the recovery process and enhance user control over seed phrase generation. By utilizing every eighth word from a specified wordlist, it's possible to generate 16-word phrases with 128 bits of entropy without requiring a checksum. This method not only simplifies the derivation of seed phrases but also incorporates the encoding of the derivation path directly within the seed phrase itself, supporting up to seven distinct paths based on the least significant three bits of each word in the phrase. The potential benefits of this implementation are manifold, including improved compatibility checks between wallets and seed phrases, simplified manual procedures for deriving paths with a shortened 256-word list, and enhanced error detection through metadata restrictions akin to a checksum function.

This approach proposes an innovative extension to the existing BIP39 standard, suggesting a future where mnemonic phrase formats could continually evolve to meet diverse needs while maintaining the core principle of user-generated entropy. It opens avenues for further advancements, such as the possibility of introducing a 32-word phrase format that would carry the same entropy as a 24-word phrase, thereby expanding the utility and flexibility of mnemonic phrases for users and developers alike.</summary>
    <published>2025-05-23T20:45:00+00:00</published>
  </entry>
</feed>
