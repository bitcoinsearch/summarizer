<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Graftleaf: Program Composition and Generic Delegation</title>
  <updated>2025-05-07T02:53:43.833428+00:00</updated>
  <author>
    <name>Josh Doman 2025-05-06 01:27:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Graftleaf: Program Composition and Generic Delegation</title>
    <updated>2025-05-07T02:53:43.833460+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/0b5b560b-aa0c-4669-9621-67ccbecba516n@googlegroups.com/T/#u#m2f5da099a7ecd43f8a7495cba67f9a009ca57851" rel="alternate"/>
    <summary>Exploring the concept of coin delegation within Bitcoin, Joshua Doman introduces "Graftleaf," a proposal aimed at enabling generalized program composition and coin delegation. This innovative approach seeks to address the limitations of previous proposals by allowing for delegation from any valid spending path to arbitrarily complex compositions of programs and script. Notably, Graftleaf proposes a new Taproot leaf version (0xc2) that leverages the annex to facilitate these delegations. This mechanism permits the execution of multiple witness programs in sequence, including locking scripts, and allows users to commit to additional spending conditions at signature-time using the annex.

Doman's implementation of Graftleaf is concise, with the core execution logic encompassed in fewer than 60 lines of code, supported by an extensive test suite. The technical details reveal a sophisticated design where each witness program operates on its own section of the witness stack, adhering to specific size elements. This structure ensures the preservation and enforcement of resource limits across executions while preventing witness malleability and replay attacks through signature commitments to the chain of tapleafs and annexes.

The proposal outlines significant potential benefits, such as backward compatibility with existing P2TR addresses, enhanced composability for creating "vault-of-vaults" and other complex spending policies, and generalized delegation that supports re-delegation and improves privacy and fungibility. Additionally, it lays the groundwork for future upgrades and compatibility with new witness programs.

Comparatively, Graftleaf distinguishes itself from other proposals like Graftroot, CSFS, and Entroot by enabling script path delegation, delegation from a composition of programs and script, and supporting complex compositions on a single leaf without requiring hash-to-curve or a new address type. Doman welcomes community feedback on this first formal proposal, recognizing the contentious nature of soft fork proposals but emphasizing the importance of solving the architectural problem of generic composition and delegation in Bitcoin.</summary>
    <published>2025-05-06T01:27:00+00:00</published>
  </entry>
</feed>
