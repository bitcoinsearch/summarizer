<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Against Allowing Quantum Recovery of Bitcoin</title>
  <updated>2025-09-22T13:05:36.998852+00:00</updated>
  <author>
    <name>Sjors Provoost 2025-05-28 07:46:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Against Allowing Quantum Recovery of Bitcoin</title>
    <updated>2025-09-22T13:05:36.998879+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CADL_X_cF=UKVa7CitXReMq8nA_4RadCF==kU4YG+0GYN97P6hQ@mail.gmail.com/T/#m1c2dbd8bf12bfda4be839d20b1d48c9cea234c17" rel="alternate"/>
    <summary>In a recent discussion on the Bitcoin Development Mailing List, an interesting point regarding the scriptPubKey and NUMS points was brought to light. Initially, it was thought that the scriptPubKey visible on the blockchain directly reveals the NUMS point. However, this understanding has been corrected. The internal key, which is indeed a NUMS point, undergoes a tweaking process. As a result of this tweak, when the corresponding key is used for a transaction, the tweak remains undisclosed. This means that the blockchain lacks the ability to confirm whether a NUMS point was involved in the transaction or not, thus it cannot prevent the spend based on this criterion. This insight emphasizes the complexity and intricacies of blockchain transactions and the challenges in tracking specific types of keys or points, such as NUMS, within the system. For further details, one can refer to the discussion on the [Bitcoin Development Mailing List](https://groups.google.com/g/bitcoindev/c/uUK6py0Yjq0/m/bQk2v0E5BQAJ).</summary>
    <published>2025-05-28T07:46:00+00:00</published>
  </entry>
</feed>
