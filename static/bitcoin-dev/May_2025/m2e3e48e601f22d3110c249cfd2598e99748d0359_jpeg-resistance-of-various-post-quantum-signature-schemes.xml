<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>jpeg resistance of various post-quantum signature schemes</title>
  <updated>2025-07-01T05:37:27.630720+00:00</updated>
  <author>
    <name>Q C 2025-05-29 23:20:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>jpeg resistance of various post-quantum signature schemes</title>
    <updated>2025-07-01T05:37:27.630752+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAMjbhoU=PCUwbhWFbqCbOdZc+ybmREJmmt1K1TuHrCTncKH6VA@mail.gmail.com/T/#m2e3e48e601f22d3110c249cfd2598e99748d0359" rel="alternate"/>
    <summary>The discussion on the suitability of XMSS for distributed systems like Bitcoin highlights significant concerns due to its complex, stateful nature which may pose understanding and operational challenges among a global array of developers, implementers, and users. Given these risks, the alternative of employing ML-DSA is proposed as a favorable option. This choice is attributed to its capacity to balance between the increased block payload sizes resulting from larger signature and public key sizes against the safety and security it offers in anticipation of quantum computing threats capable of undermining classical cryptography.

Furthermore, to enhance security measures until quantum computers become a tangible threat to classical cryptographic methods, a hybrid approach combining ML-DSA with ed25519 or FN-DSA with ed25519 is recommended. This strategy, although increasing complexity and potential implementation risk, is considered a prudent safeguard. This hybrid method aims to offer a robust defense mechanism, ensuring the continued integrity and security of distributed systems such as Bitcoin in the face of evolving quantum computing capabilities.</summary>
    <published>2025-05-29T23:20:00+00:00</published>
  </entry>
</feed>
