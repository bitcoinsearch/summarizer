<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Relax OP_RETURN standardness restrictions</title>
  <updated>2025-05-04T02:58:01.709337+00:00</updated>
  <author>
    <name>Martin Habov≈°tiak 2025-05-03 02:02:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Relax OP_RETURN standardness restrictions</title>
    <updated>2025-05-04T02:58:01.709366+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/f19214a4-6a89-4a2f-a729-560d244573bfn@googlegroups.com/T/#mdf92814f8e7491c5249f11639a3bdef2f3d480f7" rel="alternate"/>
    <summary>In a recent conversation with a legal professional, it was confirmed that possessing illegal content within a chain is not deemed illegal unless it can be easily accessed with general-purpose software. Moreover, the legality of images marked by red dots remains unchanged; they are still considered illegal if they inherently contain illegal content. An interesting point raised was the potential for confusing scanning tools, which has been addressed through the technique of xoring. The capability to xor without needing to redownload content exists, albeit through an external tool. It's suggested that those interested in having this feature integrated directly should either contribute to its development or fund it.

The discussion also touched upon a personal project involving the embedding of data into Bitcoin addresses through a process known as grinding. This project is publicly accessible via [GitHub](https://github.com/Kixunil/btcsteg), although it was clarified that the technique has never been used to send information into the chain, and sending tips to the address mentioned is discouraged.

A common misconception regarding the complexity of implementing the 'red dot' method for non-technical individuals was dispelled by the use of ChatGPT to generate functional code effortlessly, highlighting the accessibility and efficiency of modern AI tools in programming tasks.

The email further delves into the implications of requiring signatures to prove discrete logarithm (dlog) knowledge for non-p2tr outputs, illustrating that such a requirement would significantly increase the data size for transactions beyond the current maximum standard for OP_RETURN outputs, while also emphasizing the substantial computational resources needed for signature verification compared to processing OP_RETURN. It was argued that enforcing signature and preimage requirements on Taproot could undermine protocols dependent on nothing-up-my-sleeve numbers (NUMS) and eliminate the advantages offered by Taproot. The discourse concludes by questioning the practicality and potential adverse effects of measures intended to combat spam within blockchain protocols, suggesting that such efforts might inadvertently exacerbate the situation.</summary>
    <published>2025-05-03T02:02:00+00:00</published>
  </entry>
</feed>
