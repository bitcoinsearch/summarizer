<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Proposal] 64-bit arithmetic in Script</title>
  <updated>2025-05-13T02:59:57.044265+00:00</updated>
  <author>
    <name>Chris Stewart 2025-05-12 16:15:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Proposal] 64-bit arithmetic in Script</title>
    <updated>2025-05-13T02:59:57.044294+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CALkkCJbeAYA2X8jv8iWthKBB8GqxA49DCFm+UMnhmXYpexTNtw@mail.gmail.com/T/#m7e7d58d73e7e8bb1034f218dad981608f5b89422" rel="alternate"/>
    <summary>The proposed soft fork aims to significantly enhance the numerical capabilities of Script by extending the range of numeric operands from the current -2^31+1 to 2^31-1, to a much broader -2^63+1 to 2^63-1. Similarly, it proposes to expand the result range for arithmetic operations from the existing -2^63 to 2^63-1, extending it to -2^127 to 2^127-1. This expansion is applied to all existing opcodes that are currently interpreting stack elements as numbers, which will now be upgraded to support 64-bit parameters. This enhancement maintains the original Bitcoin implementation's number encoding format and arithmetic semantics while significantly increasing the supported precision. The documentation and discussion for these changes can be found in detail within the GitHub repository [here](https://github.com/Christewart/bips/blob/2025-03-17-64bit-pt2/bip-XXXX.mediawiki).

Chris, the author of the proposal, highlights that this initiative is aimed at laying the foundational groundwork necessary for introducing monetary amounts into Script. Although the document does not take a stance on the specific method of introduction, Chris mentions having prototyped several proposals related to integrating amount locks into Script. He believes the proposal has reached a level of stability that warrants serious review by the community. The communication underlines the technical advancements intended to bolster the Bitcoin scripting language's functionality and its potential implications for future developments.</summary>
    <published>2025-05-12T16:15:00+00:00</published>
  </entry>
</feed>
