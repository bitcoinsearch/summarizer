<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Unbreaking testnet4</title>
  <updated>2025-05-13T02:57:56.132153+00:00</updated>
  <author>
    <name>Anthony Towns 2025-05-12 05:21:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Unbreaking testnet4</title>
    <updated>2025-05-13T02:57:56.132191+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/7c6800f0-7b77-4aca-a4f9-2506a2410b29@murch.one/T/#m26c7a4858f98bf5d1e7631250d047635c0b18e74" rel="alternate"/>
    <summary>The email discusses challenges and potential solutions related to transaction (tx) value errors in blockchain operations, specifically focusing on issues that arise when input or output values of a transaction fall outside the predefined range of 0-21 million. These errors can occur under several conditions, including when a single input or the sum of inputs to a transaction, a single output, the sum of outputs from a single transaction, or the fee paid by a single transaction, exceed the allowed range. Additionally, it addresses the problem of block fees going beyond this range.

A proposed solution to these issues involves adjusting the initial premine and halving time to keep the total supply under control, thus preventing the aforementioned errors. The suggestion includes setting the initial premine at half the total supply and reducing the halving time accordingly, with specific figures provided for different scenarios. For instance, having a premine of 10.5 million with a halving interval of 105,000 blocks, or adjusting the premine to 18.375 million with halvenings every six months, are among the options discussed. Another approach mentioned is premining almost the entire supply to instantly shift rewards to transaction fees post-premine, highlighting the importance of maintaining a mechanism for permissionless, anonymous, and low-latency coin acquisition for testing purposes.

Moreover, the email outlines a technical framework for implementing a premined testnet, detailing steps from defining the chain with a new genesis block to distributing the premine among developers, wallet maintainers, and others after mining begins. This approach aims at making the testnet more work-intensive than existing ones, requiring a significant amount of hashing power to reset, which would come at a considerable cost in terms of lost mainnet block rewards. It also touches upon the necessity of a hard fork to prevent compatibility issues between old and new clients due to discrepancies in expected block discovery times.

In discussing the pros and cons of different premine strategies, the email suggests that creating a massive initial block with a singular utxo (or one for each premine recipient) could be more efficient than the traditional method, which burdens users with downloading and validating thousands of blocks. The term "premine" is clarified to encompass any scenario where the creators of a chain have the opportunity to claim or distribute coins before the general public can mine new ones.

For further details, the author references a GitHub link containing code modifications that would enable the outlined changes: [https://github.com/ajtowns/bitcoin/commits/202505-premine/](https://github.com/ajtowns/bitcoin/commits/202505-premine/).</summary>
    <published>2025-05-12T05:21:00+00:00</published>
  </entry>
</feed>
