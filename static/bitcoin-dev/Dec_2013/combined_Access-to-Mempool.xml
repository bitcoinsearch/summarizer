<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Access to Mempool</title>
  <updated>2025-10-16T02:35:05.373150+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Dec_2013/003962_Access-to-Mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2013/003961_Access-to-Mempool.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003961.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003961.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003961.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003961.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003961.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003961.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Access to Mempool</title>
    <updated>2025-10-16T02:35:05.373254+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-December/003961.html" rel="alternate"/>
    <published>2013-12-28T14:46:05+00:00</published>
    <summary>There are commands available to access a peer's mempool state, which can be used by nodes to request the contents of a peer's memory pool. This is particularly useful for SPV clients who want to find transactions that were broadcast before they were started up but not yet confirmed. By reading a peer's mempool or persisting it in a local database, nodes can recover faster after a reboot. The latest version, 0.9, has code to save the mempool to disk.The contents of the mempool may vary depending on when the node was started and what transactions it saw at what times. However, this does not have any significant impact. Generally, if a transaction is in the mempool, it will be relayed to other nodes unless there are specific quirks with sendrawtransaction RPCs or wallet spends.It is unclear what kind of information can be obtained about a node from its mempool, and whether there are any distinguishing features that can be observed. Furthermore, it is unknown if there are transactions that can be received into one's own mempool but not forwarded, or if 'nLockTime' transactions play a role in this context.The status of this new feature, including which clients support it, remains unclear. Additionally, the author asks if there are recommended sources to compare the features implemented by different wallet software. Although several questions are raised in the context, no summary is provided.</summary>
  </entry>
</feed>