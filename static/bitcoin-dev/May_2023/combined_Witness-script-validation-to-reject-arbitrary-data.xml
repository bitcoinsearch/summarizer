<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Witness script validation to reject arbitrary data</title>
  <updated>2025-09-26T14:32:35.550934+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m35b76b79028868459c38a25e1a13c74bc06c5923">
      <author>[bitcoin-dev] Witness script validation to reject arbitrary data Moth</author>
      <timestamp>2023-05-08T20:16:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Witness script validation to reject arbitrary data Moth" parent_id="mailing-list-2023-05-m35b76b79028868459c38a25e1a13c74bc06c5923" anchor="ma72df593803c90fe83d603a8e8f77b0679143f06">
      <author>angus</author>
      <timestamp>2023-05-08T21:33:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="1" position="2" reply_to="[bitcoin-dev] Witness script validation to reject arbitrary data Moth" parent_id="mailing-list-2023-05-m35b76b79028868459c38a25e1a13c74bc06c5923" anchor="maf32f1ce67330459e0f74e8fa8a49a8a14951d22">
      <author>Christopher Allen</author>
      <timestamp>2023-05-08T21:43:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="1" position="3" reply_to="[bitcoin-dev] Witness script validation to reject arbitrary data Moth" parent_id="mailing-list-2023-05-m35b76b79028868459c38a25e1a13c74bc06c5923" anchor="m7c8b2363291ec09ec0ea5481d6e01a3bdc1eedf0">
      <author>Peter Todd</author>
      <timestamp>2023-05-08T23:55:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="2" position="4" reply_to="Peter Todd" parent_id="mailing-list-2023-05-m7c8b2363291ec09ec0ea5481d6e01a3bdc1eedf0" anchor="mbfeecfc9f600bdf5498f1a4cd462ca07989250cd">
      <author>Moth</author>
      <timestamp>2023-05-09T12:20:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="2" position="5" reply_to="Christopher Allen" parent_id="mailing-list-2023-05-maf32f1ce67330459e0f74e8fa8a49a8a14951d22" anchor="m1bf22204e9995ce7bdbbd7163ef5f695a86ee643">
      <author>Aymeric Vitte</author>
      <timestamp>2023-05-09T17:45:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/May_2023/021650_Witness-script-validation-to-reject-arbitrary-data.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021642_Witness-script-validation-to-reject-arbitrary-data.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021633_Witness-script-validation-to-reject-arbitrary-data.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021638_Witness-script-validation-to-reject-arbitrary-data.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021637_Witness-script-validation-to-reject-arbitrary-data.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021630_Witness-script-validation-to-reject-arbitrary-data.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021630.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Witness script validation to reject arbitrary data</title>
    <updated>2025-09-26T14:32:35.551816+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021630.html" rel="alternate"/>
    <published>2023-05-09T17:45:11+00:00</published>
    <summary>In a recent discussion on the Bitcoin-dev mailing list, the topic of raising the limit on OP_RETURN was brought up. However, it was concluded that imposing limits may not be necessary as people will find ways to work around them and fees will regulate the use of OP_RETURN. The issue of controlling the value of stored data was also raised, with suggestions to store references to data using hashes and/or signatures instead of storing it directly. It was noted that this cannot currently be done with OP_RETURN. The discussion also touched on the issue of freeriders and how to prevent them from impacting the network as a whole and increasing decentralization among miners. Finally, the idea that the market will self-regulate when ordinal meme stuff/BRC20 has zero value was mentioned.Another thread in the Bitcoin-dev email chain focused on concerns about inscriptions being inserted between specific flags. It was explained that this is simply an artificial limitation of the current inscription protocol and there are numerous ways to embed arbitrary data in Bitcoin transactions. The flood of BRC-20 inscriptions happening currently is considered small and could have used other data encoding techniques or OP_RETURN outputs. Blocking these types of transactions is seen as futile. The purpose of this flood of inscriptions is to create a new set of assets via an auction, which does not require any data to be embedded in the chain at all. Blocking such transactions is deemed hopeless by some individuals.The ongoing discussion on the bitcoin-dev mailing list revolves around the limitation of the inscription protocol, which only allows data to be inserted between OP_FALSE and OP_IF flags. One suggestion is to implement a validation check to reject witness scripts that have arbitrary data between these flags, thereby allowing rejection of inscriptions while still benefiting from taproot. However, others argue that blocking such use cases is hopeless as there are countless ways to embed arbitrary data in Bitcoin transactions. They point out that the current flood of inscription transactions is small and could have used alternative data encoding techniques. Additionally, the purpose of this flood, which involves the creation of a new set of assets through an auction, does not require any data to be embedded in the chain. It could have been implemented with normal transactions that are indistinguishable from others.In a message sent on May 8, 2023, a user named Moth proposed the idea of a validation check to reject witness scripts with arbitrary data between OP_FALSE and OP_IF flags. The goal is to prevent the network from being overloaded with transactions focused solely on ordinals and BRC-20 tokens while still benefiting from taproot. However, it is noted that there are many other ways to &quot;inscribe&quot; data into the blockchain, making such a validation check ineffective. Some individuals had hoped for a slightly larger OP_RETURN to store a tagged root of a hash-tree for various use cases. These use cases include open timestamps, ION, and Gordian Envelope, which consolidates large sets of proofs into a hash used for L2 proofs-of-inclusion. Concerns have been raised about the inscription technique freeloading on the network mempool, the validation network, and volunteer unpruned full nodes. This has led to increased costs for hosting and maintaining free privacy services. While solutions are sought, it remains uncertain whether raising the limit on OP_RETURN would be a viable solution.There is also a concern that banning the storage of arbitrary/non-functional data could lead to people abusing useful data, causing more harm than good. An example of this is Stamps, which stores Inscription-like data in fake outputs, consuming UTXO set storage. The issue of the UTXO set getting too big is seen as a more significant problem than the chain size increasing. It is unclear whether lifting the size limit for witness scripts as part of Taproot was an oversight. If Taproot is meant to enable large useful scripts, it becomes difficult to define &quot;not useful&quot; in a way that filters out unwanted data. It is suggested that incentivizing people to find workarounds by attempting to censor their current actions may lead to even worse outcomes. The fear is that banning things will only push people to find alternative ways to bypass the ban.One suggestion put forward is to have a validation check to reject witness scripts with arbitrary data between OP_FALSE and OP_IF flags. This would prevent the network from being overloaded with transactions focused solely on ordinals and BRC-20 tokens while still benefiting from taproot. However, the author questions whether this validation check is a good idea and whether it was an oversight to allow arbitrary data between these flags when the size limit for witness scripts was lifted as part of taproot. It is important to note that OP_RETURN can currently store arbitrary data up to 80kb.</summary>
  </entry>
</feed>