<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - ZeroSync: Introducing Validity Proofs to Bitcoin</title>
  <updated>2023-08-29T02:15:23.286604+00:00</updated>
  <author>
    <name>blk0 2023-08-28 07:49:02+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2023-06-05 18:59:58+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-06-05 18:47:03+00:00</name>
  </author>
  <author>
    <name>Robin Linus 2023-05-12 16:03:06+00:00</name>
  </author>
  <author>
    <name>Weiji Guo 2023-05-12 15:32:55+00:00</name>
  </author>
  <author>
    <name>Robin Linus 2023-05-12 12:12:03+00:00</name>
  </author>
  <link href="bitcoin-dev/Aug_2023/021914_ZeroSync-Introducing-Validity-Proofs-to-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2023/021753_ZeroSync-Introducing-Validity-Proofs-to-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2023/021752_ZeroSync-Introducing-Validity-Proofs-to-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021681_ZeroSync-Introducing-Validity-Proofs-to-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021680_ZeroSync-Introducing-Validity-Proofs-to-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021679_ZeroSync-Introducing-Validity-Proofs-to-Bitcoin.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - ZeroSync: Introducing Validity Proofs to Bitcoin</title>
    <updated>2023-08-29T02:15:23.286689+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021679.html" rel="alternate"/>
    <summary>Peter Todd shared information about a general purpose zkVM implementation for the RISC-V instruction set called RiscZero. He mentioned that since Bitcoin Core can be compiled for RISC-V, and RiscZero can prove execution traces of a RISC-V VM, the argument against using RISC-V for Bitcoin no longer applies.A research paper titled "ZeroSync: Introducing Validity Proofs to Bitcoin" has been published, introducing ZeroSync as a proof system that addresses scalability challenges with SNARKs. The system compresses the entire Bitcoin blockchain into a compact proof of validity, enabling instant verification and unlocking various innovative applications. The prototype implementation of a chain state proof utilizes the Cairo language, Utreexo, and recursive STARKs. This approach requires no consensus changes, making it crucial for implementing forks in Bitcoin. ZeroSync enables diverse applications such as quick bootstrapping of full nodes, trustless light clients, enhanced Lightning Network privacy, and secure cross-chain bridges. Additionally, zkCoins, a client-side validation protocol combined with zero-knowledge SNARKs, is introduced, significantly improving privacy and throughput of token transactions. However, there are concerns about creating an alternative implementation of the Bitcoin protocol, which may lead to potential forks. Furthermore, if the technology advances to real-time proof-generation, widespread adoption by Bitcoin miners could jeopardize Bitcoin's decentralization.In a conversation between Weiji and Robin, they discussed plans to implement a SNARK verifier on Bitcoin's base layer. Robin explained his long-term plan and mentioned experimenting with Simplicity on the Liquid sidechain. Weiji shared his proposal for a new opcode OP_ZKP to enable the Bitcoin network to verify zkp proofs through a soft fork. Although Robin acknowledged the proposal, he highlighted the challenge of establishing consensus over specific op_snark_verify opcodes due to the variety of competing proof systems with different trade-offs. While STARKs are scalable and suitable for chain state proofs, Robin prefers other proof systems like Plonky2 for on-chain verification due to smaller proof sizes. Robin also mentioned the possibility of using any verifier to wrap other proofs. He invited Weiji to join their Telegram group to discuss SNARKs on Bitcoin.Weiji emailed Robin to inquire about his plans for implementing a SNARK verifier on Bitcoin's base layer. Weiji had previously proposed the opcode OP_ZKP for verifying zkp proofs through a soft fork. In response, Robin shared his research on ZeroSync, a pioneering proof system that addresses Bitcoin's scalability challenges with SNARKs. ZeroSync compresses the entire Bitcoin blockchain into a compact proof of validity, enabling instant verification and unlocking various applications. The implementation of a chain state proof utilizes the Cairo language, Utreexo, and recursive STARKs. This approach requires no consensus changes, making it crucial for implementing forks in Bitcoin. ZeroSync also introduces zkCoins, a client-side validation protocol combined with zero-knowledge SNARKs, improving privacy and transaction throughput. The groundbreaking compression capabilities of SNARKs have revolutionized cryptocurrency design, and ZeroSync leads their application to Bitcoin. The full paper can be found at https://zerosync.org/zerosync.pdf. Robin welcomes comments and questions from the bitcoin dev community regarding the paper.ZeroSync, the first-ever proof system for Bitcoin, has been introduced to address scalability challenges using SNARKs. It compresses the entire Bitcoin blockchain into a compact proof of validity, allowing instant verification and unlocking innovative applications. The prototype implementation of a chain state proof utilizes the Cairo language, Utreexo, and recursive STARKs. These proofs require no consensus changes, which is crucial for implementing forks in Bitcoin. ZeroSync enables various applications such as quick bootstrapping of full nodes, trustless light clients, enhanced Lightning Network privacy, and secure cross-chain bridges. Additionally, zkCoins, a client-side validation protocol combined with zero-knowledge SNARKs, significantly improves privacy and transaction throughput. With the combination of future Bitcoin features like Simplicity, zkCoins enables private and more scalable BTC transactions. The paper on ZeroSync can be found at https://zerosync.org/zerosync.pdf. Robin invites the bitcoin dev community to provide comments and ask questions about the paper.</summary>
    <published>2023-08-28T07:49:02+00:00</published>
  </entry>
</feed>
