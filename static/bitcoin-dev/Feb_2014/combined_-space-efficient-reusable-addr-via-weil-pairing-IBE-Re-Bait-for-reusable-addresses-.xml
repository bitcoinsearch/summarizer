<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - (space) efficient reusable addr via weil pairing IBE (Re: Bait for reusable addresses)</title>
  <updated>2025-10-12T02:31:16.121098+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Feb_2014/004274_-space-efficient-reusable-addr-via-weil-pairing-IBE-Re-Bait-for-reusable-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2014/004273_-space-efficient-reusable-addr-via-weil-pairing-IBE-Re-Bait-for-reusable-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2014/004272_-space-efficient-reusable-addr-via-weil-pairing-IBE-Re-Bait-for-reusable-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2014/004271_-space-efficient-reusable-addr-via-weil-pairing-IBE-Re-Bait-for-reusable-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2014/004270_-space-efficient-reusable-addr-via-weil-pairing-IBE-Re-Bait-for-reusable-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2014/004204_-space-efficient-reusable-addr-via-weil-pairing-IBE-Re-Bait-for-reusable-addresses-.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004274.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004274.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - (space) efficient reusable addr via weil pairing IBE (Re: Bait for reusable addresses)</title>
    <updated>2025-10-12T02:31:16.121176+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-February/004274.html" rel="alternate"/>
    <published>2014-02-02T15:26:24+00:00</published>
    <summary>The email exchange between Adam Back, Peter Todd, and Jeremy Spilman discusses the use of Identity-Based Encryption (IBE) scheme to increase privacy in transactions. The IBE scheme involves using 'filter' and 'recovery' pubkeys to encrypt a string of zeros called 'filter bait'. This bait is placed in transactions for later decryption by third parties. When enough zeros are decrypted, it is considered a filter pass and the transaction is sent to the payor. Combining IBE schemes with public prefixes can optimize results, but it reduces anonymity when combined with flow analysis. Finding a non-IBE method may be more computationally efficient and indexable. Alternative methods like one-use, stealth, or IBE addresses are also suggested.In another discussion, the focus is on securely delegating block searching by computing the private key for the IBE pub key used for that block and sending it as a query to a random node. The node can decrypt the encrypted bloom baits but cannot correlate them with other payments received by the same user. The payor needs separate pub keys for filtering and recovery. Shared secrets derived from these keys can be given to a semi-trusted third party for trial decryption of filter bait in transactions. A sufficient number of zeros in the decrypted string constitutes a filter pass, and the transaction is given to the payor. The full node uses the private key to decrypt specific bytes in transactions that match the expected layout. This decrypted byte serves as bloom bait. Both schemes can be used together, combining a short public prefix with a private filter.Adam Back also discussed reusable addresses with several people, proposing an ECC-based version to address issues of payment to bandwidth-constrained and frequently offline recipients while maintaining privacy. Bob publicly publishes three pubkeys along with a short prefix. When Alice wants to pay Bob, she creates an ephemeral keypair and derives shared secrets from Bob's pubkeys. She includes the derived pubkey in the transaction along with an encrypted prefix derived from the filter nonce and the prefix. Bob can find the transaction by giving the prefix and filter secret key to a trusted party who scans the blockchain. This method allows Bob to maintain privacy, while Ivan, the scanning party, only gains probabilistic information about possible transactions. Eve remains unaware of the Filter secret key and learns nothing from the blockchain data.The context also mentions the desire for a time-limited Filter pubkey derived from a public random beacon with different keys for each defined time interval. Identity-based cryptography is suggested as a solution where Bob publishes a master public key, allowing derivation of public keys based on the master key and the random beacon value.Adam Back proposed a proof-of-concept solution for better space efficiency and linkability defense reusable addresses using an IBE scheme. He used IBE as a building block to create a sequence of public keys with specific properties. The reusable address becomes an IBE public key, and encryption with the previous block hash serves as the &quot;identity&quot;. A separate message for secure delegatable filtering is sent, adding encrypted bloom bait and potentially combining it with extended bloom bait for anonymity set within the block. While reusing addresses is not ideal, Adam Back's proposal aims to make address reuse more private and less likely to leak metadata.Lastly, Adam Back mentioned his idea of a space-efficient alternative to bloom filters using IBE based on weil-pairing. This allows for the delegation of decryption specific to the queried block without the node correlating with queries from the same user in other blocks. Further possibilities of delegating filtering without introducing additional complexity or using public key steganography were discussed.Overall, the discussions revolve around enhancing privacy and efficiency in blockchain transactions through various cryptographic schemes and methods.</summary>
  </entry>
</feed>