<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - performance testing for bitcoin</title>
  <updated>2025-10-12T02:34:43.420998+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Oct_2012/001894_performance-testing-for-bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2012/001893_performance-testing-for-bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2012/001890_performance-testing-for-bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2012/001888_performance-testing-for-bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2012/001887_performance-testing-for-bitcoin.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-October/001887.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-October/001887.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - performance testing for bitcoin</title>
    <updated>2025-10-12T02:34:43.421092+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-October/001887.html" rel="alternate"/>
    <published>2012-10-04T16:31:11+00:00</published>
    <summary>In a discussion on the Bitcoin-development mailing list in 2012, Ian Miers sought advice on obtaining performance numbers for modifications to Bitcoin. He was primarily concerned with script evaluation performance and needed to test how adding new instruction types would affect performance. To ensure accuracy, simulated traffic that approximated real-world traffic was required. Jeff Garzik responded by suggesting that specific aspects of blockchain performance could be measured by importing blocks via -loadblock=FILE. However, he noted that other performance measurements, such as block relay speed through the network, were not easily measured. Joel Joonatan Kaartinen added that benchmarking worst-case scenarios should also be considered to avoid creating a DoS vulnerability. The discussion concluded with a suggestion to deploy New Relic APM for application performance management.In an email exchange between Ian Miers and Jeff Garzik, Ian inquired about the best way to obtain performance numbers for Bitcoin modifications. His primary focus was on script evaluation performance and the addition of new instruction types. He wanted to test the impact on performance by interspersing transactions with the new instructions alongside existing ones. It was important for his simulated traffic to closely resemble real-world traffic to achieve accurate results. Jeff advised being specific about the aspect of performance being measured, as &quot;performance&quot; is a broad term. He suggested importing blocks via -loadblock=FILE to measure certain aspects of blockchain performance but acknowledged that measuring block relay speed through the network posed challenges. Ian also asked if there were any benchmarking or instrumentation options in bitcoind, but the email exchange did not provide further information on this topic.The context revolves around Ian Miers' search for methods to obtain performance numbers for Bitcoin modifications. He aimed to improve script evaluation performance and experiment with new instruction types. Simulated traffic resembling real-world traffic was necessary for accurate testing. Jeff Garzik emphasized the importance of specifying the performance aspect being measured and suggested using -loadblock=FILE to measure certain blockchain performance aspects. However, measuring block relay speed through the network proved to be more challenging. The discussion also highlighted the need to benchmark worst-case scenarios to avoid DoS vulnerabilities. There was a mention of deploying New Relic APM for application performance management. Additionally, there was a query about speeding up the performance measurement process by replaying real Bitcoin transactions on a test-net-in-a-box network with reduced hash difficulty, but it remains unclear whether this approach was pursued or further explored.</summary>
  </entry>
</feed>