<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Pseudocode for robust tail emission</title>
  <updated>2025-10-16T02:34:47.184303+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Feb_2023/021394_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021363_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021362_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021356_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021338_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021316_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021309_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021308_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021307_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021306_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021305_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2023/021304_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2022/021303_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2022/021302_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2022/021300_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2022/021299_Pseudocode-for-robust-tail-emission.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021394.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021394.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021394.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021394.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021394.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021394.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Pseudocode for robust tail emission</title>
    <updated>2025-10-16T02:34:47.184386+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021394.html" rel="alternate"/>
    <published>2023-02-01T22:04:11+00:00</published>
    <summary>In a recent discussion on the bitcoin-dev mailing list, user John Tromp clarified a statement about transaction reward fees. The original claim stated that the current total reward per transaction was $63, which is three orders of magnitude higher than typical fees. However, Tromp corrected this by stating that the reward is actually only two orders of magnitude higher than current fees, which are typically over $0.50. He emphasized the importance of not exaggerating the difference.The issue of difficulty adjustment and halving in Bitcoin mining was also discussed. A conservative approach was proposed to address the problem of hashing power dropping without an average price increase within four years. This approach suggests accepting a drop in hashrate without executing any halving and waiting for the hashrate to recover, even if it takes 20 years. This would lead to the lowest possible annual inflation set by a free market. Peter Todd responded to this proposal, expressing concerns about the immediate danger of halving. He pointed out that profit margins tend towards marginal costs rather than total costs, resulting in hashing power being shut down and fees increasing dramatically, causing disruptions to many aspects, including Lightning channels.There was further discussion on the security of Bitcoin currency. Coinbase was mentioned as behaving more like a bank, and there was a mention of a nostr bot that does block updates without factoring in Coinbase. The amount of security provided by fees and coinbase rewards was debated, with fees currently making up about 13% of miner revenue. The worst-case scenario of the first global hashrate regression taking place in 2028 was also mentioned. Various proposals were made to regulate the level of taxation of parties involved and fix global hashrate regression if it occurs. The motivation of an attacker was considered, with an upper bound of approximately $350 billion. The possibility of the fee market growing superlinearly in comparison to market cap was also discussed, which would make high levels of security more realistic. The issue of deflation in Bitcoin and its differences from gold or other commodities was examined.In another discussion on the bitcoin-dev mailing list, the topic of security and fees was raised. Currently, around 13% of miner revenue comes from fees, with the majority of security coming from coinbase rewards. The question was posed regarding what size of threat would require additional security measures. Estimates were made, placing an upper bound of $350 billion per year at risk if governments viewed Bitcoin as a threat to their currencies. The cost to purchase a 50% share of bitcoin miners was estimated to be less than $7 billion, with a potential price of $800,000 per bitcoin needed to support $350 billion in security. However, if fees alone cannot maintain sufficient security, there is still time to address the issue. The importance of avoiding long-term global hashrate regression for the store of value feature was also discussed.The security of Bitcoin is currently ensured by inflation of ~1.8% and fees paid to miners. Options such as adjusting the subsidy or block size to attract more or fewer miners were suggested if fees alone are not enough to maintain security. Deflation in Bitcoin was noted to be different from gold, and a drop in network security could have complex repercussions. The difficulty-security relationship becomes less predictable over time, making it challenging to code for violations of security targets. One proposal suggests periodically adjusting the subsidy up or down through a soft or hard fork using an algorithm that calculates the average difficulty of the last 100 retargets every 210,000 blocks and compares it with the maximum of all previous values. This system waits for the recovery of network security in the case of a destructive halving and cannot be manipulated.A proposal to delay Bitcoin halving in case of a sudden drop in mining difficulty was deemed insufficient by Billy Tetrud. He argued that it wouldn't detect simple difficulty stagnation or correct the cause of hashrate decline. Tetrud proposed a change that happens in a fork every 10-30 years, where the cost in Bitcoin of the security target and acquiring a unit of hashrate would be used to calculate the necessary difficulty to maintain system security. The subsidy or block size could be adjusted to attract more or fewer miners. Another proposal by Jaroslaw involved calculating the average difficulty of the last 100 retargets and comparing it with the maximum of all previous averages before executing halving. This ensures the system cannot be manipulated and waits for network security recovery in case of destructive halving. The issue of deflation in Bitcoin and its complex nature was also discussed, considering the mechanisms of monetary inflation.A proposal has been put forward to enhance the security of the Bitcoin network by introducing a new approach. This proposal suggests using a chainwork parameter instead of the current method to ensure the network's security and prevent free riders. The chainwork difference between the beginning and end of the last 210,000 block interval will be compared to previous inter-halving intervals, making it the</summary>
  </entry>
</feed>