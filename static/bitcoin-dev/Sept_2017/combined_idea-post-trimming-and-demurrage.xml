<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - idea post: trimming and demurrage</title>
  <updated>2025-10-11T02:28:56.048494+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Sept_2017/015057_idea-post-trimming-and-demurrage.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/015059_idea-post-trimming-and-demurrage.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/015055_idea-post-trimming-and-demurrage.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/015049_idea-post-trimming-and-demurrage.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/015050_idea-post-trimming-and-demurrage.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/015056_idea-post-trimming-and-demurrage.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2017/015047_idea-post-trimming-and-demurrage.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/015047.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - idea post: trimming and demurrage</title>
    <updated>2025-10-11T02:28:56.048611+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-September/015047.html" rel="alternate"/>
    <published>2017-09-26T07:50:42+00:00</published>
    <summary>Patrick Sharp, a recent computer science graduate, proposed the implementation of trimming and demurrage in Bitcoin. He argued that without some sort of limit on the maximum length or size of the blockchain, it becomes unsustainable in the long run and more centralized as it becomes unwieldy. Trimming old blocks whose transactions are now spent holds no real value and takes up real-world space that incurs cost.To address this issue, Sharp proposed limiting the blockchain length to either 2^18 blocks (slightly less than five years) or 2^19 blocks (slightly less than ten years). Each time a block is mined, the oldest block(s) beyond this limit would be trimmed from the chain, and its unspent transactions would be included in the reward of the mined block. This proposal aims to keep the costs of miners balanced with the costs of users.However, ZmnSCPxj responded by stating that demurrage is impossible in Bitcoin due to the already implemented OP_CHECKLOCKTIMEVERIFY opcode. This opcode requires that a certain block height or date has passed before an output can be spent. It can be used to make an &quot;in trust for&quot; address, where spending of that address is disallowed. ZmnSCPxj suggests putting such additional features as demurrage in a sidechain rather than on the mainchain.In response to ZmnSCPxj's suggestions, Patrick Sharp thanked everyone for their responses and withdrew his proposal for the time being. He also suggested storing the hash of the current or previous UTXOs in the block header so that pruned nodes can verify their UTXOs are accurate without having to check the full chain. Additionally, he mentioned the possibility of including a snapshot of the UTXOs every x blocks.Overall, the discussion on the Bitcoin-dev mailing list revolved around the proposal of demurrage and trimming of old blocks to ensure the sustainability and balance of the blockchain. Different viewpoints were presented, with ZmnSCPxj suggesting alternative approaches such as sidechains. Patrick Sharp acknowledged the feedback and offered additional ideas for consideration.</summary>
  </entry>
</feed>