<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Meeting Summary &amp; Logs for CTV Meeting #5</title>
  <updated>2025-10-11T02:30:21.649665+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/March_2022/020102_Meeting-Summary-Logs-for-CTV-Meeting-5.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020094_Meeting-Summary-Logs-for-CTV-Meeting-5.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020091_Meeting-Summary-Logs-for-CTV-Meeting-5.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020086_Meeting-Summary-Logs-for-CTV-Meeting-5.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020086.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Meeting Summary &amp; Logs for CTV Meeting #5</title>
    <updated>2025-10-11T02:30:21.649756+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020086.html" rel="alternate"/>
    <published>2022-03-10T11:28:55+00:00</published>
    <summary>The conversation in the communication thread revolves around the concept of Speedy Trial (ST) and its implementation in relation to CTV. ST is a short softfork attempt with `lockinontimeout=false`, and if it fails, developers decide whether to offer a UASF `lockinontimeout=true` version or not. Jeremy Rubin demonstrated the complexity of ST through a state diagram, leading to a joke about using `OP_RING` instead of implementing `OP_CTV`. Criticism of ST is discussed, highlighting concerns about miners and users having less opportunity to oppose a malevolent change imposed by miners. The trust factor of developers is also brought up, with one participant expressing distrust towards Jeremy Rubin, although acknowledging that this is subjective and off-topic.The conversation further explains that users with mining hashpower can block the initial Speedy Trial, which should prompt developers to listen to their concerns. If developers fail to do so, a counter-UASF can be written, rejecting blocks signaling for the upgrade. Clients using the initial Speedy Trial code will follow the chain with better hashpower. Therefore, users who want to resist or support a particular softfork have the ability to resist Speedy Trial and even run a counter-UASF if developers release a UASF `lockinontimeout=true` later. The conversation emphasizes the importance of understanding activation mechanisms and how users can actively resist them. In another discussion on the bitcoin-dev mailing list, Jeremy Rubin shares updates on various topics. Firstly, Sapio now has experimental Taproot support, and assistance is needed for reviewing Rust-bitcoin. Secondly, he explains the concept of Transaction Sponsors and why it doesn't have a BIP number assigned. Thirdly, James' Vaults Post is mentioned, which explores recursive CTV vaults. Fourthly, there is a conversation about adding more power to protocols and proposed solutions for infrastructure issues related to flexible covenants. Finally, there is a general discussion on naming conventions and forking, with some participants expressing concern about Speedy Trial and proposing unique names like &quot;Hot Tub Coin Machine&quot; and &quot;OP_DOTHETHING&quot;.The Bitcoin Core Tech meeting on March 8th, 2022, covered several topics. Firstly, Sapio now has experimental Taproot support, and assistance is needed for reviewing Rust-bitcoin's pull request for MuSig support. Secondly, the meeting discussed transaction sponsors and their differences from RBF/CPFP, as well as the absence of a BIP number assigned to them. The third topic was James' Vaults post, which explores the customization of vaults. Fourthly, the meeting discussed the potential dangers of adding too much power to scripts and the difficulty of generating a transition function for more flexible covenants. Finally, there was a general discussion on naming protocols and forking, with participants expressing concerns about Speedy Trial and suggesting unique names for projects.</summary>
  </entry>
</feed>