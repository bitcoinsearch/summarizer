<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Recurring bitcoin/LN payments using DLCs</title>
  <updated>2025-10-11T02:30:22.313214+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/March_2022/020071_Recurring-bitcoin-LN-payments-using-DLCs.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020069_Recurring-bitcoin-LN-payments-using-DLCs.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020065_Recurring-bitcoin-LN-payments-using-DLCs.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020061_Recurring-bitcoin-LN-payments-using-DLCs.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020057_Recurring-bitcoin-LN-payments-using-DLCs.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020050_Recurring-bitcoin-LN-payments-using-DLCs.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020037_Recurring-bitcoin-LN-payments-using-DLCs.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2022/020035_Recurring-bitcoin-LN-payments-using-DLCs.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020035.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Recurring bitcoin/LN payments using DLCs</title>
    <updated>2025-10-11T02:30:22.313294+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-March/020035.html" rel="alternate"/>
    <published>2022-03-06T20:53:55+00:00</published>
    <summary>In the context provided, the discussion revolves around the use of escrow providers and the challenges they face due to interactiveness at settlement time. PTLCs (Payment-Point Timelock Contracts) are proposed as a solution that offers non-interactive settlement, benefiting users Alice and Bob. The oracle issues attestations, which are used by Alice or Bob to complete the adaptor signature. This reduces the need for bi-directional communication during settlement, making DLC style applications more user-friendly.It is noted that the interactiveness requirements for LN (Lightning Network) are high, posing difficulties in developing applications, particularly for mobile platforms. However, PTLCs are transportable over LN, making them a viable replacement for 2-of-3 escrows.In a conversation between Chris and ZmnSCPxj, the advantages of PTLCs are emphasized. They eliminate the need for interactiveness at settlement time, improving the user experience. The oracle issues attestations, and Alice or Bob complete the adaptor signature using these attestations. Non-interactive settlement is highlighted as a significant advantage of DLC style applications.ZmnSCPxj proposes an example application where an oracle determines when a fund can be spent. A workperson completes some work, and the oracle judges if the work has been completed before compensation is made. It is suggested that this scheme can also be implemented using a simple 2-of-3 escrow, as the oracle attestation can be a partial signature. The possibility of multiple PTLCs triggered by a single oracle is also discussed.The conversation includes a link to a GitHub repository containing an old Python sapio contract that enables cancellable subscriptions functioning as a time-based autopay scheme. The email thread explores the idea of pre-approved lines of credit from a Bitcoin wallet, which can be drawn down with oracle attestations and may include locktimes for rate limiting. This scheme finds potential application in commissioning work from unbranded workpeople, where the oracle judges if the work has been completed before compensation.The discussion raises the question of whether multiple PTLCs triggered by a single oracle are the most suitable application for the proposed scheme. The context provides an overview of the scheme and its potential applications, highlighting its contextual nature.After further consideration, Chris agrees with ZmnSCPxj that the proposal for recurring payments is similar to nLocktime. To prevent malicious parties from withdrawing multiple subscriptions using oracle attestations, subsequent UTXOs can be rate-limited with nlocktimes. The use of pre-approved lines of credit from a bitcoin wallet, drawn down with oracle attestations and optional locktimes for rate limiting, is suggested as a method for implementing recurring payments.In response to ZmnSCPxj's question regarding the improvement of a certain process over 'nLockTime'd transactions, it is stated that more information about the specific process is needed for a comprehensive answer. 'nLockTime' is explained as a feature in Bitcoin transactions that allows the sender to specify a future time or block height for adding the transaction to the blockchain. Without additional details, it is challenging to compare the process being discussed with 'nLockTime' transactions.The benefits of Discreet Log Contracts (DLCs) are highlighted in the context. DLCs enable recurring subscriptions without on-chain transactions, similar to ACH in traditional finance. Users can set up DLCs with providers, allowing access to a predetermined amount of Bitcoin to be withdrawn at a specified future time. Netflix is given as an example, where an oracle represents a monthly subscription, and users have DLCs executed at the end of each month. DLCs are unilaterally funded, cancellable, and do not require Bitcoin transactions for creation. Providers can specify withdrawal limits, ensuring authorized amounts are not exceeded. The cryptographic enforcement of withdrawal limits adds an additional layer of security. Concerns about providers acting as both oracle and recipient are mitigated by the predetermined subscription amount, preventing excess fund withdrawal. Users can cancel subscriptions at any time, and providers can only steal up to one month's service fees across all customers.</summary>
  </entry>
</feed>