<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP idea: Standardised p2sh bitcoin addresses requiring an arbitrary and/or combination of keys</title>
  <updated>2025-10-13T02:49:45.387903+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Nov_2016/013330_BIP-idea-Standardised-p2sh-bitcoin-addresses-requiring-an-arbitrary-and-or-combination-of-keys.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2016/013329_BIP-idea-Standardised-p2sh-bitcoin-addresses-requiring-an-arbitrary-and-or-combination-of-keys.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-November/013329.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-November/013329.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-November/013329.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP idea: Standardised p2sh bitcoin addresses requiring an arbitrary and/or combination of keys</title>
    <updated>2025-10-13T02:49:45.387977+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-November/013329.html" rel="alternate"/>
    <published>2016-11-30T00:00:43+00:00</published>
    <summary>Erland Lewin has proposed a method to create &quot;Boolean addresses&quot; that can be redeemed by a set of keys and multi-signatures combined with logical and/or operations. The aim of this proposal is to standardize these addresses, allowing for interoperability among wallet software. By implementing a consistent way to generate a P2SH script from a given boolean address tree, wallet authors can create, sign, and share signature requests for these addresses.A Boolean address is described as a tree structure, starting at a root node. The nodes within the tree can be an &quot;and&quot; operation, an &quot;or&quot; operation, a public key, a multisig operation n-of-m with a list of public keys, or a CHECKLOCKTIMEVERIFY operation. This proposal provides flexibility for various scenarios. For example, corporations can utilize this proposal to allow signatures by &quot;A or (2 of 4 of B, C, D, E),&quot; enabling spending by either the CEO or board members with their respective keys.Additionally, individuals like Alice can redeem her address in case of key loss or compromise. She can set up her address as &quot;A or (B and 1-of-3 of C, D, E).&quot; This means that if Alice loses her key or if her cloud wallet key is compromised, she can still access her funds using a combination of keys C, D, or E.The implementation of this proposal will establish a well-defined process for generating a P2SH script based on a given boolean address tree. It will also outline how spending transactions are to be signed. Reality Keys, a platform that verifies information against real-world events, recognizes the value of this proposal in addressing pain points and suggests that its adoption by wallet authors would be beneficial. Edmund Edgar, founder of Social Minds Inc (KK), supports the proposal's sensible implementation.In conclusion, Erland Lewin's proposal offers a consistent method for creating Boolean addresses that can be redeemed by a combination of keys and multi-signatures using logical and/or operations. Its implementation will ensure standardized interoperability among wallet software while providing clear guidelines for generating P2SH scripts and signing spending transactions.</summary>
  </entry>
</feed>