<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Useful bitcoin patches...</title>
  <updated>2025-10-27T02:59:10.537183+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Aug_2011/000310_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000306_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000300_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000295_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000167_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000165_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000164_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000162_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000101_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000094_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000093_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000092_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000085_Useful-bitcoin-patches-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Useful bitcoin patches...</title>
    <updated>2025-10-27T02:59:10.537294+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000085.html" rel="alternate"/>
    <published>2011-08-05T03:01:47+00:00</published>
    <summary>On August 4, 2011, Jeff Garzik responded to a message regarding a bugfix related to a platform-specific compile fix. He asked whether he left anything out while merging the commit made by JoelKatz on July 25, 2011. Jeff was informed that there was a compile fix included in the commit which involved casting between potentially incompatible types. Although it appeared that this compile fix would not have any practical impact on the software, it was still considered important to include.The message discusses the issues with RPC servers and proposes solutions to improve their performance. The author mentions two possible paths to HTTP/1.1 persistent connections, either via threaded rpc or async I/O. However, the author suggests that based on field usage, the threaded rpc option is more stable. The only concern is whether this solution can handle a large number of incoming TCP connections without creating new threads blindly and reaching thread limits.RPC request volume in the present implementation uses a lot of socket resources due to constant disconnect/reconnect. The proposed patch aims to address this issue and provide positive impact for all production bitcoin sites using RPC. The author acknowledges that miners are experiencing these problems presently, but believes that deploying HTTP/1.1 persistent connections will make a positive impact at any site heavily using RPC.Lastly, the message briefly touches upon some other Git branches like bugfix_CreateThread_leak, getwork_dedupe, and gitignore. The author expresses interest in a dedupe branch but hasn't yet reviewed it. In the end, the author informs about moving his home computer lab setup to a new house, which may affect his availability until August 11th.In a discussion on August 04, 2011, Luke-Jr accused Jeff of neglecting to attribute the original author while rewriting bugfix_CreateThread_leak. Jeff apologized and admitted to his mistake, stating that BlueMatt had shown him how GitHub displays merges in the future. The context suggests that there was some kind of collaboration or coding effort involving multiple individuals on a platform like GitHub. It is unclear what the code snippet in question does or how it fits into a larger project.A user named Jeff has been accused of neglecting to attribute the original author for a rewritten part of bugfix_CreateThread_leak. The accusation is made in response to a message from Jeff regarding several git branches, including hub_mode, threaded_rpc, signal_blk_notify, and more. In addition to these branches, Jeff considers coinbaser, gitignore, minfee_modes, eligius_relay, eligius_sendfee, txinfo, and bitcoinuri as valid candidates for merging. All of the above-mentioned git branches are available from git://gitorious.org/~Luke-Jr/bitcoin/luke-jr-bitcoin.git.In this conversation between Luke-Jr and Matt Corallo, they discuss the issue of lowering fees for Bitcoin transactions. Luke-Jr argues that developers should not interfere with users who want to pay lower fees and go to pools willing to do business. He suggests that developers who try to control users could lead to trouble or increase awareness of other clients that don't try to control users. On the other hand, Matt Corallo believes that the issue is not about forcing users to pay anything but rather finding a solution to prevent random spamming in the chain. He argues that a carefully thought-out and implemented solution is needed instead of constantly lowering fees. Overall, the conversation highlights the ongoing debate over how best to handle transaction fees in the Bitcoin network.In a discussion about different git branches on July 10, 2011, Luke-Jr suggested several branches that he thinks should be merged. Matt Corallo did not agree with merging some of those branches because they could harm the network. He disagreed with the hub_mode branch and stated that it provides little to no advantage for miners while potentially harming the network. Similarly, he also disagreed with the eligius_relay and eligius_sendfee branches, stating that lower fees would not prevent DDoS attacks and that the fees are there to prevent users from wasting resources.Matt Corallo did find some of the branches suggested by Luke-Jr useful, including coinbaser and minfee_modes. However, he also suggested that something more generalized is needed to allow for more fee control by the users while still preventing users from sending transactions that lock their coins in limbo. He suggested that this direction could be achieved by providing the mode as an input and moving GetMinFee to QtScript since the 0.4 version was moving to Qt. Furthermore, Luke-Jr defended his suggestions, stating that other clients could gain awareness if users feel forced to pay more than necessary. He suspected that others have not changed their coinbase output to a random set because they haven't figured out how. While Matt Corallo did not agree with all of Luke-Jr's suggestions, he acknowledged that some of them could be useful.The email thread consists of updates on</summary>
  </entry>
</feed>