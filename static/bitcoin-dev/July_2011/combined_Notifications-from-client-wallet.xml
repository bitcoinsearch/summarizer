<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Notifications from client/wallet</title>
  <updated>2025-10-12T01:42:00.226280+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <author>
    <name>John Smith 2011-07-14 05:19:11 2011-07-14T05:19:11+00:00</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-07-14 09:10:42 2011-07-14T09:10:42+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2011-07-14 14:13:04 2011-07-14T14:13:04+00:00</name>
  </author>
  <link href="bitcoin-dev/July_2011/000188_Notifications-from-client-wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000187_Notifications-from-client-wallet.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000186_Notifications-from-client-wallet.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000186.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000186.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Notifications from client/wallet</title>
    <updated>2025-10-12T01:42:00.226443+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000186.html" rel="alternate"/>
    <published>2011-07-14T14:13:04+00:00</published>
    <summary>The proposal under discussion revolves around the addition of notifications to the client and wallet, with the primary aim of decoupling UI and core communication. To achieve this, the boost::signal mechanism has been put forward as a potential solution. This mechanism functions as a callback system, allowing for the independent delivery of signals from an object. Consequently, multiple other objects can listen in on an event without requiring any involvement from the emitting object.Several specific notifications have been suggested for the wallet, each serving a distinct purpose. These include balanceChanged, which would notify changes in spendable balance, transactionAdded for new transactions added to the wallet, transactionUpdated for modifications in transaction information, transactionRemoved for removed transactions, addressAdded for newly added addresses to the address book, addressUpdated for modifications in address labels or other metadata, addressRemoved for removed addresses from the address book, notification for warnings or errors occurring in wallet or network processing, and askFee for requesting user input on fees.In addition to the aforementioned notifications, the proposal also highlights the need for defining high-level information request functions for transactions. This step aims to eliminate the necessity for GUI/RPC to directly inspect wallet data structures, thus enhancing efficiency and separation of concerns.Furthermore, the proposal suggests the inclusion of network client notifications, such as numConnectionsChanged and numBlocksChanged, which would inform about changes in the number of connections and blocks respectively. Similar to wallet notifications, the network processing would also have a notification feature to handle warnings or errors.Throughout the email thread, implementation details and suggestions are discussed extensively. The authors emphasize the significance of a central notification interface to facilitate source cleanup, enabling clean separation of components and large-scale rewrites without affecting parts that are not being modified. Additionally, the proposal highlights the potential for Bitcoin to be used as a library by various programs, such as pushpoold or a block notification server, demonstrating its versatility and efficiency.</summary>
  </entry>
</feed>