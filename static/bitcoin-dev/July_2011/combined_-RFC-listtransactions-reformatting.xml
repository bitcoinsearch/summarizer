<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [RFC] listtransactions reformatting</title>
  <updated>2023-08-01T02:09:04.289142+00:00</updated>
  <author>
    <name>Amir Taaki 2011-07-17 11:53:05+00:00</name>
  </author>
  <author>
    <name>Gavin Andresen 2011-07-17 03:02:51+00:00</name>
  </author>
  <author>
    <name>Luke-Jr 2011-07-16 20:03:06+00:00</name>
  </author>
  <author>
    <name>Stéphane Gimenez 2011-07-16 19:59:07+00:00</name>
  </author>
  <author>
    <name>Luke-Jr 2011-07-16 17:14:11+00:00</name>
  </author>
  <link href="bitcoin-dev/July_2011/000208_-RFC-listtransactions-reformatting.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000204_-RFC-listtransactions-reformatting.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000198_-RFC-listtransactions-reformatting.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000197_-RFC-listtransactions-reformatting.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000196_-RFC-listtransactions-reformatting.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [RFC] listtransactions reformatting</title>
    <updated>2023-08-01T02:09:04.289142+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000196.html" rel="alternate"/>
    <summary>Using accounts for receiving funds on merchant sites is considered unsafe due to bugs and problems associated with it. Instead, a safer method involves using "listreceivedsince" called by a cron job, which outputs are parsed and placed into another table for deposit requests. Although polling "listtransactions" may be less convenient, it can also be used to receive funds. Gavin Andresen suggests fixing the output of "listtransactions" to credit coin generation transactions to a specific address or account. However, he acknowledges that web service operators may not prioritize changing the output as it could require code changes. Instead, Gavin recommends prioritizing the fix for performance problems with "getbalance" and "listtransactions" when dealing with large amounts of transactions and implementing push-notification of coins received to accounts.In a conversation between Stéphane Gimenez and an unknown person in July 2011, Stéphane proposes a solution to associate generation txouts with the correct addresses and accounts. The GitHub link he shares is broken, but he mentions having a workable solution. Stéphane suggests adding wallet categories for all transactions and considers categorizing additions to wallets as "receive" transactions regardless of transaction type. Alternatively, a "type" field could be added with values of "credit" or "debit" to allow for more categories in the future. They also note that "move" is a positive amount but does not change the wallet's actual value.In an email, Stéphane proposes a new approach to associate generation txouts with the correct addresses and accounts. He includes a link to his previous mail detailing the proposal. Stéphane suggests categorizing all additions to wallets as "receive" transactions or adding a "type" field with values of "credit" or "debit" for more flexibility in categorization. Stéphane agrees on the importance of an official API guide and suggests including generated amounts in {list, get}receivedby*. However, he acknowledges that his patch does not address this issue yet.The proposed change involves adding new keys to transactions to maintain a standard format for similar types of entries. Wallet additions are categorized as "receive" transactions, and generated coins have an additional key labeled "generation". All transactions now have a "status" key with values such as "orphan", "validating", "processing", "confirmed", or "expired" to indicate their stage in the transaction process. These changes aim to address issues with webservices being unaware of generated transactions. By maintaining a standard category/format for similar entries, this problem should be resolved.</summary>
    <published>2011-07-17T11:53:05+00:00</published>
  </entry>
</feed>
