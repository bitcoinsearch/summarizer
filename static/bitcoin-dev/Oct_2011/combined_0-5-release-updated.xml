<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - 0.5 release updated</title>
  <updated>2025-10-18T02:27:21.132392+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Oct_2011/000710_0-5-release-updated.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000709_0-5-release-updated.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2011/000707_0-5-release-updated.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000707.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000707.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000707.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000707.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000707.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000707.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000707.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000707.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - 0.5 release updated</title>
    <updated>2025-10-18T02:27:21.132504+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-October/000707.html" rel="alternate"/>
    <published>2011-10-29T08:09:06+00:00</published>
    <summary>The discussion revolves around the implementation of a GUI option in the bitcoin-qt.pro, while waiting for a more advanced build system. One suggestion was to use qmake for the daemon build, but it was pointed out that qmake doesn't offer any advantages for non-qt software. Therefore, sticking with a makefile was deemed better. Another suggestion was to create a bash script that wraps both builds and converts command line flags. The main goal is to enhance user convenience.On October 28, 2011, Gavin Andresen sought assistance in debugging the 'gitian' cross-compile for Windows builds on Bitcoin's Github page. This issue was related to Ubuntu, and Andresen suggested using an alternative solution. He expressed his desire to have a .pro file to compile bitcoind, as maintaining multiple makefiles proved to be difficult and error-prone. He proposed implementing a GUI=0/1 option until a more efficient system like automake/autoconf is established.The final release of Bitcoin version 0.5 has not been launched yet due to the developers' concerns regarding the security of Bitcoin binary builds, as well as the recent transition to Qt, which necessitates a change in the build process. Linux builds are already well-established using the Gitian trusted build process. However, Windows builds have proven to be challenging, and the help of a GCC expert is required to debug the Gitian cross-compile. In light of the lack of support for compiling bitcoin-qt/bitcoind with Visual Studio, there may be a decision to remove src/makefile.vc and solely support the MinGW toolchain.Regarding Mac builds, the 0.4 release had some issues, but the developer aims to resolve them soon by recompiling everything and ensuring that Mac binaries are available promptly. Individuals who are willing to assist with testing, particularly those with a 32-bit Intel Mac running 10.5, are welcome. Furthermore, the developer is keen on having a .pro file for compiling bitcoind to eliminate the time-consuming and error-prone process of managing multiple makefiles.</summary>
  </entry>
</feed>