<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BitcoinQt eating 100% CPU</title>
  <updated>2025-10-23T02:35:10.651919+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Feb_2012/001245_BitcoinQt-eating-100-CPU.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2012/001244_BitcoinQt-eating-100-CPU.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2012/001243_BitcoinQt-eating-100-CPU.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2012/001235_BitcoinQt-eating-100-CPU.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BitcoinQt eating 100% CPU</title>
    <updated>2025-10-23T02:35:10.652004+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001235.html" rel="alternate"/>
    <published>2012-02-23T20:33:41+00:00</published>
    <summary>In a conversation on February 23, 2012, Gavin Andresen proposed a solution for the Mac version of Bitcoin-Qt that was not registering itself as a bitcoin URL handler. He suggested not launching the ipcThread in order to address this issue. However, there was concern about whether this would prevent the user from registering it. No further information was provided regarding the outcome of this discussion.The culprit for Bitcoin-Qt using excessive CPU was identified as line 31 in qtipcserver.cpp. Other users have reported similar issues, and one user was able to reproduce the problem on their Mac. Since the Mac version of Bitcoin-Qt does not register itself as a bitcoin URL handler, one possible solution is to not launch the ipcThread in the 0.6 release, according to Gavin Andresen.The sender of an email, Michael Gr√∏nager, addressed an issue they faced with Bitcoin-Qt. After building the latest source of the program using qt-creator on MacOSX 10.7.3 and changing the BDB version to 5.1, the program was consuming 100% CPU after initial block chain download. While the activity in debug.log appeared normal, sampling showed that most of the time in each thread was spent on various operations. The only line that seemed strange was line 31 in qtipcserver.cpp. The sender believed that this should not consume CPU either. After further investigation, the sender found that line 31 was indeed the culprit and fixed the issue by inserting `ipcShutdown()` into the ipcThread. As a result, Bitcoin-Qt now runs smoothly with around 0.9% CPU usage. The sender concluded the email by asking if anyone else had experienced similar issues.The writer of the email downloaded the latest version of bitcoin-qt (0.6 rc1) and built it on MacOSX 10.7.3 using qt-creator. However, despite there being no issues with debug.log activity, the application was using 100% CPU. The majority of time in each thread was spent on several processes. The writer found line 31 in qtipcserver.cpp to be the only strange occurrence and asked if others had encountered this issue before.</summary>
  </entry>
</feed>