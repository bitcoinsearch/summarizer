<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pre-emptive commit/reveal for quantum-safe migration (poison-pill)</title>
  <updated>2025-07-01T05:49:46.739553+00:00</updated>
  <author>
    <name>conduition 2025-06-09 16:29:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pre-emptive commit/reveal for quantum-safe migration (poison-pill)</title>
    <updated>2025-07-01T05:49:46.739585+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/ejSZyf9UmYgOm9D40yAcKNk03pKBLk82dAmdgjq0xNGRZK4R2jd0DcbZqiXoSiYNBBzMpGcezGwTe3wLN96VCl7R0yqPbChWlsKWTphUqUw=@proton.me/T/#mcd1e09e21e9dbca5639580c3826374e1793eb9e9" rel="alternate"/>
    <summary>The conversation revolves around evaluating a proposed solution for managing transaction (TX) data on-chain in the context of Bitcoin development. The original proposal suggests duplicating TX data on-chain, which is met with skepticism due to potential technical complications. An alternative suggestion involves committing only the witness transaction identifier (wTXID) at an initial stage rather than revealing the entire transaction. This approach aims to simplify the process by focusing on initiating a challenge phase to determine the oldest committed spending transaction without necessitating the full transaction data upfront. However, implementing such a system would require nodes to maintain a database for tracking the necessary information to validate new spending rules, adding complexity.

Further analysis contrasts this method with Martin's commit/reveal solution, highlighting several advantages of the latter. Martin's approach eliminates the need for nodes to independently track commitments, reveals, and counter-reveals outside of the Unspent Transaction Output (UTXO) set, offering a more space-efficient solution without the need for a complex "counter reveal" stage. Despite these technical discussions, concerns are raised about the practicality of protecting exposed public keys through the commit/reveal protocol. For effective protection against quantum attacks, a pubkey owner must take several proactive steps, including signing a transaction that spends all UTXOs associated with the exposed pubkey, committing to this transaction via an on-chain announcement, and updating this commitment for any change in UTXOs. This level of active preparation may not be feasible or desirable for all users, particularly those unable to engage with quantum-safe measures or otherwise protect their funds. The critique suggests that without such preemptive actions, addresses with exposed public keys are likely vulnerable, indicating a broader issue beyond the technical specifics of transaction management proposals.</summary>
    <published>2025-06-09T16:29:00+00:00</published>
  </entry>
</feed>
