<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CTV + CSFS: a letter</title>
  <updated>2025-07-01T04:05:38.230785+00:00</updated>
  <author>
    <name>Sjors Provoost 2025-06-14 15:58:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CTV + CSFS: a letter</title>
    <updated>2025-07-01T04:05:38.230819+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CALiT-Zr3KO0fw1_DCpDVvA1Z1aLrvM-HFtvdsyLKhXxWvR=hvA@mail.gmail.com/T/#mf01611b9335160c8fd5d75fb0ae43dc7ae9eafd9" rel="alternate"/>
    <summary>The email discussion highlights the technical aspects and implications of implementing vaults using CTV (CheckTemplateVerify) and OP_CCV (a proposed opcode) in the Bitcoin protocol. The conversation points out that while CTV facilitates the creation of vaults, which are a form of secure storage for Bitcoin, it necessitates that users manually transfer coins into these vaults due to its commitment to specific amounts. This mechanism inherently limits the functionality by preventing direct receipt of arbitrary amounts at a vault address without encountering issues related to the commitment to a CTV hash that cannot be satisfied.

Moreover, the dialogue touches upon the operational intricacies involved with using CTV for vaults, particularly regarding what users must back up after each deposit. It suggests that the deposit transaction ID might suffice for recovery purposes, albeit with some effort. In contrast, OP_CCV is introduced as offering a more versatile solution that allows receiving any amount directly to a vault address without the need for backups post-initial setup, provided the seed and a descriptor-like component are preserved.

The email also shares a link to a demo functional test for an OP_CCV vault, indicating ongoing experimentation with alternative approaches ([demo functional test](https://github.com/bitcoin/bitcoin/pull/32080)). However, it acknowledges a significant challenge in the adoption of such technologies: the absence of a potentially interoperable standard. The current reliance on bespoke software for these demonstrations underscores the necessity of integrating simple vault schemes with the already established output descriptor paradigm. The discussion concludes by emphasizing the long-term effort required to develop new methods for ensuring vault-aware wallets are interoperable, hinting at the complexities involved in enhancing Bitcoin's security features through these innovative mechanisms.</summary>
    <published>2025-06-14T15:58:00+00:00</published>
  </entry>
</feed>
