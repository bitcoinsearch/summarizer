<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Descriptors using H as a hardened indicator</title>
  <updated>2025-07-01T06:01:26.716965+00:00</updated>
  <author>
    <name>Ava Chow 2025-06-23 18:37:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Descriptors using H as a hardened indicator</title>
    <updated>2025-07-01T06:01:26.716998+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/848d3d4b-94a5-4e7c-b178-62cf5015b65f@achow101.com/T/#u#mf0e53b6154ce48a6018a17df3d5df3ba6b2332b9" rel="alternate"/>
    <summary>Recently, there has been a clarification regarding BIP 380, which indicates that alongside `'` and `h`, `H` can also be utilized as a hardened indicator in derivation paths. This update came to light following the identification of a test that incorrectly classified `H` as an invalid hardened indicator. A subsequent pull request corrected this by reassigning the test to the valid category, ensuring consistency with BIP 380's specifications. Despite this amendment, debates have emerged about whether the adjustment aligns with the broader expectations and implementations within the Bitcoin ecosystem.

Bitcoin Core, a pivotal component of the Bitcoin network, currently does not support `H` as a hardened indicator, mirroring the absence of such implementation in rust-miniscript. This gap has sparked discussions on whether it would be more appropriate to amend BIP 380 to reflect the current state of implementations rather than adjusting core projects to accommodate this specification. A link to an open pull request on Bitcoin Core ([here](https://github.com/bitcoin/bitcoin/pull/32788)) highlights ongoing deliberations around integrating support for `H` as a hardened indicator or revisiting the BIP itself to possibly revise its contents based on practical implementation challenges and existing capabilities.

The discourse further extends to the compatibility of descriptor implementations with the `H` indicator. Specifically, the community seeks to understand whether any existing descriptor implementations are capable of emitting or accepting descriptors that utilize `H` for indicating hardened paths. The primary concern revolves around ensuring interoperability among different implementations, where the ability to parse descriptors across various platforms becomes crucial. Although some libraries extend BIP 32 utilities to include `H`, the prevalence and acceptance of this practice among descriptor implementations remain uncertain. This inquiry emphasizes the need for a cohesive approach to hardened indicators, ensuring that enhancements to Bitcoin's technical standards foster greater compatibility and user confidence.</summary>
    <published>2025-06-23T18:37:00+00:00</published>
  </entry>
</feed>
