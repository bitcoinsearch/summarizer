<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pre-emptive commit/reveal for quantum-safe migration (poison-pill)</title>
  <updated>2025-07-01T05:52:22.807062+00:00</updated>
  <author>
    <name>Tim Ruffing 2025-06-03 19:49:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pre-emptive commit/reveal for quantum-safe migration (poison-pill)</title>
    <updated>2025-07-01T05:52:22.807115+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/ejSZyf9UmYgOm9D40yAcKNk03pKBLk82dAmdgjq0xNGRZK4R2jd0DcbZqiXoSiYNBBzMpGcezGwTe3wLN96VCl7R0yqPbChWlsKWTphUqUw=@proton.me/T/#m1ea6f4d1e074da6ab4fddaef9eb6506a655c8c0d" rel="alternate"/>
    <summary>The discussion revolves around a potential attack vector within the Bitcoin network, specifically targeting the unspent transaction outputs (UTXOs). The attacker initiates the process by legitimately acquiring some UTXOs. Following this acquisition, these UTXOs are then committed to a transaction. The strategy involves waiting for a network fork to occur. After the fork has taken place, the original UTXOs are spent, directed towards a specific recipient. The crux of the attack lies in the subsequent action: executing a double-spend using the commitment made prior to the fork. This maneuver exploits the temporal window created by the fork to undermine the integrity of the transaction ledger.

This technique underscores a critical vulnerability associated with network forks, where the immutable nature of blockchain transactions can be challenged. By leveraging the pre-fork commitment, the attacker essentially creates a scenario where the same UTXOs are used in two separate transactions, thus violating the principle of unspent transaction output uniqueness. This attack not only highlights the technical nuances of managing UTXOs within the Bitcoin ecosystem but also raises significant concerns over the security measures in place to prevent such malicious activities following a network fork.</summary>
    <published>2025-06-03T19:49:00+00:00</published>
  </entry>
</feed>
