<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP39 Extension for Manual Seed Phrase Creation</title>
  <updated>2025-07-01T05:38:14.291270+00:00</updated>
  <author>
    <name>Russell OConnor 2025-06-04 17:45:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP39 Extension for Manual Seed Phrase Creation</title>
    <updated>2025-07-01T05:38:14.291303+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CADXQin4VbtvyWDGYLJB0HyJ2+Eai-01CKt6J6UzXM9qtdGJbuw@mail.gmail.com/T/#m80becea51e35f61d583e3c4cd2adf370351109fc" rel="alternate"/>
    <summary>In the realm of cryptocurrency security, particularly within Bitcoin's development community, there is an ongoing debate about the methods used for generating and verifying the security elements such as public keys and addresses from a master seed. A key point in this discussion is the ability to cross-verify the derivation of these elements using hardware from various manufacturers, which contrasts significantly with evaluating the quality of the initial random generation process. This latter aspect has raised concerns since it largely relies on internal mechanisms of devices, like the use of noisy transistors, which might not offer sufficient transparency for some users' preferences.

To address these concerns, there exists a Bitcoin Improvement Proposal (BIP), specifically BIP-93, also known as codex32. This proposal outlines a method for creating a master secret format that can be computed by hand. Despite the cumbersome nature of manually computing the checksum required by BIP-93 — a notable pain point compared to the simpler checksum calculation in BIP-39 — BIP-93's checksum offers significant advantages. One of the most critical benefits is its role as an error-correcting code, which not only allows for the detection but also the correction of errors and erasures within the data. This feature notably enhances the resilience and reliability of the cryptographic process involved.

Furthermore, BIP-93 introduces the possibility of using an untrusted computer to repair a codex32 string without compromising the secrecy of the master secret or any shared secrets. This capability adds a layer of practicality to the proposal, ensuring that even if one must resort to digital means for error correction, the security of their information remains intact. This aspect of BIP-93 underscores a significant advancement in the effort to marry the need for robust, error-tolerant cryptographic processes with the desire for transparency and user control in the generation and maintenance of cryptocurrency security parameters.</summary>
    <published>2025-06-04T17:45:00+00:00</published>
  </entry>
</feed>
