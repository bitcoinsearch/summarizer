<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Scaling Lightning Safely With Feerate-Dependent Timelocks</title>
  <updated>2025-10-11T02:26:08.540304+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Dec_2023/022247_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022243_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022246_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022242_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022241_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022236_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022239_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022238_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022228_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022229_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022225_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022198_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022191_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022247.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Scaling Lightning Safely With Feerate-Dependent Timelocks</title>
    <updated>2025-10-11T02:26:08.540398+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022247.html" rel="alternate"/>
    <published>2023-12-30T03:20:37+00:00</published>
    <summary>The discourse among Bitcoin developers is focused on the implementation of Feerate-Dependent Timelocks (FDTs) and their potential impact on the network. Boris Nagaev's initial proposition that miners offer a fee discount for out-of-band payments to increase earnings through faster transactions has been met with skepticism due to the 'free rider' problem, where non-discounting miners could ultimately benefit more. This could lead to adjustments in contract protocols using FDTs or miners exiting the market.
Eric Voskuil raises concerns about the threat to Bitcoin's decentralization and censorship resistance from out-of-band fee payments, stressing the importance of maintaining in-band fees for transaction security. A technical challenge associated with FDTs involves pruned nodes not having median feerate information post-upgrade, potentially affecting new consensus rule enforcement. A proposed workaround is to have upgraded nodes gather new median feerates and enforce FDT rules only when data is available, advocating cautious user strategies during transition.
John highlights that Forward-Dated Transactions rely on the alignment of timelock satisfaction windows to reduce dishonest mining and suggests that consecutive aligned windows can balance security against latency. The discussion includes the idea of a standardized global window size for simplifying verification processes and improving efficiency.
Antoine and John provide insight into the specifics of FDTs, explaining that transactions must wait for a qualifying aligned window before being included in the blockchain, assuming miners behave honestly. They also discuss the assumption that transactions with lower fee rates will be mined successfully during these windows.
Separately, the debate covers the proposal of FDTs to address issues such as congestion by adjusting transaction inclusion based on block fee rates, aiming to prevent &quot;forced expiration spam&quot; attacks. The FDT mechanism incorporates parameters like 'feerate_value_bound,' 'window_size,' and 'block_count' to delay confirmations if median fee rates exceed certain bounds. While rooted in bip68 and bip113, enhancements are suggested for better control during high-fee periods. In the context of the Lightning Network, pre-signed transactions could be deferred if fee conditions aren't met, and modifications to the bip341 annex could allow individual HTLC outputs within a single transaction to have varying FDT settings.
Further considerations include a 'claim_grace_period' to counteract fee-rate races and a 'number_of_windows' parameter that would increase storage requirements but is deemed feasible. The dialogue encapsulates optimism about FDTs mitigating vulnerabilities from congestion, enhancing security while maintaining capital efficiency, and offering protection against fee manipulation by dishonest miners. Despite some attack vectors persisting, FDTs are seen as raising the difficulty for attackers without guaranteeing absolute security. Continuous innovation is emphasized for addressing network congestion and improving the safety and protocols of the Bitcoin and Lightning Networks.</summary>
  </entry>
</feed>