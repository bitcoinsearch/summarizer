<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Altruistic Rebroadcasting - A Partial Replacement Cycling Mitigation</title>
  <updated>2023-12-23T01:53:54.167196+00:00</updated>
  <author>
    <name>Peter Todd 2023-12-22 14:01:28+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-12-21 21:59:04+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-12-17 10:57:32+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-12-15 22:29:22+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-12-09 10:08:56+00:00</name>
  </author>
  <link href="bitcoin-dev/Dec_2023/022224_Altruistic-Rebroadcasting-A-Partial-Replacement-Cycling-Mitigation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022221_Altruistic-Rebroadcasting-A-Partial-Replacement-Cycling-Mitigation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022194_Altruistic-Rebroadcasting-A-Partial-Replacement-Cycling-Mitigation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022192_Altruistic-Rebroadcasting-A-Partial-Replacement-Cycling-Mitigation.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022188_Altruistic-Rebroadcasting-A-Partial-Replacement-Cycling-Mitigation.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Altruistic Rebroadcasting - A Partial Replacement Cycling Mitigation</title>
    <updated>2023-12-23T01:53:54.167251+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022188.html" rel="alternate"/>
    <summary>The discourse on Bitcoin Improvement Proposal (BIP) 157 and its effectiveness highlights that the protocol operates well based on practical experiences. Rebroadcasting transactions is considered an additional security layer where even a single node's participation suffices for functionality. Consistency in mempool minimum fees across nodes has been observed, with deviations within 1%, despite differences in their mempool sizes. This reflects a steady supply/demand curve for transaction fees.

Replacement attacks, where attackers use the same unspent transaction outputs (UTXOs) to displace multiple victim transactions, are addressed by BIP125 rules. These rules require incremental fees for each transaction replacement, thus financially burdening the attacker. The effectiveness of such attacks is further diminished when targeting multiple victims simultaneously, as it reduces the attack's impact due to the distribution of information across nodes. For instance, if an attacker targets two different victim transactions, the likelihood of both being cycled out by half of the altruistic rebroadcasting nodes is low, rendering the attack ineffective.

Concerns have been raised about the security model for time-sensitive second-layer networks, particularly regarding the determination of global mempool minimum fees and adversaries exploiting this system. The conversation also discussed the potential for adversaries to broadcast the same UTXO amount under various transaction IDs, consuming all altruistic bandwidth. Although rate-limitation per UTXO was considered, it brings the risk of impacting legitimate transactions. A long-term solution involves fixing replacement cycling through techniques such as eliminating package malleability and adopting self-contained fee-bumping reserve UTXOs, as detailed in a Linux Foundation mailing list post.

The discussion around local replacement caches suggests that such mechanisms might not be necessary since altruistic entities could provide caching services, managing transaction broadcasts based on minimum fee thresholds. BIP-133 feefilter is highlighted as a tool enabling nodes to set fee rate thresholds to avoid receiving low-fee transactions. Even with significant financial resources, an attacker's impact may be limited due to P2P bandwidth constraints and the cost-effectiveness of storing a replacement database in RAM.

A proposal from a GitHub issue suggests implementing a local replacement cache to maintain transactions meeting current fee requirements, highlighting concerns for full-nodes with limited storage facing moderate liquidity attacks. Periodic altruistic rebroadcasting could become vulnerable to sybil attacks or malicious squatting. Furthermore, discrepancies in rebroadcast traffic and minimum fee rates could result in bandwidth wastage. In cases involving medium- to high-liquidity attackers, existing mitigation efforts might fall short, leading to concurrent spending issues and compromising the integrity of multi-party time-sensitive protocols.

Finally, to counter replacement cycling attacks, a method for third parties to monitor and rebroadcast original transactions replaced in the attack cycle is suggested. While this approach requires development work and coordination among interested parties, it remains feasible and potentially cost-effective. Miners could be incentivized to participate in rebroadcasting to capture profitable transactions. However, limitations exist in Bitcoin Core's transaction propagation which can be improved by the Transaction Announcements Reconciliation BIP, enhancing synchronization of mempools across the network.

For further exploration of these topics, readers are directed to Peter Todd's domain and the provided references, including the BIP-133 feefilter mechanism on GitHub and the GitHub issue discussing local replacement caches.</summary>
    <published>2023-12-22T14:01:28+00:00</published>
  </entry>
</feed>
