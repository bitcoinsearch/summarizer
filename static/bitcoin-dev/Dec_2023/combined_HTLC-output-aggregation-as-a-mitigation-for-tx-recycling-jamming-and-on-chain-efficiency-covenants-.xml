<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - HTLC output aggregation as a mitigation for tx recycling, jamming, and on-chain efficiency (covenants)</title>
  <updated>2025-09-25T23:07:36.397734+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Dec_2023/022218_HTLC-output-aggregation-as-a-mitigation-for-tx-recycling-jamming-and-on-chain-efficiency-covenants-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022197_HTLC-output-aggregation-as-a-mitigation-for-tx-recycling-jamming-and-on-chain-efficiency-covenants-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022189_HTLC-output-aggregation-as-a-mitigation-for-tx-recycling-jamming-and-on-chain-efficiency-covenants-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2023/022180_HTLC-output-aggregation-as-a-mitigation-for-tx-recycling-jamming-and-on-chain-efficiency-covenants-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022093_HTLC-output-aggregation-as-a-mitigation-for-tx-recycling-jamming-and-on-chain-efficiency-covenants-.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022218.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - HTLC output aggregation as a mitigation for tx recycling, jamming, and on-chain efficiency (covenants)</title>
    <updated>2025-09-25T23:07:36.397822+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022218.html" rel="alternate"/>
    <published>2023-12-21T13:34:36+00:00</published>
    <summary>In a detailed examination of the security and functionality of the Lightning Network (LN) within Bitcoin's financial ecosystem, programmers Antoine and Johan engage in a technical discourse exploring potential vulnerabilities and solutions. The focus lies on the new covenant mechanism proposed as part of Bitcoin's Eltoo update, which simplifies LN transactions by collapsing multiple Hash Time-Locked Contracts (HTLCs) into a single output. This mechanism requires a user to provide a preimage and signature to spend an aggregated HTLC output, which can represent numerous individual HTLC payouts within standard transaction relay limits. A revelation made during this conversation is that counterparty attacks could occur through partial preimage revelation during transactions, enabling the replacement of legitimate network transactions with high-fee, low-value spends that lead to double-spending.
Antoine elaborates on an attack scenario involving Alice and Bob, where Bob could steal a larger HTLC payout by repeatedly replacing Alice's transactions with his own that carry higher fees. Such attacks exploit network mempool congestion, delaying the confirmation of malicious transactions. Antoine suggests that simply implementing self-adjusting fees will not suffice; instead, he proposes adding a sliding delay to HTLC timelocks based on block feerate to thwart attackers. The discussion also ventures into how witness size growth in a taproot-world scenario could be managed and considers efficient Script-level testing of partial set membership as a solution.
Further discussions involve the security implications of not broadcasting a revoked state in the Eltoo protocol, as raised by Antoine, and Johan's concern about managing an exponential growth in state combinations resulting from this vulnerability. They delve into the practical aspects of addressing these complexities, emphasizing the need for strategies to maintain system integrity.
The blog post transitions to discussing transaction recycling and slot jamming attacks, which are enabled by changes in HTLC second-level transactions for anchor channel types. It now allows additional fees to be added without invalidating previous signatures. The aggregation of HTLC outputs, while beneficial for reducing fee-bumping reserve requirements, introduces concerns about malleability and the depletion of value through excessive miners' fees. Segregating HTLC claims into separate outputs and introducing covenants might be a viable mitigation strategy. Other considerations include the current protocol limit affecting long-term payment throughput on the LN and the use of taproot branches to maintain near-constant size for claimed offered HTLCs. An exploration is made regarding the use of advanced cryptosystems to enhance scalability and security, despite trimmed HTLCs due to dust limits.
For further insights, the email refers readers to additional resources including GitHub repositories, commits demonstrating test attacks, and scholarly discussions. This comprehensive analysis underscores the importance of understanding not only the technical aspects but also the game-theoretical implications of cryptocurrency protocols to safeguard against potential threats to transaction processes on the Lightning Network.</summary>
  </entry>
</feed>