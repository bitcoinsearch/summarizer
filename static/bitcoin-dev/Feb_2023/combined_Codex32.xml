<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Codex32</title>
  <updated>2025-09-26T09:57:18.626602+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m8ff1cb1e787e7c205b7d247afbf08c981d2a4e80">
      <author>[bitcoin-dev] Codex32 Russell O'Connor</author>
      <timestamp>2023-02-16T02:16:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Codex32 Russell O'Connor" parent_id="mailing-list-2023-02-m8ff1cb1e787e7c205b7d247afbf08c981d2a4e80" anchor="md639728368c597362a9e46f7908f60dc5c8e31f6">
      <author>Pavol Rusnak</author>
      <timestamp>2023-02-16T11:50:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="Pavol Rusnak" parent_id="mailing-list-2023-02-md639728368c597362a9e46f7908f60dc5c8e31f6" anchor="mef9d26de722f9de512ea6fb02cdf11e9a60d2ec7">
      <author>Andrew Poelstra</author>
      <timestamp>2023-02-16T13:49:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="3" position="3" reply_to="Andrew Poelstra" parent_id="mailing-list-2023-02-mef9d26de722f9de512ea6fb02cdf11e9a60d2ec7" anchor="m3b9e53c32ad41df317269a47261f2f90f6eeff72">
      <author>David A. Harding</author>
      <timestamp>2023-02-19T20:13:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="4" position="4" reply_to="David A. Harding" parent_id="mailing-list-2023-02-m3b9e53c32ad41df317269a47261f2f90f6eeff72" anchor="m4a08e76b7cae1296c4f0a44db1aabf5714d4c7ed">
      <author>Andrew Poelstra</author>
      <timestamp>2023-02-19T22:12:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="5" position="5" reply_to="Andrew Poelstra" parent_id="mailing-list-2023-02-m4a08e76b7cae1296c4f0a44db1aabf5714d4c7ed" anchor="mde7124ab554bee582a75971835d07451b29502d5">
      <author>Christopher Allen</author>
      <timestamp>2023-02-19T23:05:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="5" position="6" reply_to="Andrew Poelstra" parent_id="mailing-list-2023-02-m4a08e76b7cae1296c4f0a44db1aabf5714d4c7ed" anchor="mcf36860f9c00c6be09b71499c10787aebfbf5602">
      <author>Russell O'Connor</author>
      <timestamp>2023-02-20T00:52:00.000Z</timestamp>
    </message>
    <message id="msg_8" depth="1" position="7" reply_to="[bitcoin-dev] Codex32 Russell O'Connor" parent_id="mailing-list-2023-02-m8ff1cb1e787e7c205b7d247afbf08c981d2a4e80" anchor="m5308f5a55be3d9dab21b5583076437ef28ab7db8">
      <author>Andrew Poelstra</author>
      <timestamp>2023-02-20T18:44:00.000Z</timestamp>
    </message>
    <message id="msg_9" depth="2" position="8" reply_to="Andrew Poelstra" parent_id="mailing-list-2023-02-m5308f5a55be3d9dab21b5583076437ef28ab7db8" anchor="ma348fcade36558580ca7a872f1f6a9a58f934c5b">
      <author>Pavol Rusnak</author>
      <timestamp>2023-02-20T18:48:00.000Z</timestamp>
    </message>
    <message id="msg_10" depth="5" position="9" reply_to="Andrew Poelstra" parent_id="mailing-list-2023-02-m4a08e76b7cae1296c4f0a44db1aabf5714d4c7ed" anchor="mad85dfaf2882e974b9552b71add3892b459e0b5e">
      <author>Peter Todd</author>
      <timestamp>2023-02-22T16:29:00.000Z</timestamp>
    </message>
    <message id="msg_11" depth="4" position="10" reply_to="David A. Harding" parent_id="mailing-list-2023-02-m3b9e53c32ad41df317269a47261f2f90f6eeff72" anchor="m00d97fa10a0f23f21f0b8025c0e88d2cee72c7f3">
      <author>Russell O'Connor</author>
      <timestamp>2023-02-22T17:24:00.000Z</timestamp>
    </message>
    <message id="msg_12" depth="6" position="11" reply_to="Peter Todd" parent_id="mailing-list-2023-02-mad85dfaf2882e974b9552b71add3892b459e0b5e" anchor="md992347ecf832fdd63c10790f1e52933c231c34c">
      <author>Russell O'Connor</author>
      <timestamp>2023-02-22T19:01:00.000Z</timestamp>
    </message>
    <message id="msg_13" depth="7" position="12" reply_to="Russell O'Connor" parent_id="mailing-list-2023-02-md992347ecf832fdd63c10790f1e52933c231c34c" anchor="m1c11a86d9ff290737993345b19ed551284da7e6c">
      <author>Russell O'Connor</author>
      <timestamp>2023-02-23T03:30:00.000Z</timestamp>
    </message>
    <message id="msg_14" depth="8" position="13" reply_to="Russell O'Connor" parent_id="mailing-list-2023-02-m1c11a86d9ff290737993345b19ed551284da7e6c" anchor="m4e294754a3576f25e98fe4065157c2cb8e097dc4">
      <author>Russell O'Connor</author>
      <timestamp>2023-02-23T16:36:00.000Z</timestamp>
    </message>
    <message id="msg_15" depth="8" position="14" reply_to="Russell O'Connor" parent_id="mailing-list-2023-02-m1c11a86d9ff290737993345b19ed551284da7e6c" anchor="m0c0a866bcba2adc14e651df27b76d7e2c4f47461">
      <author>Russell O'Connor</author>
      <timestamp>2023-02-23T18:26:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Feb_2023/021504_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021503_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021502_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021501_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021500_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021498_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021495_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021494_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021492_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021490_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021489_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021488_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021471_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021470_Codex32.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2023/021469_Codex32.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021469.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Codex32</title>
    <updated>2025-09-26T09:57:18.628221+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-February/021469.html" rel="alternate"/>
    <published>2023-02-23T18:26:17+00:00</published>
    <summary>The Codex32 project introduces innovative methods for verifying the integrity of shares and seeds while maintaining security. One approach is through 2 character quick checks, which accumulate BCH guarantees as they are performed. Following the prescribed order of these checks allows for quicker error detection. Additionally, a mod N = 0 checksum can be computed by hand to verify shares, and it is suggested that Shamir's secret sharing shards can share the same checksum. Worksheets are provided to evaluate checksums of different sizes.An email conversation discusses the possibility of using a &quot;quick check&quot; to independently verify shares without a computer, with a minimum size of 2 characters recommended. The difference between using an addition table/volvelle and a specific table/volvelle for 1 character quick checks is minimal. There is also consideration of creating a mod N = 0 checksum as a simpler approach. The project enables the verification of shares without a computer, and a specialized worksheet could facilitate the process. While small checksums are not foolproof, a relatively easy procedure with a low chance of error is preferred over a complex one.Codex32 is a protocol designed for paper recollection without electronics, ensuring the privacy and safety of shares. It does not support nested SSSS but allows for using one share as the secret for the next level. Storing version information for wallets using implicit BIP32 paths in metadata is recommended. It is also advised to store descriptor data alongside shares. Hardware wallets provide practical protection by isolating secrets. Codex32 addresses potential compromise vectors, reducing risk.A new proposal suggests a method for verifying individual shares without a computer. This involves using a mod N = 0 checksum or generating shares with small checksums, which can be verified manually. Updates to the draft text have been discussed in an email conversation, and individuals have been thanked for their feedback. A pull request for the new scheme was opened on February 15, 2023. Andrew Poelstra suggests the need for a MAC to prevent attacks on Bitcoin seed phrases.Overall, Codex32 offers innovative methods for verifying shares and seeds while maintaining security. The project provides options for quick checks, mod N = 0 checksums, and the use of Shamir's secret sharing shards. These verification methods can be performed manually, making them accessible to users without relying on computers. The protocol also addresses potential compromise vectors and provides practical protection through hardware wallets. Ongoing discussions and updates demonstrate the project's commitment to improving and refining its methods.Codex32 is a new seed-sharing scheme that allows for the backup and restoration of a hierarchical deterministic wallet's master seed using Shamir's secret sharing. It offers advantages over SLIP-0039, such as a longer checksum, more compact encoding, and readable metadata. The scheme uses the bech32 alphabet and is designed for hand computation. It supports splitting secret data into up to 31 shares, resembling Bech32 strings.One of the main benefits of Codex32 is the ability to independently verify the integrity of each share without a computer. This allows users to perform their recollection privately using pen and paper, ensuring the accuracy of their backup. Codex32 does not natively support nested SSSS or dummy wallets but does allow for version information storage.In a discussion about the new BIP proposal, concerns were raised about the potential for deliberate modification of a recovery code, leading to fraudulent activities. However, there is no way to prevent such an attack without compromising the properties of the code.The Codex32 format uses uppercase alphabets and numbers to reduce the size of QR codes. Lowercase letters are converted into a two-byte value, increasing QR code size. By using only uppercase alphabets and numbers, QR codes can be compressed and their efficiency improved. Superior QR codecs provided by Blockchain Commons or Nayuki.io can achieve even better results.The context mentions the discovery of a secret society called the Cult of the Bound Variable, which used sandstone &quot;computers&quot; with 32 glyphs for cryptographic computations. Their system, known as Codex32, may be of interest to the Bitcoin community.Overall, Codex32 offers an alternative method for backing up and restoring master seeds in hierarchical deterministic wallets. Its simplicity, error-correcting abilities, and support for independent share verification make it a compelling option for users seeking a secure and efficient seed-sharing scheme.</summary>
  </entry>
</feed>