<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Bug in 2-of-3 transaction signing in Bitcoind?</title>
  <updated>2025-10-24T02:30:15.317056+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/April_2014/005247_Bug-in-2-of-3-transaction-signing-in-Bitcoind-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2014/005246_Bug-in-2-of-3-transaction-signing-in-Bitcoind-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2014/005245_Bug-in-2-of-3-transaction-signing-in-Bitcoind-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2014/005244_Bug-in-2-of-3-transaction-signing-in-Bitcoind-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2014/005243_Bug-in-2-of-3-transaction-signing-in-Bitcoind-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2014/005242_Bug-in-2-of-3-transaction-signing-in-Bitcoind-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2014/005241_Bug-in-2-of-3-transaction-signing-in-Bitcoind-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2014/005240_Bug-in-2-of-3-transaction-signing-in-Bitcoind-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2014/005239_Bug-in-2-of-3-transaction-signing-in-Bitcoind-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2014/005238_Bug-in-2-of-3-transaction-signing-in-Bitcoind-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Bug in 2-of-3 transaction signing in Bitcoind?</title>
    <updated>2025-10-24T02:30:15.317160+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-April/005238.html" rel="alternate"/>
    <published>2014-04-15T16:45:52+00:00</published>
    <summary>On April 15th, 2014, Chris Beams inquired about the availability of a source for a versatile tool that could encode, decode, hash, and derive keys. The author of the tool expressed their intent to open-source it but mentioned the need to address any remaining issues before doing so. The tool had multiple functionalities, including encoding and decoding in various formats, disassembling hex scripts, hashing using different algorithms, deriving private and public keys, and encrypting and decrypting private keys. The author also created another tool called chaintool, which allowed for tasks such as initializing cache files, adding or removing public keys or seeds, listing keys and seeds, synchronizing with the blockchain, and creating transactions.In an email exchange on the same day, Mike Belshe recommended btcd, the Go implementation of bitcoind, due to its superior error and diagnostic messages. The conversation also involved Matt Whitlock discussing a C++ tool developed by his team. This tool provided key and address conversions, hash functions, encoding and decoding, script disassembly, BIP38 encryption/decryption, Shamir Secret Sharing, transaction building, and signing. The tool included its own wallet and UTXO cache, which synced with bitcoind's block data files. It could generate multi-sig P2SH addresses from public seeds, allowing testing by sending Bitcoin to those addresses and then creating and signing transactions. The tool was lauded for its user-friendly nature and simple command-line syntax.Another email thread highlighted Mike Hearn's recommendation of using btcd for debugging multi-sig transactions. During a discussion about a rejected transaction, Matt Whitlock clarified that once a transaction is in the blockchain, it cannot be accepted again to avoid double-spending. However, they had encountered difficulties getting a 2-of-3 transaction accepted. They were investigating why the transaction had been previously accepted without their knowledge. The email thread also included a promotion for a free book on Graph Databases.In April 2014, Mike Hearn described a peculiar incident where a transaction had been accepted into the blockchain but subsequent attempts to have it accepted failed. They were attempting to get a 2-of-3 transaction accepted for hours, but it was rejected by various platforms. It seemed that the transaction had already been accepted without their awareness. They were starting over to reproduce the success or failure of the transaction.Apologies were made on the Bitcoin-development mailing list for a redundant message posted after realizing that the debug.log had already indicated that the inputs were already spent. Pieter Wuille responded, stating that the first input appeared to have been spent by a similar transaction. Mike Hearn recommended checking the debug.log for the reason behind the rejection. An advertisement for a book on Graph Databases was shared in the same email thread.On April 15, 2014, Mike Hearn sent an email to the Bitcoin-development mailing list regarding a rejected transaction. He advised reviewing the debug.log to understand why the transaction was rejected. The rejection occurred because the first input had already been spent by a similar transaction. Mike suggested that version 0.9 should provide more detailed reasons for rejections. Additionally, he provided a link to download a free book called &quot;Graph Databases,&quot; which offers guidance on graph databases and their applications.To diagnose the reason for rejection, it is recommended to consult the debug.log file, which contains comprehensive information about any errors or issues that may have occurred. Although an HTML attachment was mentioned in the original context, its relevance to the issue is unclear. Thoroughly reviewing all available information and resources is crucial for proper problem diagnosis.The user's attempt to redeem a 2-of-3 multisig P2SH output using a raw transaction is discussed. The address associated with the output and the transaction ID are provided. A raw transaction is created to spend the output, followed by its decoding for completeness. The transaction is signed using 2 of 3 keys. However, when attempting to transmit the transaction, it is rejected by the network, without specific details regarding the cause of rejection. This context pertains to a Bitcoin transaction, highlighting essential information about the raw data, inputs, and outputs involved in the process.</summary>
  </entry>
</feed>