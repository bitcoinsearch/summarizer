<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Conjectures on solving the high interactivity issue in payment pools and channel factories</title>
  <updated>2025-10-12T01:42:30.858335+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m463a3f67ff8e9f94b2fa8ec93260d2e2a9cec7ee">
      <author>[bitcoin-dev] Conjectures on solving the high interactivity issue in payment pools and channel factories Antoine Riard</author>
      <timestamp>2022-04-28T13:18:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Conjectures on solving the high interactivity issue in payment pools and channel factories Antoine Riard" parent_id="mailing-list-2022-05-m463a3f67ff8e9f94b2fa8ec93260d2e2a9cec7ee" anchor="mbe300789b063768a7d7edde8a1e643ca777adb42">
      <author>Billy Tetrud</author>
      <timestamp>2022-05-01T22:53:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="Billy Tetrud" parent_id="mailing-list-2022-05-mbe300789b063768a7d7edde8a1e643ca777adb42" anchor="mb9f0b354a7c4c35284f130d60e2571f38e442c64">
      <author>Antoine Riard</author>
      <timestamp>2022-05-10T00:38:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="2" position="3" reply_to="Billy Tetrud" parent_id="mailing-list-2022-05-mbe300789b063768a7d7edde8a1e643ca777adb42" anchor="m23dee1f8b57b1685f13c0a47b081b7fb30fdae59">
      <author>ZmnSCPxj</author>
      <timestamp>2022-05-10T16:45:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="3" position="4" reply_to="ZmnSCPxj" parent_id="mailing-list-2022-05-m23dee1f8b57b1685f13c0a47b081b7fb30fdae59" anchor="m6759a3390bc0c0a12f94dcb4d72800310c5a8e2f">
      <author>Billy Tetrud</author>
      <timestamp>2022-05-12T17:36:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="1" position="5" reply_to="[bitcoin-dev] Conjectures on solving the high interactivity issue in payment pools and channel factories Antoine Riard" parent_id="mailing-list-2023-03-m463a3f67ff8e9f94b2fa8ec93260d2e2a9cec7ee" anchor="m62a27ce9149cc851618aa6d027a3b9459968eaa4">
      <author>jlspc</author>
      <timestamp>2023-03-17T20:54:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="2" position="6" reply_to="jlspc" parent_id="mailing-list-2023-04-m62a27ce9149cc851618aa6d027a3b9459968eaa4" anchor="m9471ee2e84d165935c288f57d7dc725a9e8ccf4a">
      <author>Antoine Riard</author>
      <timestamp>2023-04-18T03:38:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/April_2023/021560_Conjectures-on-solving-the-high-interactivity-issue-in-payment-pools-and-channel-factories.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2023/021541_Conjectures-on-solving-the-high-interactivity-issue-in-payment-pools-and-channel-factories.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2022/020476_Conjectures-on-solving-the-high-interactivity-issue-in-payment-pools-and-channel-factories.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2022/020456_Conjectures-on-solving-the-high-interactivity-issue-in-payment-pools-and-channel-factories.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2022/020448_Conjectures-on-solving-the-high-interactivity-issue-in-payment-pools-and-channel-factories.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2022/020401_Conjectures-on-solving-the-high-interactivity-issue-in-payment-pools-and-channel-factories.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2022/020370_Conjectures-on-solving-the-high-interactivity-issue-in-payment-pools-and-channel-factories.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-April/021560.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-April/021560.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Conjectures on solving the high interactivity issue in payment pools and channel factories</title>
    <updated>2025-10-12T01:42:30.859295+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-April/021560.html" rel="alternate"/>
    <published>2023-04-18T03:38:57+00:00</published>
    <summary>The email thread discusses the issue of interactivity and liveliness requirements in Bitcoin's Lightning Network. The author suggests that constructions requiring all users to be online and exchange round of signatures for balance distribution would get stalled with just one lazy, buggy, or offline user. The early deployment of LN showed the resort to delegated channel hosting solutions to relieve users from the liveliness requirement. The author further suggests a trust-minimized solution enabling non-interactive, off-chain updates of the pool/factory, with no or minimal consumption of blockspace.The discussion also highlights different security models for addressing the double-spend issue of off-chain Bitcoin transactions. It mentions two main models: prophylactic and corrective. The article proposes a third solution that uses separate control transactions and value transactions. Examples of such solutions are the Tunable-Penalty Factory protocol and the LN-Penalty. However, the penalty mechanism that allows a &quot;wronged&quot; user to take some or all of a dishonest user's funds could be exploited by a malicious coalition.The conversation between Antoine and Billy revolves around predicting liquidity needs in sub-pools. There are concerns about fan-out transactions interfering with confirmation of simple withdrawal transactions and whether sub-pool states could be used honestly and structured trustlessly. The possibility of an always-online service using the receiving key in spending mode if the balance stacked there becomes relevant is discussed. The gitlab.com/lightning-signer/docs is mentioned as a work in progress in this direction. The issue of a malicious participant committing off-chain balance in two partitions and sending spends to the hosting &quot;receiving-keys&quot; entities without their knowledge is also addressed.The email exchange between Billy and ZmnSCPxj focuses on partitioning and solving the issues related to it. Two techniques are suggested: creating sub-pools that can be used by sub-pool participants later without the whole group's involvement, and having each sub-pool have only two participants to reduce disruption if any one pool participant is down. The discussion concludes that large multi-participant pools with sub-pools are essentially just channel factories with good tradeoffs.The conversation between Antoine and Billy discusses the challenges of partitioning multi-party constructions and preventing double-spending. Possible solutions suggested include creating sub-pools that can be used by sub-pool participants later without the whole group's involvement, or having an always-online system capable of signing only for group updates that do not change the owner's balance in the group. However, equivocation is still a hard issue with partitioning multi-party constructions.The post also explores the issue of interactivity with payment pools and channel factories when there are many participants involved. Several solutions have been proposed, such as timelocked kick-out abilities or assuming the widespread usage of node towers among the pool participants. It suggests non-interactive off-chain pool partitions as a trust-minimized solution, where if a pool update fails due to lack of online unanimity, a partition request could be exchanged among the online subset of users (&quot;the actives&quot;). Various trust-minimization trade-offs can be made in the publication of partition statements.Lastly, the post addresses the process of partitioning in a Bitcoin mining pool and proposes a new consensus data structure to register and order the partition statements. It discusses the cost and economic attractiveness of pool partitioning and suggests leveraging covenants and revocation mechanisms to solve security issues. The double-spend issue is already addressed on the Bitcoin base-layer and in payment channels.</summary>
  </entry>
</feed>