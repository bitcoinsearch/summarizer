<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A Calculus of Covenants</title>
  <updated>2025-10-12T01:42:35.258404+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m65b30de3546b7f4f9a134763b7a944ea54bee998">
      <author>[bitcoin-dev] A Calculus of Covenants Jeremy Rubin</author>
      <timestamp>2022-04-12T14:33:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] A Calculus of Covenants Jeremy Rubin" parent_id="mailing-list-2022-04-m65b30de3546b7f4f9a134763b7a944ea54bee998" anchor="m9943c03b74c140e614808b1437a8b9a9c5908497">
      <author>Jeremy Rubin</author>
      <timestamp>2022-04-12T15:03:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="Jeremy Rubin" parent_id="mailing-list-2022-05-m9943c03b74c140e614808b1437a8b9a9c5908497" anchor="mef31105900a37fae92735810d05d00ad3dddaf42">
      <author>Keagan McClelland</author>
      <timestamp>2022-05-18T17:08:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/May_2022/020499_A-Calculus-of-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2022/020226_A-Calculus-of-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2022/020225_A-Calculus-of-Covenants.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020499.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020499.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - A Calculus of Covenants</title>
    <updated>2025-10-12T01:42:35.258939+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-May/020499.html" rel="alternate"/>
    <published>2022-05-18T17:08:43+00:00</published>
    <summary>The author presents a framework for understanding covenants in the context of building infrastructure for them. The focus is on local covenants, where only one coin is examined. The framework defines a covenant primitive as having a set of transaction intents, a verifier generator function, a prover generator function, impedance-matched proofs, and assumptions under which the covenant is verified.To instantiate a covenant, the user selects a specific element from the set of sets of transaction intents and generates a verifier and a prover function. This framework is then applied to analyze three covenants: plain CTV, 2-3 online multisig, and 3-3 presigned + deleted.The author also raises questions about the cardinality of an intent set, the composition of different covenants within an intent, and the unrollability of intents. While the framework assumes statelessness, it acknowledges that provers may need to maintain external state to prove.The author notes that the efficiency of a prover or verifier is not addressed in this framework. However, the framework is valuable for generating tooling that can integrate covenants into Sapio, a platform.Overall, this framework provides a comprehensive approach to analyzing covenants and offers insights into their practical use cases.</summary>
  </entry>
</feed>