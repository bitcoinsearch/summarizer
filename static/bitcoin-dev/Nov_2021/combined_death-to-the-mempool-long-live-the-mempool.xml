<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - death to the mempool, long live the mempool</title>
  <updated>2025-10-11T02:26:26.778745+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Nov_2021/019588_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019583_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019585_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019582_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019581_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019580_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019579_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019577_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019578_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019576_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019575_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019574_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019573_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2021/019572_death-to-the-mempool-long-live-the-mempool.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019588.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - death to the mempool, long live the mempool</title>
    <updated>2025-10-11T02:26:26.778817+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019588.html" rel="alternate"/>
    <published>2021-11-03T10:12:57+00:00</published>
    <summary>In recent discussions on the bitcoin-dev mailing list, there has been a proposal to eliminate the mempool and instead have users submit their transactions directly to mining pools. This idea has sparked debate among developers and experts in the Bitcoin community.One argument in favor of removing the mempool is that it would greatly reduce the bandwidth requirement for running a node and keep transaction intentionality private until confirmed. It is suggested that this would naturally resolve current issues related to package relay and replace-by-fee (RBF) rules. However, critics argue that removing the mempool would complicate solo mining and make BetterHash proposals more difficult. They also point out that it deviates from the security model of Bitcoin and exposes the network to potential denial-of-service (DoS) attacks.Another concern raised is the potential for centralization and higher barriers to entry if users are required to submit transactions directly to mining pools. Proponents of the proposal suggest that direct communication between block template construction venues and transaction proposers could provide a venue for direct feedback on acceptable feerates, making transaction confirmation timelines less variable and allowing block producers to enforce their own minimum security budget. Critics argue that this information can already be communicated over HTTP and that removing the mempool would only reinvent its purpose.The discussion also touches on the issue of dynamic, trust-minimized discovery of mining endpoints. There is a concern that a static list of endpoints could create artificial barriers to entry and lead to centralization. One defense mechanism currently used in Bitcoin Core is selecting outbound peers based on different subnets, but replicating this mechanism for mining endpoints could downgrade the mining competition. The consensus seems to be that while opting out of transaction broadcasting is acceptable, the mempool will always be necessary to maintain a decentralized and trust-minimized system.In addition to the proposal to eliminate the mempool, there are other suggestions being discussed. These include using an anonymous communication network such as Tor for submitting transactions directly to mining pools, implementing an overlay network to relay miner-incentive compatible transactions, and finding alternative solutions such as weak blocks to address the concerns related to the mempool.Overall, the discussions highlight the importance of maintaining a decentralized and trust-minimized system in Bitcoin while avoiding artificial barriers to entry and centralization vectors. The proposal to eliminate the mempool has sparked debate, with arguments for and against its removal based on various considerations such as bandwidth requirements, transaction intentionality, solo mining, BetterHash proposals, security budgets, and DoS attacks.The current design of Bitcoin's transaction pool is being discussed by Lisa and ZmnSCPxj. ZmnSCPxj suggests using gossiping mining endpoints instead of transactions to improve anonymity and reduce global bandwidth usage. However, this method may be more expensive than having a persistent identity. Anonymity in transactions is considered important, but there are potential limitations in contacting all miners globally to confirm transactions.The Bitcoin Protocol Discussion mailing list has been discussing the possibility of eliminating the mempool, which stores unconfirmed transactions. Instead, it has been proposed that users should submit their transactions directly to mining pools through an anonymous communication network like Tor. This would reduce the bandwidth requirement for running a node and keep the intentionality of transactions private until confirmed. However, it would complicate solo mining and make BetterHash proposals more difficult. It would also require miners to identify themselves, potentially compromising anonymity.Eliminating the mempool would greatly reduce the bandwidth requirement for running a node and resolve issues with package relay and RBF rules. However, it would complicate solo mining and make BetterHash proposals harder to implement. The mining set should ideally be anonymous to prevent state co-option of mines and attacks with sufficient hashpower. The objection to this proposal is that it requires miners to identify themselves, although many miners already do so. P2Pool would not work well in this model, and non-side fees serve as an anonymity layer, where neither the miner nor the transactor needs to know each other's identity.Removing the mempool and allowing users to submit transactions directly to mining pools over an anonymous communication network like Tor would greatly reduce the bandwidth requirement for running a node and maintain the privacy of transactions until they are confirmed. However, it would complicate solo mining and make BetterHash proposals more challenging. A direct communication channel between block template construction venues and transaction proposers would allow for direct feedback on acceptable feerates, making transaction confirmation timelines less variable and providing block producers with a mechanism to enforce their own minimum security budget. Initial feerate estimation would need to be based on published blocks or direct interactions with block producers.In summary, there are ongoing discussions about eliminating the mempool and having users submit transactions directly to mining pools over an anonymous communication network like Tor. While this would reduce bandwidth requirements and maintain transaction privacy, it could complicate solo mining and make BetterHash proposals more difficult. The importance of anonymity in transactions and the need for miners to look like potential miners on the network for improved security are also emphasized. However</summary>
  </entry>
</feed>