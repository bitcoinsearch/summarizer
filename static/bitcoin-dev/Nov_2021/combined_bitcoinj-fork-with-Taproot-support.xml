<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - bitcoinj fork with Taproot support</title>
  <updated>2025-10-24T02:31:10.833138+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Nov_2021/019602_bitcoinj-fork-with-Taproot-support.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2021/019601_bitcoinj-fork-with-Taproot-support.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2021/019600_bitcoinj-fork-with-Taproot-support.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2021/019599_bitcoinj-fork-with-Taproot-support.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - bitcoinj fork with Taproot support</title>
    <updated>2025-10-24T02:31:10.833252+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-November/019599.html" rel="alternate"/>
    <published>2021-11-17T20:05:55+00:00</published>
    <summary>On the Bitcoin development mailing list, a discussion took place regarding the relaying of P2TR spends. Prior to version 0.19.0, creating outputs with an unknown witness version was considered non-standard and violated BIP 173. However, this issue was resolved in PR #15846 for version 0.19.0+. Despite the fix, post-segwit pre-taproot Bitcoin Core releases still reject P2TR spends. A user on the Bitcoin StackExchange forum suggested a potential solution using bitcoinj. They made it so that the client only connects to nodes with at least protocol version 70016, which successfully addressed the issue. In another discussion led by Andrew Chow on November 17th, 2021, it was mentioned that creating outputs with an unknown witness version was previously deemed non-standard and violated BIP 173. The problem at hand, however, pertains to getting P2TR spends to relay. All post-segwit pre-taproot Bitcoin Core releases currently reject these spends. A developer named n1ms0s recently shared their work on a fork of bitcoinj that includes basic Taproot support. This fork allows for sending and receiving with Taproot addresses using a bitcoinj SPV wallet, as well as public/private key tweaking. However, when attempting to broadcast a Taproot transaction to older nodes (around version 0.18.0), an error response stating &quot;Witness version reserved for soft-fork upgrades&quot; is encountered. Seeking assistance, the developer posted a question on Stack Exchange, inviting feedback and contributions to address this issue.Overall, the discussions highlight the challenges surrounding P2TR spends and the rejection of such spends by post-segwit pre-taproot Bitcoin Core releases. Additionally, they shed light on the efforts of a developer working on a bitcoinj fork with basic Taproot support, who seeks assistance in resolving the issue encountered when broadcasting Taproot transactions to older nodes.</summary>
  </entry>
</feed>