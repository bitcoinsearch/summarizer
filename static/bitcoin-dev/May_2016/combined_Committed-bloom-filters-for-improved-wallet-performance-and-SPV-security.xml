<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Committed bloom filters for improved wallet performance and SPV security</title>
  <updated>2023-08-01T18:08:45.575890+00:00</updated>
  <author>
    <name>bfd at cock.lu 2017-04-01 23:49:03+00:00</name>
  </author>
  <author>
    <name>Tom Harding 2017-03-16 15:05:11+00:00</name>
  </author>
  <author>
    <name>bfd at cock.lu 2017-03-16 00:25:01+00:00</name>
  </author>
  <author>
    <name>Tom Harding 2017-03-15 22:36:09+00:00</name>
  </author>
  <author>
    <name>Chris Belcher 2017-02-17 00:28:59+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2017-01-06 22:07:36+00:00</name>
  </author>
  <author>
    <name>Eric Voskuil 2017-01-06 21:50:47+00:00</name>
  </author>
  <author>
    <name>James MacWhyte 2017-01-06 21:35:58+00:00</name>
  </author>
  <author>
    <name>Chris Priest 2017-01-06 20:15:46+00:00</name>
  </author>
  <author>
    <name>Aaron Voisine 2017-01-06 07:07:34+00:00</name>
  </author>
  <author>
    <name>bfd at cock.lu 2017-01-06 02:15:26+00:00</name>
  </author>
  <author>
    <name>bfd at cock.lu 2017-01-06 02:04:22+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2017-01-05 14:48:33+00:00</name>
  </author>
  <author>
    <name>Eric Voskuil 2017-01-05 07:45:18+00:00</name>
  </author>
  <author>
    <name>Chris Priest 2017-01-05 07:06:36+00:00</name>
  </author>
  <author>
    <name>Leo Wandersleb 2017-01-04 16:13:41+00:00</name>
  </author>
  <author>
    <name>Adam Back 2017-01-04 11:00:55+00:00</name>
  </author>
  <author>
    <name>Jorge Tim√≥n 2017-01-04 10:13:02+00:00</name>
  </author>
  <author>
    <name>Aaron Voisine 2017-01-04 08:56:21+00:00</name>
  </author>
  <author>
    <name>Jonas Schnelli 2017-01-04 07:47:10+00:00</name>
  </author>
  <author>
    <name>Eric Voskuil 2017-01-04 06:06:31+00:00</name>
  </author>
  <author>
    <name>Aaron Voisine 2017-01-04 00:36:34+00:00</name>
  </author>
  <author>
    <name>bfd at cock.lu 2017-01-04 00:10:14+00:00</name>
  </author>
  <author>
    <name>Aaron Voisine 2017-01-03 23:46:00+00:00</name>
  </author>
  <author>
    <name>adiabat 2017-01-03 23:06:26+00:00</name>
  </author>
  <author>
    <name>bfd at cock.lu 2017-01-03 22:28:56+00:00</name>
  </author>
  <author>
    <name>Aaron Voisine 2017-01-03 22:18:21+00:00</name>
  </author>
  <author>
    <name>bfd at cock.lu 2017-01-03 20:24:35+00:00</name>
  </author>
  <author>
    <name>bfd at cock.lu 2017-01-03 20:18:59+00:00</name>
  </author>
  <author>
    <name>Jonas Schnelli 2017-01-01 21:01:23+00:00</name>
  </author>
  <author>
    <name>Leo Wandersleb 2016-07-28 21:07:29+00:00</name>
  </author>
  <author>
    <name>Bob McElrath 2016-05-11 20:29:33+00:00</name>
  </author>
  <author>
    <name>Bob McElrath 2016-05-11 20:06:48+00:00</name>
  </author>
  <author>
    <name>Gregory Maxwell 2016-05-09 08:57:08+00:00</name>
  </author>
  <author>
    <name>bfd at cock.lu 2016-05-09 08:26:06+00:00</name>
  </author>
  <link href="bitcoin-dev/April_2017/013952_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2017/013731_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2017/013730_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2017/013727_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Feb_2017/013587_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013441_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013440_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013439_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013438_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013435_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013437_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013436_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013433_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013432_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013431_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013430_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013428_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013427_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013426_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013425_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013424_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013422_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013421_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013419_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013417_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013418_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013416_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013414_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013415_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2017/013397_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2016/012911_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012675_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012674_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012637_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012636_Committed-bloom-filters-for-improved-wallet-performance-and-SPV-security.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Committed bloom filters for improved wallet performance and SPV security</title>
    <updated>2023-08-01T18:08:45.575890+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012636.html" rel="alternate"/>
    <summary>In a recent discussion on the bitcoin-dev forum, Chris Belcher expressed his support for the committed bloom filter idea over BIP37 for better privacy. However, he noted that downloading blocks from multiple peers with new tor circuits is still necessary for good privacy when using Bitcoin frequently. Belcher also discussed the challenges of finding transaction subgraphs from blocks and how a Bayesian approach could potentially address this issue. Looking to the future, Belcher believes off-chain transactions will likely be the best option for private and high-volume use of Bitcoin.Additionally, another participant in the discussion shared their belief that BIP37 is effectively unused by most wallets and services.The discussion is about compact fraud proofs in Bitcoin and their feasibility. The author argues that compact fraud proofs do not exist and even if they did, ensuring their visibility to SPV clients would pose the same problems as BIP37. It is pointed out that in the implementation of BIP37, they have no security except for a vague hope that they are not being lied to and that the chain with the most work they are seeing is actually valid. The author also mentions that during the validationless mining failure around the BIP66 activation, miners produced 6 invalid blocks in a chain and many more invalid blocks in isolated bursts for a period lasting several months. Due to the instability of the network, it is unreasonable to accept anything except multiple confirmations. The slides presented gloss over the fact that compact fraud proofs in Bitcoin aren't possible, and that the "Simplified Payment Verification" (SPV) implementation used today differs significantly from the version described in the Bitcoin white paper. In the white paper, SPV clients had the same security as fully validating nodes, while the implementation of BIP37 provides no security except a vague hope that users are not being lied to. The suggested solution does not preclude unconfirmed transactions from being used with a commitment scheme, but their usefulness for those who aren't validating is limited. During the validationless mining failure around the BIP66 activation, miners produced numerous invalid blocks, making it unreasonable to accept anything except multiple confirmations.The proposed Bloom filter method, similar to BIP37, still has a vulnerability where combining partial wallet information with transaction subgraph information can reveal which addresses belong to the wallet. The peel chain attack can identify change addresses that belong to the same wallet as an address matching the bloom filter. False positives can occur, but probability decreases as the number of transactions increases. The committed Bloom filter proposal is vulnerable to the same type of attack because it still leaks information about which addresses the wallet is interested in. The committed Bloom filter is created by deterministically creating a Bloom Filter Digest (BFD) of every block's inputs and outputs. A binary comparison between the BFD and a second bloom filter of relevant key material determines whether there are matching transactions. The BFD can be cached between clients without needing to be recomputed, and it can be used to do re-scans locally of wallets without needing the block data available to scan or reading the entire blockchain from disk.Leo Wandersleb responded to a mail thread in which a user proposed to create deterministic Bloom filter digest of every block. Leo mentioned that he had independently started implementing a similar idea, but his version ignored the commitment and signing part. He believes that 80GB compressed to 3GB would be ideal, as it could be stored on a phone. However, with segWit, the higher transaction count per MB would make this worse. Bob McElrath suggested using Cuckoo filter instead of Bloom filter, as optimal filters are logarithmic in the false-positive rate and linear in the number of elements it contains for fixed false-positive rate.The Bitcoin-Dev mailing list is being used to discuss the concept of 0-conf transactions. The debate centers around whether or not end-users should rely on 0-conf. James MacWhyte believes that the purpose of this discussion is to build base functionality so wallet developers can provide usability to their end-users. He also believes that instead of debating what wallet designers should do, we should provide tools and let the market sort out any issues that arise. Chris Priest explains that 0-conf is a method for determining the probability that a valid transaction will be mined in a block before that transaction gets mined. He also mentions that there is no "security catastrophe" with 0-conf transactions. Eric Voskuil disagrees with Priest's view and calls it an example of a Bitcoin security catastrophe.The purpose of the bitcoin protocol development is to build base functionality for companies and individuals to provide usability to the end-user. The 0-conf debate has become a UX issue. Wallet developers should hide or mark 0-conf transactions appropriately, instead of debating on what they should or shouldn't do. The list will provide tools and let the market sort it out. If wallet developers start receiving complaints on confusion and loss caused by 0-conf transactions, they will find a solution.On</summary>
    <published>2017-04-01T23:49:03+00:00</published>
  </entry>
</feed>
