<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Compact Block Relay BIP</title>
  <updated>2025-10-12T01:06:26.903805+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <author>
    <name>Matt Corallo 2016-05-02 22:13:22 2016-05-02T22:13:22+00:00</name>
  </author>
  <author>
    <name>Gregory Maxwell 2016-05-03 05:02:28 2016-05-03T05:02:28+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2016-05-06 03:09:14 2016-05-06T03:09:14+00:00</name>
  </author>
  <author>
    <name>Johnathan Corgan 2016-05-08 00:40:25 2016-05-08T00:40:25+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2016-05-08 03:24:22 2016-05-08T03:24:22+00:00</name>
  </author>
  <author>
    <name>Nicolas Dorier 2016-05-08 10:25:49 2016-05-08T10:25:49+00:00</name>
  </author>
  <author>
    <name>Tom Zander 2016-05-09 09:35:32 2016-05-09T09:35:32+00:00</name>
  </author>
  <author>
    <name>Gregory Maxwell 2016-05-09 10:43:02 2016-05-09T10:43:02+00:00</name>
  </author>
  <author>
    <name>Tom 2016-05-09 11:32:59 2016-05-09T11:32:59+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2016-05-09 13:40:55 2016-05-09T13:40:55+00:00</name>
  </author>
  <author>
    <name>Tom 2016-05-09 13:57:10 2016-05-09T13:57:10+00:00</name>
  </author>
  <author>
    <name>Bryan Bishop 2016-05-09 14:04:20 2016-05-09T14:04:20+00:00</name>
  </author>
  <author>
    <name>Pieter Wuille 2016-05-09 17:06:06 2016-05-09T17:06:06+00:00</name>
  </author>
  <author>
    <name>Peter R 2016-05-09 18:34:47 2016-05-09T18:34:47+00:00</name>
  </author>
  <author>
    <name>Peter R 2016-05-09 23:37:00 2016-05-09T23:37:00+00:00</name>
  </author>
  <author>
    <name>Peter R 2016-05-10 01:42:45 2016-05-10T01:42:45+00:00</name>
  </author>
  <author>
    <name>Gregory Maxwell 2016-05-10 02:12:03 2016-05-10T02:12:03+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-05-10 05:28:19 2016-05-10T05:28:19+00:00</name>
  </author>
  <author>
    <name>Gregory Maxwell 2016-05-10 10:07:27 2016-05-10T10:07:27+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-05-10 21:23:55 2016-05-10T21:23:55+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2016-05-11 01:12:32 2016-05-11T01:12:32+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2016-05-18 01:49:10 2016-05-18T01:49:10+00:00</name>
  </author>
  <link href="bitcoin-dev/May_2016/012719_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012661_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012660_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012651_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012650_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012648_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012649_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012647_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012646_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012645_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012644_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012643_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012642_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012641_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012639_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012638_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012632_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012630_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012629_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012627_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012625_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2016/012624_Compact-Block-Relay-BIP.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012624.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012624.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Compact Block Relay BIP</title>
    <updated>2025-10-12T01:06:26.903963+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-May/012624.html" rel="alternate"/>
    <published>2016-05-18T01:49:10+00:00</published>
    <summary>In a Bitcoin developers mailing list conversation, Rusty Russell proposed using variable-length bit encodings to reduce the size of transmitted data. Gregory Maxwell questioned the reliability and failure rate of this approach. Russell suggested using variable-length IDs and avoiding nonces to save time. However, Maxwell disagreed, stating that it would increase the cost of collisions. The conversation also touched on the idea of using UDP instead of TCP, but Russell was not convinced. Finally, Russell mentioned adding extra bits in the sender's coding to prevent collisions.Bitcoin developers are working on a new compact block relay system that will send transactions in smaller packets. This system aims to reduce bandwidth requirements and improve transmission speed between nodes. Instead of sending all transaction details, miners would only send a unique identifier for each transaction along with a list of excluded transactions. The receiving node would then request the full transaction information if needed.Pieter explained the length of short IDs required and suggested allowing the sender to choose. He also discussed techniques for reducing the number of bytes used for txids. Matt Corallo designed a BIP for compact block relay, introducing new data structures and a variable-length integer encoding. Short transaction IDs were introduced to represent a transaction without sending a full hash. Several heuristics can be used to improve performance, such as treating short txids that match multiple mempool transactions as non-matches and verifying against the sender's mempool to check for collisions.In another email thread, Peter R raised concerns about collision attacks, and Gregory Maxwell explained the likelihood of finding two transactions with the same initial 8 bytes of txid. Peter calculated the number of possible pairs in a set of transactions and questioned how to find the pair. Later, Peter suggested a faster way to scan the set using binary search. He agreed that the attack was feasible.The conversation also involved discussions about moderation and off-topic posts, with recommendations for sending further posts to appropriate mailing lists.Overall, the Bitcoin developers are exploring various techniques to improve the network's speed and efficiency, including reducing the size of transmitted data, using variable-length encodings, and optimizing transaction identification and relay.In a discussion on the bitcoin-dev mailing list, Tom and Gregory debated over the use of service bits for indicating additional peer-to-peer feature support. Gregory argued against using service bits for negating optional parameters, while Tom believed they were the right solution. They also discussed variable length encoding and collision attacks. Matt Corallo proposed a solution called Compact Block Relay BIP to address block propagation issues, but Tom criticized it as too complicated. The discussion also touched on the use of short transaction IDs and the acknowledgment of contributors to the document.The conversation shifted to the relay protocol and its optimization for propagation time rather than bandwidth. Two other proposals, xthin block and ILBT, were mentioned as potential solutions to decrease bandwidth usage, but further information was requested. Matt Corallo introduced his Compact Block Relay BIP, which aims to reduce data transmission. He explained the protocol flow, the calculation of short transaction IDs, and backward compatibility with older clients. The implementation of the BIP can be found on Github.A user reported testing the compact block relay design for a couple of weeks and observed a significant reduction in block-bytes sent and bandwidth spikes. The measurements showed that a high percentage of blocks were transferred with low latency, even without prediction.Matt Corallo's BIP-formatted design spec for compact block relay aimed to limit on-wire bytes during block relay. The latest version of the document can be found on Github. A user who tested the design reported over 96% reduction in block-bytes sent and decreased bandwidth spikes. The user's measurements showed that a significant percentage of blocks were transferred with low latency, even without prediction.The Compact Block Relay BIP designed by Matt Corallo aims to reduce block relay time and conserve bandwidth for nodes on the P2P network. The protocol includes two modes: high-bandwidth and low-bandwidth. Several new messages and inv types are introduced, along with the use of short transaction IDs. The protocol also includes new data structures and a variable-length integer encoding. Nodes are required to follow specific rules when requesting and sending compact blocks.The document discusses the protocol for handling missing transactions in the Bitcoin network. It emphasizes the importance of validating that the header properly commits to each transaction in the block before sending a cmpctblock message. When a requested blocktxn message is received, nodes are advised to reconstruct the full block. To improve block relay time, nodes are recommended to send a sendcmpct message with the first integer set to 1 to up to three peers based on their past performance in providing blocks quickly. Additionally, all nodes should send a sendcmpct message to all appropriate peers. Nodes with limited inbound bandwidth should prioritize using MSG_CMPCT_BLOCK/getblocktxn requests when requesting blocks. When sending cmpctblock messages, nodes should limit prefilledtxn to approximately 10KB of transactions. To optimize efficiency, nodes may choose one</summary>
  </entry>
</feed>