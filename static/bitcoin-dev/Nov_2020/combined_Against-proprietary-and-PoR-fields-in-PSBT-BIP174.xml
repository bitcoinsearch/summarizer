<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Against proprietary and PoR fields in PSBT BIP174</title>
  <updated>2023-08-02T02:51:44.778562+00:00</updated>
  <author>
    <name>Jonathan Underwood 2020-11-26 23:24:32+00:00</name>
  </author>
  <author>
    <name>Ferdinando M. Ametrano 2020-11-16 23:38:19+00:00</name>
  </author>
  <author>
    <name>Ferdinando M. Ametrano 2020-11-16 23:01:34+00:00</name>
  </author>
  <link href="bitcoin-dev/Nov_2020/018284_Against-proprietary-and-PoR-fields-in-PSBT-BIP174.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2020/018275_Against-proprietary-and-PoR-fields-in-PSBT-BIP174.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2020/018274_Against-proprietary-and-PoR-fields-in-PSBT-BIP174.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Against proprietary and PoR fields in PSBT BIP174</title>
    <updated>2023-08-02T02:51:44.778562+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-November/018274.html" rel="alternate"/>
    <summary>A proposal has been made to remove the 'proprietary' and 'proof-of-reserves' types from the PSBT specifications, as they have nothing to do with the intrinsic operations required to finalize a valid transaction from PSBT manipulation. Ferdinando M. Ametrano has submitted a pull request to the bips repo suggesting this change. He questions the rationale for these types, stating that any information content they could provide for non-standard PSBT manipulation could stay in the 'unknown' field without any loss of generality.Ametrano believes that as long as BIP174 states that unknown data must be kept during PSBT manipulation, there is no need for explicit support for 'proprietary' and 'proof-of-reserves' types. He mentions that he has a project where they include proprietary information in the PSBT, and any PSBT software supporting unknown data keeps their proprietary information intact. Therefore, there is no need for a PSBT implementation to provide explicit support for these types.The author of the btclib library also fails to understand the rationale for the 'proprietary' and 'proof-of-reserves' types. They argue that these types are unrelated to the intrinsic operations required to finalize a valid transaction from PSBT manipulation. They suggest that any information content provided by these types could be stored in the 'unknown' field without any issues. The author emphasizes that their project includes proprietary information in the PSBT, and the software successfully retrieves this information from serialized PSBT.The conclusion drawn by both Ametrano and the btclib library author is reinforced by the evidence that all PSBT implementations they know of, including bitcoin core and HWI, do not implement 'proprietary' and 'proof-of-reserve' types. This suggests that these types might be ignored if included in BIP174. Considering this, it is highly likely that part of BIP174 will be removed.</summary>
    <published>2020-11-26T23:24:32+00:00</published>
  </entry>
</feed>
