<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - consensus rule change for TX fee safety</title>
  <updated>2025-10-21T02:49:17.113119+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/March_2016/012518_consensus-rule-change-for-TX-fee-safety.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2016/012516_consensus-rule-change-for-TX-fee-safety.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2016/012515_consensus-rule-change-for-TX-fee-safety.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2016/012513_consensus-rule-change-for-TX-fee-safety.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2016/012514_consensus-rule-change-for-TX-fee-safety.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2016/012512_consensus-rule-change-for-TX-fee-safety.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2016/012509_consensus-rule-change-for-TX-fee-safety.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - consensus rule change for TX fee safety</title>
    <updated>2025-10-21T02:49:17.113225+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-March/012509.html" rel="alternate"/>
    <published>2016-03-03T16:38:17+00:00</published>
    <summary>The bitcoin-dev mailing list discussion has raised concerns about transaction fees and the need for safety rules. Alice Wonder proposed implementing protections to prevent typo blunders in transactions, citing an example of a 15 BTC transaction fee that was likely a mistake. She suggested two possible solutions: limiting the fee to the sum of outputs or limiting the fee per byte based on the previous block's largest fee per byte. Henning Kopp agreed with implementing the rule as a safety mechanism in the client rather than through a hard fork. Jorge Tim√≥n suggested improving existing checks and implementing them at the wallet layer.Bitcoin Core already has a safety limit, called the &quot;absurd fee&quot; limit, which is set at 10000 times the minimum relay fee to prevent large transaction fees. This limit applies to both the wallet and the sendrawtransaction RPC call. There is also a user-configurable option, -maxtxfee, to limit fees set by the wallet, which defaults to 0.1 BTC. In Bitcoin Core 0.13, it is planned to use -maxtxfee for both the wallet and the RPC interface. Historically, large transaction fees were caused by insufficient warnings from wallet software, making it the responsibility of operators to ensure user-friendliness. However, there are legitimate use cases for paying large fees, such as convenience for miners and increased privacy.In the bitcoin-dev mailing list discussion, Alice Wonder proposed adding safety rules for transaction fees to prevent mistakes. She suggested limiting the fee based on the sum of outputs or the previous block's largest fee per byte. Some participants disagreed with implementing this as a hard fork and instead suggested implementing it as a safety mechanism in the client. Alice Wonder argued that adding protections could increase confidence in using bitcoin and prevent typo blunders. The discussion concluded without a clear consensus on how to proceed.A user in the discussion suggested limitations on transaction fees, either by not allowing them to be larger than the sum of outputs or by limiting the fee per byte based on the previous block. They disagreed with this idea, stating that such checks should be done by transaction creation clients or that nodes could choose not to accept transactions with high fees into their mempool based on policy. They also argued that these limitations should not be part of the consensus layer.Henning Kopp proposed implementing a safety mechanism in the client to warn users if certain conditions are met, rather than doing a hard fork. Peter Todd pointed out that Bitcoin Core already has a safety limit called the &quot;absurd fee&quot; limit, which is set at 10000 times the minimum relay fee. This limit applies to both the wallet and the sendrawtransaction RPC call. The wallet also has a user-configurable option, -maxtxfee, to limit fees set by the wallet, currently defaulting to 0.1 BTC.Alice Wonder suggested implementing a safety rule for transaction fees in the next hard fork on the bitcoin-dev mailing list. She mentioned an incident where a user paid a 15 BTC fee due to a probable typo or client bug. Two proposed solutions were limiting the fee to the sum of outputs or limiting the fee per byte based on the previous block. Alice argued that adding protections could increase user confidence, using the four-byte checksum in public addresses as an example. Henning Kopp suggested implementing the safety mechanism in the client rather than through a hard fork, with a warning pop-up for conditions A) or B) being met.A recent Bitcoin transaction with an unusually high fee has sparked discussions about the need for safety rules regarding transaction fees during hard forks. The transaction in question involved a 15 BTC fee, equivalent to approximately $130,000. Experts have suggested that implementing safety rules for transaction fees could prevent similar incidents in the future. The issue has reignited debates about the scalability of Bitcoin and its adoption, with concerns raised about high transaction fees hindering wider usage. However, some argue that this incident is isolated and not indicative of broader issues in the cryptocurrency ecosystem. The incident serves as a reminder of the challenges facing the industry as it continues to grow and mature. Concrete action to address transaction fees during hard forks remains uncertain.</summary>
  </entry>
</feed>