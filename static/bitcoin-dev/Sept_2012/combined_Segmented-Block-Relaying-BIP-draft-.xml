<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Segmented Block Relaying BIP draft.</title>
  <updated>2025-10-26T02:50:14.040642+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Sept_2012/001829_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001828_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001827_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001826_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001825_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001824_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001823_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001821_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001820_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001819_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001818_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001817_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001816_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001815_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001814_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001813_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001811_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2012/001810_Segmented-Block-Relaying-BIP-draft-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Segmented Block Relaying BIP draft.</title>
    <updated>2025-10-26T02:50:14.040757+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-September/001810.html" rel="alternate"/>
    <published>2012-09-13T20:24:35+00:00</published>
    <summary>The email discussions revolve around proposals and discussions related to block downloads, Merkle trees, and the scalability of Bitcoin. One proposal suggests parallelizing block downloads by requesting level-3 hashes and downloading transactions from different peers. This is compared to another suggestion of fetching the entire txid list first and then downloading unknown transactions. The use of Merkle trees in Bitcoin is mentioned as a way to validate segments of a block and save data transfer. It is clarified that only the level for segment roots needs to be downloaded. The importance of Merkle trees in verifying data integrity and belonging to a set is emphasized.There is a disagreement between Gregory Maxwell and Matthew Mitchell on the usefulness of using tree levels in Bitcoin. Gregory questions the value of obtaining a particular tree level, while Matthew argues that it allows for verifying segments without downloading all transaction hashes. The discussion also touches on the importance of Bloom filtering and the potential impact of proposed changes on decentralization and mining economics.Another email conversation involves Gregory questioning the value of reducing the size of bitcoin transactions by removing inventory vectors. He suggests using off-chain transactions instead. The conversation also covers Open Transactions, Ripple, and the strengths and limitations of Bitcoin, Open Transactions, and Ripple.In another email exchange, proposals are made to simplify the protocol for downloading Bitcoin transactions and allow requests for any level of the Merkle tree. The concerns about block size, scarcity, fees, and the economic motivation for mining are discussed. There is a recommendation to discuss these issues well in advance to avoid potential problems. The writer suggests a simpler protocol for Bitcoin transactions and raises questions about the block size limit. They express concerns about large fees deterring transactions and recommend discussing these issues ahead of time to prevent last-minute complications.In 2012, Matt Corallo discusses the idea of segmenting blocks but concludes that it would add little value unless block sizes were unrealistically large. He argues against removing the block size cap, citing the compromise of economic promises and network security. He believes that a simpler design is more prudent for Bitcoin.In another message thread from 2012, Matthew Mitchell expresses skepticism about segmenting blocks to improve block relay times. He argues that it wouldn't make a significant difference unless block sizes were exceptionally large. Luke-Jr suggests that improving block propagation lies more in implementation than protocol. The discussion also mentions the need for further research on the benefits and costs of distributing missing transactions.Overall, the email discussions cover various proposals, disagreements, and concerns related to block downloads, Merkle trees, scalability, and the future of Bitcoin. On September 10, 2012, Matthew Mitchell proposed a draft for improving the block relaying and validation in Bitcoin's blockchain. The aim was to do it in parallel and eliminate redundancy, which would be more beneficial for larger block sizes. He shared a link to his proposal on the Bitcoin Wiki page. However, according to one response, most of the problem with block propagation lies in implementation rather than protocol.The discussion revolves around the addition of six new messages in the Bitcoin protocol. Two of them, getseginv and seginv, help in learning about the segments of a block that a node has. The other two, gettreelevel and treelevel, are used to receive a level of the merkle tree. The remaining two, getsegment and segment, allow nodes to download arbitrary segments of blocks. These messages enable nodes to relay segments of blocks before receiving the entire block, which was not possible previously.It is suggested that distributing missing transactions on an as-needed basis could be a possible improvement at the protocol level. However, there has been no research on this yet. The number of segments could be calculated by node software using measurements of download speeds, latency times, the number of connections, and how likely redundancy is to occur.In a discussion on Bitcoin development, Matthew Mitchell shared a branch with his implementation of parts of the header+ v stuff in conjunction with his bloom filter stuff. He admits that it is pretty simple and susceptible to issues like getting stuck or DoS attacks, but in theory, it works. Gregory Maxwell responded to Mitchell's proposal for improving block relaying and validation by asking why it focuses on sending the hash tree when the block header, transaction list, and transactions a node doesn't already know (usually just the coinbase) are sufficient.Lastly, the Bitcointalk topic related to this discussion is mentioned. A BIP draft has been created by Matthew Mitchell proposing a solution to improve block relaying and validation in Bitcoin. The proposal suggests that block relaying and validation can be done in parallel, which will remove redundancy. This approach is particularly beneficial for larger block sizes. The draft can be found on the Bitcoin wiki page.</summary>
  </entry>
</feed>