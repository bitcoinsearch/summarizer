<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Consensus Cleanup BIP draft</title>
  <updated>2025-03-29T02:33:23.725516+00:00</updated>
  <author>
    <name>Sjors Provoost 2025-03-28 14:07:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Consensus Cleanup BIP draft</title>
    <updated>2025-03-29T02:33:23.725543+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/065901dba01b$2164fff0$642effd0$@voskuil.org/T/#m36f19f29c9913892ded5893a10b0d08f710bd614" rel="alternate"/>
    <summary>Segregated Witness (SegWit) significantly alters the structure and malleability of Bitcoin transactions compared to pre-SegWit transactions. The traditional 64-byte transactions, which were prevalent before the adoption of SegWit, inherently possess a malleability issue due to the lack of space for a signature within the scriptSig field. This limitation opens up these transactions to potential manipulation, as their identifiers can be altered without affecting the essence of the transaction itself.

SegWit addresses this critical vulnerability by changing how transaction data is stored and transmitted. Specifically, it introduces a separation where the witness data (including signatures) is detached from the main transaction block. This structural modification means that in SegWit transactions, the scriptSig field is left empty, and instead, the signature information is included in a new component called the witness. A common type of signature used in this context is the SIGHASH_ALL, which is stored within the witness area. This design not only solves the malleability issue but also paves the way for further advancements in the Bitcoin protocol by enabling more complex scripting capabilities and improving scalability.</summary>
    <published>2025-03-28T14:07:00+00:00</published>
  </entry>
</feed>
