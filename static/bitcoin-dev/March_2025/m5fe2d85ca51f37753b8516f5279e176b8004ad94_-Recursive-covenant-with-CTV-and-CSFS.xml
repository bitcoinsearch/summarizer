<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>"Recursive covenant" with CTV and CSFS</title>
  <updated>2025-03-06T02:26:05.140354+00:00</updated>
  <author>
    <name>Antoine Riard 2025-03-05 22:46:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>"Recursive covenant" with CTV and CSFS</title>
    <updated>2025-03-06T02:26:05.140387+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/6a9d4eea-51bd-45d8-b839-4ac3cefdbb7en@googlegroups.com/T/#m5fe2d85ca51f37753b8516f5279e176b8004ad94" rel="alternate"/>
    <summary>In a recent exploration of innovative uses of blockchain technology, particularly within the Bitcoin network, a detailed discussion was presented on the concept of transaction withholding (TxWithhold) smart contracts. This concept revolves around the mechanism where actors, referred to as attackers, aim to withhold a target transaction (tx) for personal gain. The targeted transaction is one that a victim intends to include in the blockchain, for which they are willing to pay a fee. The discussion elaborates on how an attacker can leverage the OP_CHECKSIGFROMSTACK operation to craft a TxWithhold for a Lightning Network (LN) commitment transaction by using the latest valid commitment transaction as the message in the input stack. This allows for the construction of a script that enables the withholding of the transaction and potentially forces a re-commitment to the same tx-withholding script without any hash dependency.

The intricacies of the proposed script involve multiple branches to accommodate various versions of the commitment transaction, specifically targeting at least the latest two no-penalty ones. By publishing this script in an unrelated inscription on the blockchain, the contract becomes accessible to any miner who wishes to engage in TxWithhold anonymously. This method presents a unique opportunity for miners to increase their income based on their hashrate capabilities without directly linking themselves to the act of withholding.

Moreover, the concept extends an invitation to explore further into the realm of TxWithhold applications, such as applying the mechanism to the spend of any coinbase output after surpassing the COINBASE_MATURITY delay of 100 blocks to claim the block reward. Additionally, it challenges readers to devise a protocol that would allow all miners within a specific retarget period to receive a share of the reward from a TxWithhold instance, proportional to their respective hashrate contributions, solely through on-chain inscriptions. 

These discussions not only highlight the potential for new blockchain functionalities but also underscore the importance of understanding and innovating within the constraints and capabilities of existing blockchain technologies. For more detailed insights into this topic, the following resources provide comprehensive information: [GNUsha](https://gnusha.org/pi/bitcoindev/f594c2f8-d712-48e4-a010-778dd4d0cadb@Spark/) and [BitMEX Blog](https://blog.bitmex.com/txwithhold-smart-contracts/).</summary>
    <published>2025-03-05T22:46:00+00:00</published>
  </entry>
</feed>
