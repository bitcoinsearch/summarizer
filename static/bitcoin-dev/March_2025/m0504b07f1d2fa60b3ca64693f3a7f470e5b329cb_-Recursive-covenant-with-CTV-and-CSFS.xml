<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>"Recursive covenant" with CTV and CSFS</title>
  <updated>2025-03-13T02:32:24.713515+00:00</updated>
  <author>
    <name>Anthony Towns 2025-03-12 03:48:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>"Recursive covenant" with CTV and CSFS</title>
    <updated>2025-03-13T02:32:24.713546+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAGXD5f3XScYjj-eFu76vNWyRZG1T_wzeTNfgWCAC3qWKL6_n5w@mail.gmail.com/T/#m0504b07f1d2fa60b3ca64693f3a7f470e5b329cb" rel="alternate"/>
    <summary>In an insightful discussion on the technical intricacies of Bitcoin's proposed enhancements, Nadav Ivgi highlights the original design of the COSHV (CheckOutputSHVerify) implementation as outlined in Jeremy Rubin's proposal. The unique aspect of COSHV, according to the [documentation](https://github.com/JeremyRubin/bips/blob/op-checkoutputshashverify/bip-coshv.mediawiki), lies in its hash functionality. Specifically, the hash appears a push after the CTV (CheckTemplateVerify) opcode. This detail is crucial for understanding how COSHV integrates within the broader context of Bitcoin scripting.

The conversation further explores the potential of combining either APO (Ancestor Proposal Outputs) or CTV with CSFS (Commitment to Future Script Success) to create an advanced mechanism for chain commitments. This combination allows for the creation of an arbitrarily long chain of commitments. Particularly intriguing is the introduction of APO|SINGLE, which enables the addition of inputs and outputs for managing fees and changes without breaking the commitment chain. By discarding the private key associated with CSFS, one can achieve a single reusable commitment, enhancing both efficiency and security within the Bitcoin network.

However, the practical application of these enhancements faces challenges, especially in environments like mutinynet, where certain features such as 0-value anchor outputs might not receive support. The workaround involving CTV to commit to two inputs—with one input's value entirely allocated to fees—presents a less than ideal solution due to its complexity and inefficiency.

Through this exchange, the ongoing discussions within the Bitcoin Development community are brought to light, showcasing the continuous efforts to refine and improve upon the existing infrastructure. Such engagements underscore the dynamic nature of blockchain technology development, where proposals such as COSHV, APO, and CSFS represent steps toward more versatile and secure blockchain protocols.</summary>
    <published>2025-03-12T03:48:00+00:00</published>
  </entry>
</feed>
