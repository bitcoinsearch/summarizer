<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Time to add CSFS to Signet?</title>
  <updated>2025-03-18T02:36:15.755325+00:00</updated>
  <author>
    <name>Weikeng Chen 2025-03-17 03:38:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Time to add CSFS to Signet?</title>
    <updated>2025-03-18T02:36:15.755355+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/YTXcnvj3CZoGdDNe3guQByg4YvYt2SXX8O-PmFe281ihDmVzAgbEpxVje8hO-vXqdaQNOw0pTB7w8G0hgkqZzUbCKbQ83RQx1Zm857ctfpg=@protonmail.com/T/#m555b17614541bd67d39911feb1cc5f39d033b7d8" rel="alternate"/>
    <summary>The discussion at hand is centered around the potential addition of CSFS to signet, particularly in combination with CTV (CheckTemplateVerify), which has been part of signet for several years. The integration of both CTV and CSFS into signet is poised to facilitate experimentation within parts of the LNHANCE project. The combination of these technologies is underscored by their capacity to enhance BitVM operations through the replacement of Winternitz signatures, thereby offering a solution that significantly reduces the potential on-chain data availability overhead. This advancement is not merely technical but opens new avenues for application development that relies on the synergistic use of CTV and CSFS. The conversation stems from a proposal seeking community opinions on this matter, highlighting the importance of collaborative input in the development process within the Bitcoin ecosystem.</summary>
    <published>2025-03-17T03:38:00+00:00</published>
  </entry>
</feed>
