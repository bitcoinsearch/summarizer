<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - New Proposal：String Substring Search in Bitcoin Script - OP_ISSUBSTR</title>
  <updated>2025-03-18T02:37:05.968221+00:00</updated>
  <author>
    <name>Peter Todd 2025-03-17 16:54:00+00:00</name>
  </author>
  <author>
    <name>weichu deng 2025-03-17 16:14:00+00:00</name>
  </author>
  <link href="bitcoin-dev/March_2025/m354bf92c8425a1dbd99afef35cd470694cc6f795_New-Proposal-String-Substring-Search-in-Bitcoin-Script-OP-ISSUBSTR.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2025/m54074b95c67950986b8de277f3affdfd191f4b94_New-Proposal-String-Substring-Search-in-Bitcoin-Script-OP-ISSUBSTR.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - New Proposal：String Substring Search in Bitcoin Script - OP_ISSUBSTR</title>
    <updated>2025-03-18T02:37:05.968263+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/Z9hTu2TjMlLr5-Eg@petertodd.org/T/#m54074b95c67950986b8de277f3affdfd191f4b94" rel="alternate"/>
    <summary>The discourse on Bitcoin scripts emphasizes their role in validation rather than computation, underlining a fundamental approach where operations like substring search can be effectively replaced by concatenation and equality checks. This principle is illustrated by demonstrating that a substring search operation is functionally equivalent to concatenating the target substring with the remainder of the string and validating their equality. Such transformations underscore the adaptability of Bitcoin script operations to achieve desired validation outcomes without altering the core computational paradigm.

A new BIP proposal introduced by a fellow Bitcoin developer seeks to enrich Bitcoin's scripting capabilities by adding two specific string opcodes: OP_ISSUBSTR and OP_ISSUBSTRVERIFY. These proposed opcodes are designed to assess whether one string is a substring of another, enhancing the script's functionality without affecting the blockchain state, thus maintaining security. The execution process detailed for these opcodes involves standard library functions to compare strings, pushing results onto the stack, or throwing an error if verification fails. This initiative stems from the recognition of limitations imposed by the absence of string operations in current Bitcoin scripts, which hampers the development of more sophisticated applications that require such functionalities.

The motivation behind this proposal is multifaceted. Initially, early versions of Bitcoin did support certain string operations, which were later disabled due to security vulnerabilities. The reintroduction of secure, state-unaffected string operations like OP_ISSUBSTR aims to overcome current limitations. This opcode facilitates on-chain string logic processing, eliminating the need for off-chain dependencies. It enables a variety of practical applications, including enhanced multi-signature wallet functionalities, format verification in payment transactions, deterministic outputs from non-deterministic algorithms, streamlined address verification, and easier integration with modern programming languages.

The advantages of introducing OP_ISSUBSTR are profound. By allowing string searches directly within Bitcoin scripts, developers can implement features such as verifying transaction comments for specific substrings or ensuring that transaction target addresses conform to expected formats. Furthermore, this opcode supports the conversion of non-deterministic algorithm outputs into deterministic ones, useful in scenarios where consistent outcomes are crucial. The proposition also highlights how such an addition could lower the barrier for developers familiar with modern programming languages, integrating Bitcoin scripting more seamlessly with contemporary software development practices. Detailed documentation and a reference implementation of the proposed opcode are made available through a [link to the full proposal](https://github.com/Weichu-Deng/bips/blob/OP_ISSUBSTR/bip-yongdong%20wu-OP_ISSUBSTR.md), inviting feedback from the developer community.</summary>
    <published>2025-03-17T16:54:00+00:00</published>
  </entry>
</feed>
