<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Against Allowing Quantum Recovery of Bitcoin</title>
  <updated>2025-09-23T14:37:16.745674+00:00</updated>
  <author>
    <name>Unknown Author 2025-03-25 08:16:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Against Allowing Quantum Recovery of Bitcoin</title>
    <updated>2025-09-23T14:37:16.745704+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CADL_X_cF=UKVa7CitXReMq8nA_4RadCF==kU4YG+0GYN97P6hQ@mail.gmail.com/T/#meba7e6a1879da3c6616f29e4af7d853c84166431" rel="alternate"/>
    <summary>In a recent discussion on the Bitcoin Development Mailing List, an innovative solution was proposed to address the sequencing conundrum associated with tapscript (script path) and its integration into the existing Bitcoin protocol. The suggestion revolves around the implementation of a first Partially Combined Queue (PCQ) scheme for tapscript, coupled with a soft fork that could disable one or more Nothing-Up-My-Sleeve (NUMS) points. This approach is highlighted as non-confiscatory due to its negligible impact under current cryptographic assumptions, providing a safeguard for users against unforeseen changes in key path spending policies.

The essence of this proposition lies in its attempt to mitigate concerns within the Bitcoin community regarding the potential freezing of key path spending. By adopting this method, users would be less apprehensive about being inadvertently affected by such a freeze, which could lead to significant anxiety over the market value of their coins and fears of mismanagement accusations. This solution aims to offer peace of mind to coin holders by ensuring they won't face the dilemma of being the initial or repeated victims of policy shifts, thereby fostering a more secure and stable environment for utilizing the new scheme.</summary>
    <published>2025-03-25T08:16:00+00:00</published>
  </entry>
</feed>
