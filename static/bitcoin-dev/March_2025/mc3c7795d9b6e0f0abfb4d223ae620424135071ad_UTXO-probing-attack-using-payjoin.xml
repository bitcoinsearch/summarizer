<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>UTXO probing attack using payjoin</title>
  <updated>2025-03-29T02:32:25.574431+00:00</updated>
  <author>
    <name>Yuval Kogman 2025-03-28 23:41:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>UTXO probing attack using payjoin</title>
    <updated>2025-03-29T02:32:25.574460+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CALiT-Zq-WmwZCB2uJ4oq+evFerRZTwtKcct8sPRE6n+Jx3CQhQ@mail.gmail.com/T/#mc3c7795d9b6e0f0abfb4d223ae620424135071ad" rel="alternate"/>
    <summary>The discussion revolves around the intricacies of Payjoin, a protocol that offers an alternative to traditional Bitcoin transactions by allowing the receiver to participate in the transaction, potentially enhancing privacy. This method does not obligate the receiver to opt-in for participating; they have the freedom to broadcast the transaction received from the sender as is. The conversation highlights that zero-confirmation considerations remain unchanged regardless of participation in Payjoin, emphasizing the protocol's flexibility.

One significant point raised is the potential for Payjoin to allow for more strategic coin selection, possibly even manual coin control, under BIP 77. However, skepticism exists regarding the effectiveness of coin control in preventing privacy leaks within this context. It's argued that the nature of on-chain payments inherently poses a risk of information disclosure, whether or not Payjoin is utilized. The inherent problem lies in the unavoidable revelation of transaction details at some point, making privacy a challenging goal.

Furthermore, the discussion delves into the technicalities of BIP 77, noting its asynchronous nature and how it accommodates various levels of interaction between sender and receiver, including the signaling of Payjoin support and the optional nature of its adoption. A specific point of contention is the cost associated with transaction replacement, which, according to protocol specifications, becomes significant unless the attacker has substantial control over the network's hash rate. This introduces a safeguard where receivers can set a minimum contribution threshold for the attacker, essentially creating a financial deterrent.

Attention is also given to the implementation challenges faced by applications like the BullBitcoin mobile app, which hasn't fully embraced the Payjoin protocol, particularly highlighting the difference between automated systems and manual peer-to-peer workflows. The importance of implementing fallback transactions to prevent costless attacks is underscored, suggesting room for improvement in software development and protocol documentation to better address security concerns.

Lastly, the conversation touches upon historical analyses of Bitcoin's anonymity and privacy challenges, referencing academic works that lay the groundwork for current discussions. Notably, it corrects a common misconception about the pioneering research in this field, clarifying the timeline and contributions of various scholars towards understanding Bitcoin's privacy implications.

In summary, the dialogue encapsulates a technical examination of Payjoin's potential and limitations, exploring its impact on privacy, protocol adherence, and the broader implications for Bitcoin transaction practices. Through a detailed dissection of protocol specifications, implementation challenges, and historical context, it provides a comprehensive overview of ongoing efforts to enhance transaction privacy in the Bitcoin ecosystem.</summary>
    <published>2025-03-28T23:41:00+00:00</published>
  </entry>
</feed>
