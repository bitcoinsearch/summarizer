<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Against Allowing Quantum Recovery of Bitcoin</title>
  <updated>2025-09-22T12:27:47.327322+00:00</updated>
  <author>
    <name>Sjors Provoost 2025-03-18 12:48:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Against Allowing Quantum Recovery of Bitcoin</title>
    <updated>2025-09-22T12:27:47.327348+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CADL_X_cF=UKVa7CitXReMq8nA_4RadCF==kU4YG+0GYN97P6hQ@mail.gmail.com/T/#m2b4a5ff4df310ec08f0cf15ba7ba1b03722b1bb0" rel="alternate"/>
    <summary>The discussion revolves around the challenges and considerations involved in deploying a Post-quantum cryptography (PQC) scheme within the Bitcoin network, specifically through the use of tapleaf structures in addresses for enhanced security. The primary concern is the decision between implementing a burn consensus rule or opting for a free-for-all approach. The burn consensus rule would prohibit spending from specific types of outputs, such as no `pk()`, bare multisig, `pkh()*`, `wpkhk()` output, in addition to any `tr()` key path outputs. This is aimed at preventing quantum attacks on these vulnerable outputs by making them unspendable, thereby 'burning' them.

A proposed solution involves activating a PQC tapleaf scheme via a Bitcoin Improvement Proposal (BIP) and a soft fork. This would allow wallets to generate addresses that include a PQC tapleaf for future-proofing against quantum attacks. However, this introduces complexity to wallet management and descriptor backups, potentially leading to minimal adoption due to the added intricacies and the invisible nature of adoption, as spending from a PQC path would be an uncommon practice.

Moreover, the mere activation of a PQC tapleaf soft fork is not seen as a comprehensive solution to migrate coins securely in the face of potential quantum computing threats. In scenarios where a quantum attacker could exploit traditional key paths, alternative methods like using a Nothing-Up-My-Sleeve (NUMS) point for the key path or developing a new Taproot version without key path support are suggested. These methods, however, might appeal only to a niche segment of users interested in very long-term storage due to the higher costs associated with their pre-quantum world usage.

The conversation highlights a significant issue with the proposed solutions: they might lead to the activation of soft forks that see little to no practical use. This lack of intended use stems from the additional complexity introduced to wallet operations and the uncertainty regarding which address type is best suited for secure cold storage. The feasibility of widespread adoption of these measures appears doubtful due to these hurdles.

For further technical specification and notation referenced in the discussion, see appendix B of BIP380 available at [https://github.com/bitcoin/bips/blob/master/bip-0380.mediawikiappendix-b-index-of-script-expressions](https://github.com/bitcoin/bips/blob/master/bip-0380.mediawikiappendix-b-index-of-script-expressions). This appendix provides detailed insight into the script expressions covered under the proposed burn consensus rule, shedding light on the technical groundwork necessary for understanding and potentially implementing the discussed security enhancements against quantum threats.</summary>
    <published>2025-03-18T12:48:00+00:00</published>
  </entry>
</feed>
