<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - "Recursive covenant" with CTV and CSFS</title>
  <updated>2025-03-06T02:27:01.314043+00:00</updated>
  <author>
    <name>Antoine Riard 2025-03-05 22:46:00+00:00</name>
  </author>
  <author>
    <name>moonsettler 2025-03-05 17:53:00+00:00</name>
  </author>
  <author>
    <name>Antoine Poinsot 2025-03-05 16:14:00+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2025-03-05 06:14:00+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2025-03-05 00:01:00+00:00</name>
  </author>
  <link href="bitcoin-dev/March_2025/m5fe2d85ca51f37753b8516f5279e176b8004ad94_-Recursive-covenant-with-CTV-and-CSFS.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2025/m8f6067cb69a43bb3a41d6e3826a90d3d07a5d7bf_-Recursive-covenant-with-CTV-and-CSFS.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2025/mb6722ae985badf076827f83d0c754766d0276a77_-Recursive-covenant-with-CTV-and-CSFS.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2025/mf70dd0310b1144b0f4e08596c90a80609aee4e31_-Recursive-covenant-with-CTV-and-CSFS.xml" rel="alternate"/>
  <link href="bitcoin-dev/March_2025/m4979b674dd06ff3cbff550fd152a931de75cec6b_-Recursive-covenant-with-CTV-and-CSFS.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - "Recursive covenant" with CTV and CSFS</title>
    <updated>2025-03-06T02:27:01.314099+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/Z8eUQCfCWjdivIzn@erisian.com.au/T/#u#m4979b674dd06ff3cbff550fd152a931de75cec6b" rel="alternate"/>
    <summary>Recent discussions among Bitcoin developers and enthusiasts have highlighted significant interest and debate surrounding the introduction of new functionalities to the Bitcoin protocol, particularly through the proposals of CheckTemplateVerify (CTV) and CheckSigFromStack (CSFS) as outlined in BIP 119 and BIP 348. These developments aim to enhance Bitcoin's scripting capabilities by introducing covenants with CTV and enabling more flexible verification methods with CSFS. However, a contentious issue has emerged regarding the potential for these improvements to inadvertently enable recursive covenants, which BIP 119 specifically aims to avoid.

A practical demonstration of recursive covenants, utilizing tapscript and specific hash calculations, showcased on MutinyNet, has sparked further discussion about the ecosystemâ€™s readiness for such changes. Critics of BIP 119 argue that its motivations, particularly its stance against recursion and the portrayal of covenants as generally unfit for Bitcoin without substantial evidence, may benefit from reconsideration and realignment with the community's perspectives and the technical realities of these proposals.

Furthermore, the conversation around these BIPs extends into their potential applications beyond just theoretical considerations. For example, the use of CTV and CSFS in supporting projects like "blind-merged-mining" for spacechains represents a tangible application where these features could offer significant benefits, demonstrating the broader implications and innovative possibilities they may unlock for Bitcoin.

On the technical implementation front, alternatives such as bllsh are being discussed, which propose achieving similar outcomes through different mechanisms, like custom transaction message hashing for SIGHASH flags. This suggests an openness within the community to explore various paths to enhance Bitcoin's script capabilities without strictly adhering to the specifics of current BIP implementations.

The ongoing debate encapsulates a broader dialogue within the Bitcoin development community regarding the pace of innovation, the necessity and desirability of certain features, and the optimal strategies for advancing the protocol. While some voices in the community advocate for cautious, incremental improvements, others push for more radical changes that promise to expand Bitcoin's utility and operational paradigms. This dialogue underscores the dynamic nature of Bitcoin development and the diverse viewpoints that contribute to its evolution.</summary>
    <published>2025-03-05T22:46:00+00:00</published>
  </entry>
</feed>
