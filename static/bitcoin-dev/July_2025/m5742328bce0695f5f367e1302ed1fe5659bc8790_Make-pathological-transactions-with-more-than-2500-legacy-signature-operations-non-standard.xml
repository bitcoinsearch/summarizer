<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Make pathological transactions with more than 2500 legacy signature operations non-standard</title>
  <updated>2025-07-30T03:14:14.275203+00:00</updated>
  <author>
    <name>Antoine Riard 2025-07-27 21:40:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Make pathological transactions with more than 2500 legacy signature operations non-standard</title>
    <updated>2025-07-30T03:14:14.275234+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/49dyqqkf5NqGlGdinp6SELIoxzE_ONh3UIj6-EB8S804Id5yROq-b1uGK8DUru66eIlWuhb5R3nhRRutwuYjemiuOOBS2FQ4KWDnEh0wLuA=@protonmail.com/T/#m5742328bce0695f5f367e1302ed1fe5659bc8790" rel="alternate"/>
    <summary>The discussion highlights the complexities and challenges in managing non-standard inputs within multi-party transaction flows, particularly in the context of collaborative transactions like those found in coinjoin or lightning dual-funding scenarios. The concern is raised about participants who deliberately contribute non-standard inputs to a transaction, knowing that the finalizing software may not check for standardness, which could lead to transaction propagation failure. This is identified as a potential Denial of Service (DoS) attack against liquidity allocation processes in systems where liquidity is scarce.

In addressing these concerns, the example of core-lightning's implementation is cited, showing how it performs script sanitization during collaborative flow construction to ensure input standardness. This process is crucial to prevent the DoS attacks described, but it also raises questions about how to effectively distinguish between trusted and non-trusted participants in a transaction without requiring manual intervention by system administrators at inconvenient times.

The conversation further explores the introduction of a new limit on inputs spending legacy scripts as a measure to mitigate such DoS risks. However, the effectiveness of this limit is debated, with examples provided to illustrate how transactions that are currently considered standard might run afoul of this new restriction, thereby becoming "pathological". The correspondence underscores the importance of multi-party transaction software adhering to new limits to avoid facilitating these types of problematic transactions, although it acknowledges that widespread deployment of new policy rules across the network typically lags behind their introduction in bitcoin core releases. 

Moreover, the exchange includes a [link](https://gnusha.org/pi/bitcoindev/CALZpt+HXB=xh3qtxJFM7yUzRu1uj-pPtLQmT=5QV0dNfVuTpfQ@mail.gmail.com/) to an email detailing the DoS threat model in a realistic manner, emphasizing the ongoing challenge of dealing with non-standard inputs and the necessity of maintaining updated and informed protocol practices to safeguard against potential attacks.</summary>
    <published>2025-07-27T21:40:00+00:00</published>
  </entry>
</feed>
