<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)</title>
  <updated>2025-07-08T02:59:26.063455+00:00</updated>
  <author>
    <name>Ethan Heilman 2025-07-07 15:22:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Changes to BIP-360 - Pay to Quantum Resistant Hash (P2QRH)</title>
    <updated>2025-07-08T02:59:26.063486+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAEM=y+W=rtU2PLmHve6pUVkMQQmqT67KOg=9hp5oMspuHrgMow@mail.gmail.com/T/#u#md87223a2649b0469d5b018180ce0bb6919908339" rel="alternate"/>
    <summary>The recent modifications to BIP-360, which is detailed in the pull request available at [GitHub](https://github.com/bitcoin/bips/pull/1670), introduce significant advancements towards enhancing Bitcoin's resistance against potential quantum computing threats. The Pay to Quantum Resistant Hash (P2QRH) has been adapted into a taproot (P2TR) format, excluding the quantum-vulnerable key-spend path. This adjustment ensures that P2QRH outputs are directly committed to the tapleaf merkle root, calculated by taproot, thereby eliminating vulnerabilities associated with quantum computing attacks on key-spend paths.

The structure of P2QRH outputs includes a scriptPubKey, composed of OP_PUSHNUM_3 and OP_PUSHBYTES_32 alongside the tapleaf merkle root. This integration not only leverages the existing taproot framework—bypassing the need for taptweak steps—but also facilitates understanding among those already familiar with P2TR operations. By supporting tapscript and tapleaf, P2QRH extends protection to tapscript outputs against long-exposure attacks, which are anticipated to be feasible before short-exposure attacks. However, it's noted that safeguarding against short-exposure attacks would necessitate the use of Post-Quantum (PQ) signatures.

In line with focusing discussions on P2QRH's implementation, specifications for PQ signatures have been deferred to a future Bitcoin Improvement Proposal (BIP). A provisional plan suggests the introduction of these signatures through redefined OP_SUCCESSx opcodes like OP_CHECKMLSIG, targeting algorithms such as ML-DSA (CRYSTALS-Dilithium) and SLH-DSA (SPHINCS+) for tapscript PQ signature verification. This approach permits a separate activation of PQ signature algorithms, offering a structured method for integrating new signature algorithms without necessitating new tapleaf versions.

The decision to separate PQ signatures from the main discourse of P2QRH allows for an independent evaluation and adoption of the quantum-resistant hash mechanism. It positions the Bitcoin ecosystem to proactively address quantum computing threats without the pressure of immediate consensus changes in response to an emergent situation, thereby mitigating risks associated with delayed action or emergency interventions. For comprehensive details on the modifications and the proposed future directions, reference is made to the BIP-360 document, accessible through its mediawiki render at [GitHub](https://github.com/bitcoin/bips/blob/a375b65e2df340915a74bff5401a8bc83472b1a3/bip-0360.mediawiki).</summary>
    <published>2025-07-07T15:22:00+00:00</published>
  </entry>
</feed>
