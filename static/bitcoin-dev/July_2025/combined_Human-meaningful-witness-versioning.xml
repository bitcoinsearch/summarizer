<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Human meaningful witness versioning</title>
  <updated>2025-07-19T02:59:43.632820+00:00</updated>
  <author>
    <name>Ava Chow 2025-07-18 22:46:00+00:00</name>
  </author>
  <author>
    <name>Greg Maxwell 2025-07-18 22:18:00+00:00</name>
  </author>
  <author>
    <name>Ethan Heilman 2025-07-18 21:58:00+00:00</name>
  </author>
  <link href="bitcoin-dev/July_2025/m6b6dabf0d0cdffae8b1b4779eb7a039b50a043df_Human-meaningful-witness-versioning.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2025/m583052ea85d9b5cb04c9c5caf5b89b75f3398a01_Human-meaningful-witness-versioning.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2025/m85ff10bc45c57c63caf3bb3bffc08d6ce02735b1_Human-meaningful-witness-versioning.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Human meaningful witness versioning</title>
    <updated>2025-07-19T02:59:43.632864+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/d5b68a7e-0eea-465d-95f5-9cb6557697d8@achow101.com/T/#m85ff10bc45c57c63caf3bb3bffc08d6ce02735b1" rel="alternate"/>
    <summary>In recent discussions among Bitcoin developers, there's been a debate regarding the allocation and interpretation of witness versions in Bitcoin addresses, particularly focusing on the flexibility and usability of such systems. Greg Maxwell raised concerns about a suggestion to choose witness versions based on mnemonics. He argued that this approach could undermine the flexibility provided by witness programs, especially when deploying soft forks that involve varying witness program lengths. The distinction between P2WPKH and P2WSH addresses, despite sharing the same witness version, highlights the importance of allowing different rules for different sized witness programs within the same version. The introduction of Pay to Anchor outputs, which uses a 2-byte witness program of version 1, exemplifies the potential for innovation within this framework. Maxwell fears that relying on mnemonics for witness versions could dilute their meaning unless users also consider the length of addresses, an expectation he deems unreasonable.

Ava Chow rebutted, criticizing the current system for causing confusion among fund senders who feel obligated to police address types, thus restricting users from choosing the rules governing their coins. She highlighted a misconception that different use types correlate with specific witness versions, pointing out the unnecessary competition for limited resources and advocating for a more flexible application of witness versions. Chow suggested that the design should accommodate diverse functionalities, like hash tree signature schemes with hidden branches for script commitments, supporting a "key-happy-path or script-fallback" model similar to Taproot.

Ethan Heilman proposed a new criterion for allocating witness versions, aiming for human meaningfulness to facilitate easier identification of output types by looking at an address. He referenced the Bech32 encoding (BIP-0173) that prefixes addresses with "bc1" followed by a character indicating the witness version. Heilman's idea is to assign mnemonic significance to future witness versions, such as using "r" for resistant outputs in Witness Version 3 or other mnemonic associations for subsequent versions. This approach, he argues, would aid in user understanding as the Bitcoin protocol evolves, especially as certain output types are retired or restricted. Heilman draws parallels with the practice of prefixing addresses with "bc" for mainnet and "tc" for testnet, underscoring the importance of clear and intuitive address formats in enhancing user safety and comprehension.</summary>
    <published>2025-07-18T22:46:00+00:00</published>
  </entry>
</feed>
