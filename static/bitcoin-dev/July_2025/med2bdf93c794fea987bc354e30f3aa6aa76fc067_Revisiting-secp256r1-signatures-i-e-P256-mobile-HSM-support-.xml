<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Revisiting secp256r1 signatures (i.e. P256, mobile HSM support)</title>
  <updated>2025-07-26T03:02:35.504666+00:00</updated>
  <author>
    <name>Greg Tonoski 2025-07-23 08:49:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Revisiting secp256r1 signatures (i.e. P256, mobile HSM support)</title>
    <updated>2025-07-26T03:02:35.504699+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/GVA2lG8TET5qUPOU8JlHttBNLbTskqr_dbhzK9aOe_ZsPsNDyk2kWIPwmx3ngTchlGrsAIpubrVl24qmyqVgBvrZ8FT0POeomam2qB6-cqk=@proton.me/T/#med2bdf93c794fea987bc354e30f3aa6aa76fc067" rel="alternate"/>
    <summary>The recent discussion on the Bitcoin Development Mailing List highlights an attempt to reintroduce the previously resolved OP_CAT vulnerability within the Bitcoin protocol. This issue is being presented under the guise of the secp256r1, which, according to the discourse, has no direct correlation with the OP_CAT vulnerability. The mention of Hardware Security Modules (HSM) and other complex technical jargon has been deemed irrelevant to the core issue at hand. It's pointed out that mobile users, for example, already have access to a form of HSM through features like the Samsung Blockchain Keystore, suggesting that the arguments brought forward to justify this change may not hold substantial relevance to the proposed reintroduction of OP_CAT.</summary>
    <published>2025-07-23T08:49:00+00:00</published>
  </entry>
</feed>
