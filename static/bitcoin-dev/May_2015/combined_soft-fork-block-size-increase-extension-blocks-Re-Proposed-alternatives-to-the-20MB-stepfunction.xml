<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - soft-fork block size increase (extension blocks) Re: Proposed alternatives to the 20MB stepfunction</title>
  <updated>2025-10-25T02:33:57.803583+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/May_2015/008360_soft-fork-block-size-increase-extension-blocks-Re-Proposed-alternatives-to-the-20MB-stepfunction.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2015/008359_soft-fork-block-size-increase-extension-blocks-Re-Proposed-alternatives-to-the-20MB-stepfunction.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2015/008357_soft-fork-block-size-increase-extension-blocks-Re-Proposed-alternatives-to-the-20MB-stepfunction.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2015/008356_soft-fork-block-size-increase-extension-blocks-Re-Proposed-alternatives-to-the-20MB-stepfunction.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - soft-fork block size increase (extension blocks) Re: Proposed alternatives to the 20MB stepfunction</title>
    <updated>2025-10-25T02:33:57.803676+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-May/008356.html" rel="alternate"/>
    <published>2015-05-30T03:27:36+00:00</published>
    <summary>In an email conversation between Bitcoin developers Adam Back and Raystonn, Raystonn expresses gratitude to Adam for inventing hashcash, the basis for Bitcoin. He then proposes a different approach to scaling Bitcoin using subchains, explaining the need for a tree structure of blockchains to handle transactions efficiently. Raystonn advocates for multiple 1MB chains over a single 10MB chain, highlighting the advantages of this approach. He believes that the specifics of how the blockchains interact can be figured out in the future.Raystonn also discusses the importance of having an &quot;exit plan&quot; in case a better idea emerges. He suggests a way to reverse the soft fork, ensuring flexibility for future developments. In response, Gavin Andresen recommends implementing the proposed solution in the Bitcoin Core wallet. He suggests coding it and reaching out to various wallet developers to determine the time required to update their software accordingly. Gavin also emphasizes the need for user interface mockups to enhance the user experience.However, Gavin raises concerns about the complexity of the proposed solution. He suggests considering simpler alternatives if they can achieve the same effectiveness. Additionally, Gavin questions the potential risks associated with 20MB extension blocks and whether they pose similar issues as 20MB main blocks.The concept of an &quot;extension block&quot; is discussed as a means to soft-fork an opt-in block-size increase. It offers improved security compared to what Raystonn initially suggested. The extension block operates alongside the existing 1MB block, with users able to transfer bitcoin into and out of the extension block. This approach allows for opt-in block size changes and gives users more choice. However, different validation levels and mining options are available for both 1MB and 10MB transactions.There is a risk associated with non-upgraded users who run 1MB full nodes or those who upgrade but lack sufficient bandwidth to validate 10MB blocks. To address this, receiving funds via the extension block could also be made opt-in. Measures such as UTXO commitments, fraud proofs, and optional coin maturation can enhance the security of 1MB blocks in relation to weaker extension block transactions.Although implementing this approach is more complex than a hard fork, it offers a safer transition and allows users to opt for either higher decentralization with 1MB blocks or larger block sizes with opt-in choices like 10MB or even 100MB for low-value transactions. By making bigger block sizes an opt-in choice, the block size debate can be approached more easily.</summary>
  </entry>
</feed>