<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - UHS: Full-node security without maintaining a full UTXO set</title>
  <updated>2025-10-12T01:35:36.610812+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m27c77d222126dc82c747f0370e4ffc659a7c00d6">
      <author>[bitcoin-dev] UHS: Full-node security without maintaining a full UTXO set Cory Fields</author>
      <timestamp>2018-05-16T16:36:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] UHS: Full-node security without maintaining a full UTXO set Cory Fields" parent_id="mailing-list-2018-05-m27c77d222126dc82c747f0370e4ffc659a7c00d6" anchor="m223cb557e9f9d56f43ae9706e635b7e4b5db99fe">
      <author>Matt Corallo</author>
      <timestamp>2018-05-17T15:28:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="1" position="2" reply_to="[bitcoin-dev] UHS: Full-node security without maintaining a full UTXO set Cory Fields" parent_id="mailing-list-2018-05-m27c77d222126dc82c747f0370e4ffc659a7c00d6" anchor="m64fc0eca861f5ccc84647d244bb11bda6ccd0065">
      <author>Gregory Maxwell</author>
      <timestamp>2018-05-17T16:56:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="2" position="3" reply_to="Gregory Maxwell" parent_id="mailing-list-2018-05-m64fc0eca861f5ccc84647d244bb11bda6ccd0065" anchor="m8b6d2bb76e9cf5ed3dfd6b5f8965309c7435107f">
      <author>Cory Fields</author>
      <timestamp>2018-05-17T17:16:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="1" position="4" reply_to="[bitcoin-dev] UHS: Full-node security without maintaining a full UTXO set Cory Fields" parent_id="mailing-list-2018-05-m27c77d222126dc82c747f0370e4ffc659a7c00d6" anchor="m37d74a00513c16c31d74fb481ab615b30e6d39a6">
      <author>Alex Mizrahi</author>
      <timestamp>2018-05-18T15:42:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="2" position="5" reply_to="Gregory Maxwell" parent_id="mailing-list-2018-06-m64fc0eca861f5ccc84647d244bb11bda6ccd0065" anchor="mb8c512fe23479b4031fbd429a767bfaf02d1a93a">
      <author>Sjors Provoost</author>
      <timestamp>2018-06-07T09:39:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="3" position="6" reply_to="Sjors Provoost" parent_id="mailing-list-2018-06-mb8c512fe23479b4031fbd429a767bfaf02d1a93a" anchor="mfe12af2cd7d85877e48878916badc9fdf50af219">
      <author>Jim Posen</author>
      <timestamp>2018-06-10T23:07:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/June_2018/016107_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016089_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015990_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015980_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015977_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015973_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/015967_UHS-Full-node-security-without-maintaining-a-full-UTXO-set.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016107.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016107.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - UHS: Full-node security without maintaining a full UTXO set</title>
    <updated>2025-10-12T01:35:36.611758+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-June/016107.html" rel="alternate"/>
    <published>2018-06-10T23:07:07+00:00</published>
    <summary>A proposal has been made to change the way unspent transaction outputs (UTXOs) are stored in Bitcoin. The proposal suggests storing only the hashes of UTXOs instead of their full data, which could result in a 40% reduction in the size of a pruned node and less than a 1% reduction in an archive node. However, there are concerns about the 5% ongoing bandwidth increase required by this change and whether it would be worth the reduction in node size. The current transaction mechanisms are considered inefficient, and implementing this change may actually result in a 25% increase in overhead. Despite these concerns, the proposal does not require any changes to the blockchain data structure and could be implemented without permanently marrying the network to it.The proposal is based on separating the roles of the UTXO set, with one role providing proof that previous outputs exist to be spent and the other role providing the actual previous output data for verification. Instead of storing the full dereferenced prevout entries in a UTXO set, the proposal suggests storing their hashes to an Unspent Transaction Output Hash Set (UHS). This approach offers several advantages, including disk and memory savings, faster validation speeds, and more efficient caching. Pay-to-pubkey outputs would also be less burdensome on full nodes, and an even more aggressive pruning mode could be enabled.However, there are some drawbacks to this approach. It may require a few &quot;bridge nodes&quot; during the transition period, and there is a small increase in network traffic. Non-standard output scripts would still need to be sent in full, but they account for only around 1% of all current UTXOs. Despite these drawbacks, the proposal does not introduce any fundamental changes to Bitcoin's security model.Transitioning from the current UTXO model to the UHS model may be challenging but not overly difficult. Wallets would need to hold full prevout data for their unspent outputs, and a new service-bit would be allocated to indicate nodes willing to serve blocks and transactions with dereferenced prevout data appended. The proposal is still in its early stages, and implementation details need to be worked out. Further analysis is needed to determine whether the benefits of this proposal outweigh the costs.In conclusion, the proposal to store only the hashes of unspent outputs in Bitcoin has the potential to reduce node size and improve efficiency. However, there are concerns about the ongoing bandwidth increase and the overhead of the proposed change. Despite these concerns, the proposal could be implemented without permanently changing the blockchain data structure. Further analysis and testing are needed to fully evaluate the benefits and drawbacks of this proposal.</summary>
  </entry>
</feed>