<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - SIGHASH2 for version 1 witness programme</title>
  <updated>2025-09-26T15:47:15.749602+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="mad5ea76001c899bf7fbb30609392c1ef4d4c1994">
      <author>[bitcoin-dev] SIGHASH2 for version 1 witness programme Johnson Lau</author>
      <timestamp>2018-05-31T18:35:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] SIGHASH2 for version 1 witness programme Johnson Lau" parent_id="mailing-list-2018-06-mad5ea76001c899bf7fbb30609392c1ef4d4c1994" anchor="m04f7da7349c41476da9261d199f327ac4ac38f57">
      <author>Russell O'Connor</author>
      <timestamp>2018-06-01T15:03:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="Russell O'Connor" parent_id="mailing-list-2018-06-m04f7da7349c41476da9261d199f327ac4ac38f57" anchor="mf28c3ef0b2714a0949a99f7de67f146b93737fd7">
      <author>Johnson Lau</author>
      <timestamp>2018-06-01T17:03:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="3" position="3" reply_to="Johnson Lau" parent_id="mailing-list-2018-06-mf28c3ef0b2714a0949a99f7de67f146b93737fd7" anchor="m613627fc692bfd6b71b3a5f159f206f8df1ead28">
      <author>Russell O'Connor</author>
      <timestamp>2018-06-01T18:15:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="4" position="4" reply_to="Russell O'Connor" parent_id="mailing-list-2018-06-m613627fc692bfd6b71b3a5f159f206f8df1ead28" anchor="m2543b49b5eb2b9c3debe7f60d2323eb7a9803d43">
      <author>Johnson Lau</author>
      <timestamp>2018-06-01T18:45:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="1" position="5" reply_to="[bitcoin-dev] SIGHASH2 for version 1 witness programme Johnson Lau" parent_id="mailing-list-2018-07-mad5ea76001c899bf7fbb30609392c1ef4d4c1994" anchor="m9ed4ca29aff09464eaf3958c413a117f4fb2ef5c">
      <author>Gregory Maxwell</author>
      <timestamp>2018-07-02T18:23:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="1" position="6" reply_to="[bitcoin-dev] SIGHASH2 for version 1 witness programme Johnson Lau" parent_id="mailing-list-2018-08-mad5ea76001c899bf7fbb30609392c1ef4d4c1994" anchor="m0e0e711f8db0c43f0e1b5f6a04581a22e2e9deef">
      <author>Johnson Lau</author>
      <timestamp>2018-08-30T20:38:00.000Z</timestamp>
    </message>
    <message id="msg_8" depth="2" position="7" reply_to="Johnson Lau" parent_id="mailing-list-2018-08-m0e0e711f8db0c43f0e1b5f6a04581a22e2e9deef" anchor="m3a4dbefe39d13fd8ba486a53e2f2acc170a56ef4">
      <author>Christian Decker</author>
      <timestamp>2018-08-30T20:51:00.000Z</timestamp>
    </message>
    <message id="msg_9" depth="3" position="8" reply_to="Christian Decker" parent_id="mailing-list-2018-08-m3a4dbefe39d13fd8ba486a53e2f2acc170a56ef4" anchor="mc43a58711bd3acce1d744d524b9dc5747fa116e1">
      <author>Johnson Lau</author>
      <timestamp>2018-08-31T07:42:00.000Z</timestamp>
    </message>
    <message id="msg_10" depth="4" position="9" reply_to="Johnson Lau" parent_id="mailing-list-2018-09-mc43a58711bd3acce1d744d524b9dc5747fa116e1" anchor="m6c069da839200250e35afe00bca68fe5d7eb54b9">
      <author>Christian Decker</author>
      <timestamp>2018-09-03T13:53:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Sept_2018/016356_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016347_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016346_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2018/016345_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2018/016188_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016056_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016055_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016054_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2018/016053_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2018/016047_SIGHASH2-for-version-1-witness-programme.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-September/016356.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - SIGHASH2 for version 1 witness programme</title>
    <updated>2025-09-26T15:47:15.750793+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-September/016356.html" rel="alternate"/>
    <published>2018-09-03T13:53:33+00:00</published>
    <summary>A new proposal called SIGHASH2 has been introduced to simplify the existing SIGHASH and the BIP118 SIGHASH_NOINPUT. The format of SIGHASH2 includes bit flags that denote various values, such as the type of hash and the fees. The proposal aims to save block space by using a more efficient DER format for signatures. It builds upon previous proposals like Taproot and Graftroot.The SIGHASH2 format introduces several new features, including the decoupling of INPUT and SEQUENCE, which allows for optional signing of fees and optimization of signature size. Feedback is being sought on whether certain parameters should be committed to scriptCode and/or scriptPubKey, whether LASTOUTPUT and DUALOUTPUT should be added, and whether a fully flexible way to sign a subset of outputs is desired.The proposed SIGHASH2 format provides equivalent values for other SIGHASH schemes, such as Legacy/BIP143 ALL and SINGLE with matching output. The motivation behind these changes includes the need for compact signatures and increased flexibility.It is important to note that the proposal for SIGHASH2 falls under BIP YYY and is a soft-fork, ensuring backward compatibility. The deployment details are yet to be determined, but the reference implementation can be found on GitHub.In another email conversation, Johnson Lau discusses possible improvements to Bitcoin's serialization process. He questions the use of Double SHA256 and suggests the possibility of replacing it with Single SHA256. The conversation also explores the placement of `sigversion` in the format and its length, with Lau suggesting it should be at the beginning for pre-computation and optimization purposes. The idea of adding a separate opcode for CHECKSIGFROMSTACK is also discussed, along with the effectiveness of putting a 64-byte constant at the beginning of SHA256.Overall, these proposals and discussions highlight ongoing efforts to improve the security, flexibility, and efficiency of Bitcoin transactions. Feedback and contributions from the Bitcoin community are essential for further development and implementation.</summary>
  </entry>
</feed>