<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [RFC] Standard for private keys with birth timestamp</title>
  <updated>2025-10-29T13:10:26.456349+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/July_2013/002954_-RFC-Standard-for-private-keys-with-birth-timestamp.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002953_-RFC-Standard-for-private-keys-with-birth-timestamp.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - [RFC] Standard for private keys with birth timestamp</title>
    <updated>2025-10-29T13:10:26.456461+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002953.html" rel="alternate"/>
    <published>2013-07-22T15:12:50+00:00</published>
    <summary>On July 22, 2013, Pieter Wuille suggested a proposal to encode keys data with a birth timestamp using the &quot;@&quot; character. This encoding would not be incorporated into key serialization such as BIP32, as birth timestamps are typically associated with addresses rather than the keys themselves. The proposed encoding method would be particularly useful for non-extended standard serialized private keys and P2SH addresses.The choice of the &quot;@&quot; character as a separator was deliberate, as it is not present in commonly used encodings like base58, hex, or base64. This helps to ensure that the encoded data remains distinct and easily identifiable. However, one drawback of this approach is that there is no checksum-protection for the timestamp. Despite this, the advantage of increased genericity outweighs the potential lack of checksum protection.During discussions on the mailing list, someone suggested looking at RFC 4151, which had an idea on adding time stamps to identifiers. However, the consensus was that the loss of opacity resulting from incorporating timestamps did not justify the utility gained.In summary, the proposal put forward by Pieter Wuille suggests encoding keys data with a birth timestamp using the &quot;@&quot; character as a separator. This encoding method would be particularly useful for non-extended standard serialized private keys and P2SH addresses. Although there is no checksum-protection for the timestamp, the advantage of increased genericity makes this encoding method valuable. Furthermore, while suggestions were made to incorporate timestamps based on RFC 4151, the consensus was that the utility gained did not justify the loss of opacity.</summary>
  </entry>
</feed>