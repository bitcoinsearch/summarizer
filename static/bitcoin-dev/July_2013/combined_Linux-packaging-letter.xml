<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Linux packaging letter</title>
  <updated>2025-10-26T02:49:40.577863+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/July_2013/003010_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/003007_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/003006_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/003005_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/003004_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/003003_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/003002_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002999_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002994_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002992_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002993_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002991_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002990_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002989_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002988_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002987_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002986_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002985_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002984_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002983_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002982_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002981_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2013/002980_Linux-packaging-letter.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Linux packaging letter</title>
    <updated>2025-10-26T02:49:40.577988+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-July/002980.html" rel="alternate"/>
    <published>2013-07-28T18:21:44+00:00</published>
    <summary>The note discussed in the context highlights the potential dangers of packaging Bitcoin node software as part of distribution package repositories. The author emphasizes the need for upstream maintainers to understand the unique testing procedures and requirements to achieve consensus before distributing the software.Bitcoin nodes implement a complex group consensus, and even subtle changes can lead to a failure to reach consensus, posing a security risk. Therefore, it is crucial that unmodified, carefully audited, and tested implementations are used by as much of the network as possible.The note also mentions the importance of using reproducible build systems to ensure that upstream binaries can be audited for backdoors. Distributors are requested to direct users to the upstream-provided binaries instead of packaging Bitcoin node software until they fully understand the testing procedures and requirements.In another post by Mike Hearn, he suggests that packagers should listen to upstreams who complain about packaging, as they may have valid concerns. He acknowledges that some people think their code is more special than it actually is but highlights the unique challenges of packaging Bitcoin due to its dependencies. Hearn suggests that providing more information about dependencies and their specific versions would help packagers better understand the reasons behind the requests and make the packaging process smoother. He emphasizes the importance of communication and cooperation between upstreams and packagers for correct and efficient packaging.Gregory Maxwell contributes to the discussion by discussing the &quot;portability&quot; of Bitcoin to different platforms and the need for a smaller trusted computing base for gitian. He raises awareness about the potential risks of a bug in a database library used by Bitcoin, which could create an inconsistent consensus in the network and lead to a partitioned network. Maxwell also emphasizes the value of testing on new platforms using a full systems testing harness and running regression tests to ensure the integrity of the system.The email conversation between Zooko and an unknown party discusses the potential risks associated with a consensus failure in Bitcoin. The consequences of such an event could be devastating, causing people to lose money and resulting in unpredictable social and technical ramifications. While the most extreme outcomes are unlikely, risk mitigation is crucial for the long-term viability of the system. The conversation highlights the need to navigate the risks associated with Bitcoin carefully and err on the side of caution.In an email exchange between Mike Hearn and Zooko, they discuss the issue of packaging in the software industry. Hearn expresses concerns about inconsistent quality and subtle bugs introduced by non-expert packagers. Zooko agrees and suggests that upstreams should listen to packagers who may have valuable insights. They briefly discuss alternative approaches to packaging.Zooko sends an email thanking Jeff Garzik for his work on a new digestible alternative and asks questions regarding potential risks and consequences of dependency or patch failures in Bitcoin. He expresses concerns about problematic behaviors, the possibility of double-spending attacks, and blockchain forks. The healing process for a blockchain fork is not well understood.Jeff Garzik responds by providing a link to his work-in-progress alternative and expressing interest in publishing it. He mentions his experience with Fedora packaging and aims to provide a more digestible alternative within 24 hours.The email conversation discusses the issue of packaging Bitcoin software by non-experts, leading to inconsistent quality and subtle bugs. The initial draft of a letter to package maintainers was perceived as high-handed, and subsequent versions were created to address concerns and foster cooperation. The conversation emphasizes the importance of open communication and collaboration between upstreams and packagers.Another email exchange focuses on the importance of maintaining the security and integrity of the Bitcoin package while packaging it for Debian. It discusses the use of bundled/embedded libraries, specific architecture requirements, and the significance of reproducible builds to ensure secure distribution.In a thread on the mailing list, Zooko suggests modifying the Bitcoin letter before showing it to package maintainers to avoid being perceived as high-handed. He proposes a joint letter with packagers to address concerns and foster understanding.In an email exchange, the topic of certifying Debian libraries for Bitcoin packaging is discussed. Initially, there is skepticism about the need for certification, but it is later acknowledged that certification may be necessary after all.The discussion on the mailing list focuses on the portability of repeatable build infrastructure and the importance of precise library dependencies in Bitcoin. It highlights the risks of bugfixes in external dependencies and the need for comprehensive testing to ensure the stability of the Bitcoin software ecosystem.The conversation focuses on the applicability of a Linux packaging letter to non-Linux systems like FreeBSD ports and OpenBSD ports. The author suggests that the repeatable build infrastructure is portable to mostly-POSIX-compliant systems but has not been implemented yet. The requirement for precise library dependencies is seen as awkward, and synchronous updates of multiple packages are challenging. It is considered a bug that the package builds on BE systems and then fails tests. The author emphasizes the importance of accommodating packaging issues in the master sources if people are asked not to patch.In July 2013, it was</summary>
  </entry>
</feed>