<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Reconciling the off-chain and on-chain models with eltoo</title>
  <updated>2025-10-12T01:17:14.081736+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="mca4b0a47f9b26ef9f0f51880241bf0316acd88af">
      <author>[bitcoin-dev] Reconciling the off-chain and on-chain models with eltoo Christian Decker</author>
      <timestamp>2019-09-06T13:18:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Reconciling the off-chain and on-chain models with eltoo Christian Decker" parent_id="mailing-list-2019-09-mca4b0a47f9b26ef9f0f51880241bf0316acd88af" anchor="ma49e1cd7e3bd4324b9a1e4dd5c27c75900bdc623">
      <author>ZmnSCPxj</author>
      <timestamp>2019-09-06T14:32:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="3" position="2" anchor="m475244bc9fa1327a73405d65c5ccf6c7edfe6ec4">
      <author>[bitcoin-dev] [Lightning-dev] &quot; ZmnSCPxj</author>
      <timestamp>2019-09-10T01:28:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="5" position="3" anchor="mdcf7bfaffc06552ca27d3c6a854b5642b85e0944">
      <author>ZmnSCPxj</author>
      <timestamp>2019-09-18T05:28:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="6" position="4" reply_to="ZmnSCPxj" parent_id="mailing-list-2019-09-mdcf7bfaffc06552ca27d3c6a854b5642b85e0944" anchor="m6762aa9364535b2ca6aa6e11dc286ec59c4f4770">
      <author>Christian Decker</author>
      <timestamp>2019-09-18T13:44:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="7" position="5" reply_to="Christian Decker" parent_id="mailing-list-2019-09-m6762aa9364535b2ca6aa6e11dc286ec59c4f4770" anchor="m0cfbfb62475357bfef5b0574b13a9d40f8d771d0">
      <author>ZmnSCPxj</author>
      <timestamp>2019-09-19T02:01:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="8" position="6" reply_to="ZmnSCPxj" parent_id="mailing-list-2019-09-m0cfbfb62475357bfef5b0574b13a9d40f8d771d0" anchor="m74097bbb421844dc9bf0cbdb1dbf07ca8710084c">
      <author>Christian Decker</author>
      <timestamp>2019-09-19T10:26:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Sept_2019/017310_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2019/017308_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2019/017305_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2019/017304_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2019/017292_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2019/017286_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2019/017285_Reconciling-the-off-chain-and-on-chain-models-with-eltoo.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-September/017310.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-September/017310.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Reconciling the off-chain and on-chain models with eltoo</title>
    <updated>2025-10-12T01:17:14.082644+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-September/017310.html" rel="alternate"/>
    <published>2019-09-19T10:26:13+00:00</published>
    <summary>The discussion revolves around the challenges and potential solutions in multi-party off-chain mechanisms, specifically focusing on the Lightning Network. One proposed idea is to include an escape hatch in the scripts that allows spending any output attached to the settlement transaction by n-1 participants. However, careful design is necessary to prevent Sybil attacks, as the requirement for n-of-n signatures aims to prevent such attacks. The discussion also highlights the complexity of implementing uncooperative splice-outs and the limited benefits they offer.The participants suggest various solutions to address issues such as uncooperative membership change, fees for each update, privacy concerns, and liveness. Ideas include creating a new mechanism within the mechanism layer, playing a game with duplicate updates, using Tor to disassociate IP addresses from signers, and incorporating mix mechanisms to disassociate funds ownership from identity. Additionally, suggestions are made for cooperative closing of channels, membership changes, and addressing mining rewards, difficulty adjustment, and transaction fees.ZmnSCPxj proposes a future scenario where single-signer ownership of coins on-chain is less common, and instead, people are share-owners of coins. Concepts such as cooperative close, membership change, balance change, uncooperative close, and uncooperative membership change are discussed. The use of eltoo update scheme is also explored, which offers advantages over LN-Penalty for multiple party channels and commonly used types of scripts. The concept involves batched multi-party loop-in/out and the possibility of creating a new mechanism-within-mechanism layer.The email discusses the concept of transaction cut-through and its relevance to offchain systems. It explains how a transaction can be sent to participants, who can then agree to sign a new state with certain changes. Onchain enforcement can be triggered if there is disagreement. The writer also notes the importance of absolute timelocks in contracts and the need for transactions to be signed under 'SIGHASH_NOINPUT' in the offchain update mechanism. The Poon-Dryja system is considered straightforward to implement, while Decker-Russell-Osuntokun is praised as cool.The recently published proof-of-concept of eltoo on signet prompts a discussion on how to build this system. The clean separation of protocol layers provided by eltoo is seen as beneficial for simplifying reasoning and building more complex functionality. The update mechanism in eltoo does not complicate other layers like the penalty update mechanism does, allowing for focused development. Christian suggests using transactions as a means to represent off-chain negotiations and applying them to the off-chain state via cut-through. This approach offers advantages such as reusing existing tools and facilitating experimentation. Overall, Christian believes that eltoo enables the creation of a nicely layered protocol stack that improves flexibility and simplifies security reasoning.</summary>
  </entry>
</feed>