<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP draft - Auxiliary Header Format</title>
  <updated>2025-10-16T02:37:30.821529+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Nov_2014/006912_BIP-draft-Auxiliary-Header-Format.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2014/006911_BIP-draft-Auxiliary-Header-Format.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2014/006910_BIP-draft-Auxiliary-Header-Format.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2014/006909_BIP-draft-Auxiliary-Header-Format.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2014/006908_BIP-draft-Auxiliary-Header-Format.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2014/006907_BIP-draft-Auxiliary-Header-Format.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2014/006905_BIP-draft-Auxiliary-Header-Format.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006905.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006905.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006905.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006905.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006905.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006905.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP draft - Auxiliary Header Format</title>
    <updated>2025-10-16T02:37:30.821629+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-November/006905.html" rel="alternate"/>
    <published>2014-11-12T19:00:48+00:00</published>
    <summary>Tier Nolan has updated the Bitcoin Improvement Proposal (BIP) for adding auxiliary headers in a bandwidth-efficient way. The BIP now covers the specification of the transactions that need to be added, and Nolan plans to create a network BIP the following day. The proposed BIP involves using the last transaction in the block to store the hash of the auxiliary header, with an overhead of only around 104 bytes per header. This is much smaller than embedding the hash of the header in the coinbase of the block.There is a tradeoff between overhead and delayed transactions, as around 12.5% of transactions may be delayed to the next block. To address this, the author suggests adding padding transactions as an improvement. However, there are implementation challenges associated with creating &quot;seed&quot; transactions. Each node needs control over an unspent transaction output (UTXO) to create the final transaction in the block with the digest of the auxiliary header. Therefore, mining nodes would need to include wallets to manage their UTXO entry.There are different approaches for generating signatures for locktime-restricted transactions. One approach involves adding a transaction with a few thousand outputs into the blockchain, with the signatures hard-coded into the software. However, this requires a large table of signatures and trust in the person generating the signature list not to spend the outputs early. Alternatively, mining nodes could include wallets to manage their UTXO entry, allowing them to split a zero value output into many outputs if desired. Another option is for nodes to detect special transactions and use them, such as timelocked transactions that pay to a particular address but are timelocked, with the private key for the output known. However, miners who mine version 2 blocks would not be able to spend them early.In response to initial comments, the author acknowledges the confusion regarding tying in protocol changes and agrees that separating the peer-to-peer (p2p) part from the committed data would make deployment easier. The author also proposes a middle ground where nodes can detect special transactions and use them. This would involve encoding the entire auxiliary header in the block by including the hash in the final transaction and the full auxiliary header in the second-to-last one. This reduces changes to block data storage since the auxiliary header does not have to be stored separately.Overall, the proposed BIP aims to add auxiliary headers to Bitcoin in a bandwidth-efficient manner. It addresses the tradeoff between overhead and delayed transactions, as well as implementation challenges related to creating &quot;seed&quot; transactions and controlling UTXO for private keys. The BIP suggests different approaches for generating signatures and acknowledges the need to separate p2p functionality from the committed data.</summary>
  </entry>
</feed>