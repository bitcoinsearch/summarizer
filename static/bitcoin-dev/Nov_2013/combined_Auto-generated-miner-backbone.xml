<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Auto-generated miner backbone</title>
  <updated>2025-10-22T02:49:25.398145+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Nov_2013/003567_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003566_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003565_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003564_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003563_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003562_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003555_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003554_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003553_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003552_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003551_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003550_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003549_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003547_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003546_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003545_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003544_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003543_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003542_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003541_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003540_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003538_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003537_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2013/003535_Auto-generated-miner-backbone.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Auto-generated miner backbone</title>
    <updated>2025-10-22T02:49:25.398235+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2013-November/003535.html" rel="alternate"/>
    <published>2013-11-05T06:37:43+00:00</published>
    <summary>In various email conversations and discussions, several individuals have explored the concept of selfish mining in Bitcoin and proposed solutions to address the issue. They express concerns about the potential for centralization and the need to improve the security and decentralization of the network.One proposal suggests creating an authenticated miner announced set of nodes to enhance security, but it is acknowledged that this alone is not a complete solution. The importance of improving Bitcoin's security through tighter networks and making it difficult to partition is emphasized. There are debates regarding the idea of building a miner backbone and its potential for centralization. The use of Tor addresses is suggested as a means of authentication and decentralization. It is also mentioned that Google was not involved in the discussion.The conversation delves into the strategies of selfish mining, where a miner keeps newly mined blocks a secret and broadcasts them only after another miner finds a block, in order to orphan the other miner's chain and increase their own revenue. However, it is argued that this strategy may not be profitable in practice due to the need for well-connectedness in all miners. The possibility of de-incentivizing selfish mining by randomizing the order of broadcasts is discussed, along with the use of deterministic pseudo-random mechanisms for choosing between competing chains.The issue of rational motivation of individual miners is addressed, and solutions are proposed to ensure that the majority of miners mine on the non-selfish block. Feedback effects and near-target PoW solutions are suggested as ways to quickly establish consensus and prevent exploitation by selfish miners.Other topics discussed include the vulnerability of blockchain mining, the potential for sybil attacks, and the challenges of estimating hashing power and selecting the majority side. Various proposals and ideas are put forward, but caution is urged in implementing changes to the current system without thorough analysis.Overall, these email conversations highlight the ongoing discussions and efforts to address the issue of selfish mining in Bitcoin, while considering the implications for security, decentralization, and the rational motivations of individual miners.The discussion on Bitcoin development revolves around addressing the issue of selfish miners having an advantage. Peter Todd suggests that miners should mine to extend the block that the majority of hashing power is trying to extend, but current relay rules do not provide this information. He proposes relaying all blocks that meet the PoW target and also relaying block headers that nearly meet the PoW target. This allows miners to estimate the hashing power on each fork and switch if they are not on the majority side, effectively defeating the selfish-miner strategy.Mike Hearn initially proposes using IP addresses of nodes embedded into coinbases to address the miner backbone problem. However, he later realizes that this approach would make the attack described in the paper easier to carry out. Peter Todd suggests two solutions: relaying all blocks that meet the PoW target and relaying block headers that nearly meet the PoW target. Miners should mine to extend the first block they see, but as they receive &quot;near-blocks&quot; that are under the PoW target, they should use them to estimate the hashing power on each fork and switch if it looks like they are not on the majority side. This raises the threshold for a 51% attack back to 51%.Another proposal suggests that when a miner learns of competing branches of the same length, it should propagate all of them and choose which one to mine on uniformly at random. This would remove the advantage of selfish miners who know which chain the other will work on and choose the opposite one. However, this random scheme would only be used in the case of two competing chains, which happens on average every 60 blocks. While this change might result in roughly losing 1% of blocks, it makes it harder for such an attack to happen. The proposal is met with disagreement, as it fundamentally changes the dynamics of how Bitcoin works and does not address the sybil attack issue.In an email conversation, Peter Todd proposes a mechanism for wallets to get non-sybilled peers, discouraging pools from only connecting to other pools and preventing centralization. The proposal suggests using a standard in the coinbase that commits to extra data appended to the block message and stored temporarily in the block database. This semi-transient data would not be part of the chain but could be extended as needed with new &quot;getextra&quot; messages allowing nodes to query for it. The proposed hash for this data can be short since it doesn't have to survive brute force attacks longer than the validity period of the transient data.Another email exchange discusses an alternative protocol change suggested by Mike Hearn in response to the miner backbone paper. He proposes building a miner backbone by embedding IP addresses of nodes into coinbases, allowing automatic connection to IPs from recent blocks. This would link all major pools together without administration overhead. Hearn believes that this mechanism would also allow wallets to get non-sybilled peers. He argues that his proposal has an easier impact to reason about than a fundamental rule change like the one proposed in the paper.In summary</summary>
  </entry>
</feed>