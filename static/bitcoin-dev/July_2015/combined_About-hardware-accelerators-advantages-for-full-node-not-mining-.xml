<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - About hardware accelerators advantages for full-node (not mining)</title>
  <updated>2025-10-17T02:33:49.062824+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/July_2015/009407_About-hardware-accelerators-advantages-for-full-node-not-mining-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009405_About-hardware-accelerators-advantages-for-full-node-not-mining-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009405.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009405.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009405.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009405.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009405.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009405.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009405.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - About hardware accelerators advantages for full-node (not mining)</title>
    <updated>2025-10-17T02:33:49.062918+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009405.html" rel="alternate"/>
    <published>2015-07-13T13:47:57+00:00</published>
    <summary>The processor load for signature verification in Bitcoin involves several operations, including a hash function call, large number maths, and an elliptic curve operation. The longest and most time-consuming step is the elliptic curve operation, which takes about 1ms per signature on normal hardware. However, there is optimized code available that can speed up this process.The core team has created a fast CPU implementation for signature verification, which can be found at https://github.com/bitcoin/secp256k1.git. There has also been discussion about batch verification of signatures, with the potential to compute multiple signatures together. However, it is believed that using a GPU for this purpose would not be beneficial due to communication bandwidth limitations. GPU miners typically benefit from minimal information being sent to the GPU routine.The user is considering using a Jetson TK1, a GPU-powered development board, as a power-efficient full node for Bitcoin. They plan to run bitcoind on the Jetson to achieve high performance-per-watt, as running a pure-CPU implementation of bitcoind would heavily burden the CPU. The user believes that there are computationally intensive and highly parallel functions in Bitcoin that could be outsourced to a GPU. They are interested in potentially forking or contributing to these functions, but they would like to gather opinions on the feasibility of their idea and the recommended configuration before proceeding with coding. Although the user has more background in parallel programming than in the Bitcoin protocol, they want to avoid creating a messy implementation.</summary>
  </entry>
</feed>