<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Fork of invalid blocks due to BIP66 violations</title>
  <updated>2025-10-17T02:33:48.394956+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/July_2015/009342_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009341_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009340_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009339_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009337_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009336_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009333_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009331_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009330_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009329_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009328_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009327_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009326_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009325_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009324_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009323_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2015/009322_Fork-of-invalid-blocks-due-to-BIP66-violations.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009322.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009322.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009322.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009322.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009322.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009322.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009322.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Fork of invalid blocks due to BIP66 violations</title>
    <updated>2025-10-17T02:33:48.395064+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-July/009322.html" rel="alternate"/>
    <published>2015-07-05T01:32:16+00:00</published>
    <summary>In an email exchange between Justus Ranvier and Adam Back, they discussed the scalability problem of Bitcoin and how it can be solved by assuming that SPV clients are able to perform validity checks without any state outside a single transaction or block. They also mentioned the importance of adding commitment information to extra trees and storing additional metadata with each block. The conversation also touched on the potential benefits of making P2SH mandatory for transaction validation.Another email conversation between Justus Ranvier and an unknown recipient discussed the validation of committed UTXO sets and the use of merkle paths to prove their correctness. They also emphasized the need for short proofs for each step and the importance of proving all the necessary commitments.The conversation then shifted to the potential use of fraud proofs to improve blockchain validation for full nodes and SPV nodes. They discussed the use of UTXO set commitments and ordered transactions in the merkle tree to make producing these proofs easier and more efficient.Peter Todd pointed out the reliance of SPV on other nodes to check the rules and the lack of straightforward solutions to this problem. Justus Ranvier suggested that validating full nodes could broadcast proofs to SPV nodes explaining why the branch with the most proof of work is invalid. They also discussed the use of UTXO set commitments and ordering transactions in the merkle tree to simplify the process of proving non-existent outputs or withheld transaction data.The discussion about SPV mining highlighted the risks and potential dangers associated with relying on headers only for mining without fully validating the chain. They discussed the possibility of implementing rules and safeguards to prevent illegal forks and ensure safety during the mining process.Raystonn discussed the need for SPV clients to check node versions for safety and the issue of trusting nodes to check the rules. Gregory Maxwell suggested upgrading the version check when new BIPs go into effect. They also discussed the high percentage of hashrate on the network that is engaged in SPV mining and the recent failure mode due to BIP66 violation.The conversation also touched on the recent Bitcoin fork caused by a large portion of the hashrate engaging in SPV mining. Miners were able to mine on top of the longest chain they knew about without fully validating the blocks. Custom patches were used to increase mining efficiency and compensate for low profit margins.Overall, the conversations revolved around finding solutions to improve scalability, validate transactions, prevent fraud, and ensure the safety and efficiency of blockchain validation processes.</summary>
  </entry>
</feed>