<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>OP_ZKP updates</title>
  <updated>2024-07-23T02:11:45.726345+00:00</updated>
  <author>
    <name>Weiji Guo 2024-07-22 22:38:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>OP_ZKP updates</title>
    <updated>2024-07-23T02:11:45.726378+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/93611162-6029-4308-98b5-3c95b30a2ac9n@googlegroups.com/T/#mb86812df7a3c3f2aaa2ee04feddf48b83132d55c" rel="alternate"/>
    <summary>The discussion centers around the specific requirements for implementing Dory, a cryptographic solution that necessitates the use of pairing-friendly curves, contrasting with secp256k1 which does not support pairing. This distinction underlines the necessity for selecting appropriate cryptographic curves that align with Dory's operational requisites. The emphasis on pairing is critical for Dory's functionality, indicating that alternatives to secp256k1 must be considered to leverage its full capabilities.

Further exploration into the implications of unresolved issues introduces the contemplation of adopting Dory as a viable option. The characteristics of Dory are highlighted, pointing out its transparency and efficiency in terms of proof size, albeit with a caveat regarding its concrete larger size when compared to other solutions. This nuanced examination reveals the complexities involved in choosing a cryptographic framework that not only meets technical specifications but also aligns with the desired attributes of transparency and scalability.</summary>
    <published>2024-07-22T22:38:00+00:00</published>
  </entry>
</feed>
