<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Great Consensus Cleanup Revival</title>
  <updated>2024-07-12T11:51:28.437078+00:00</updated>
  <author>
    <name>Eric Voskuil 2024-07-04 14:45:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Great Consensus Cleanup Revival</title>
    <updated>2024-07-12T11:51:28.437078+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/gnM89sIQ7MhDgI62JciQEGy63DassEv7YZAMhj0IEuIo0EdnafykF6RH4OqjTTHIHsIoZvC2MnTUzJI7EfET4o-UQoD-XAQRDcct994VarE=@protonmail.com/T/#mea0bad41b38ad361dd0bef0d6ddd479296304bcd" rel="alternate"/>
    <summary>The discussion begins with an explanation of how libbitcoin uses a special fork of the secp256k1 library, which is primarily written in C. The necessity for maintaining separate versions on different git branches emerged due to regular breaking changes to its API before it started being versioned, leading to a gradual phase-out of this practice. Highlighting the project's scale, it is mentioned that among 10 repositories and over half a million lines of code, the project predominantly does not maintain external code, with the exception of an embedded qrencode copy and a singular .c file utilized across the entire initiative. This file, mmap.c, is specifically employed for msvc builds.

Continuing, the conversation shifts towards the broader topic of programming languages and their suitability for various tasks within software development. There is an explicit caution against the widespread use of C across an entire codebase due to its lack of memory safety. However, it acknowledges Câ€™s unparalleled utility in understanding low-level memory management, particularly in critical areas of code execution. The narrative contrasts this with the ease of use associated with C++ or Rust, noting however that choosing these languages may not always yield optimal performance or guarantee protection against side-channel attacks. Furthermore, it touches upon the controversies and challenges surrounding language preference, indirectly referring to debates (termed as "language Jihad") without delving into specifics. 

Lastly, the email clarifies that the initial query did not concern the handling or implications of null pointer values in C or C++, whether directly or through abstractions. This point underscores the technical specificity often required in discussing programming languages and their applications, reinforcing the importance of clarity and accuracy in such debates.</summary>
    <published>2024-07-04T14:45:00+00:00</published>
  </entry>
</feed>
