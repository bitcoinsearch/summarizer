<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Sign / Verify message against SegWit P2SH addresses.</title>
  <updated>2025-09-26T15:52:43.718921+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="mddd2c3e917b744671ef80daf8baaaa6138573f2a">
      <author>[bitcoin-dev] Sign / Verify message against SegWit P2SH addresses Dan Bryant</author>
      <timestamp>2017-12-08T18:25:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Sign / Verify message against SegWit P2SH addresses Dan Bryant" parent_id="mailing-list-2017-12-mddd2c3e917b744671ef80daf8baaaa6138573f2a" anchor="m72f85b51bd258df48e5271858fe4c192ef30078a">
      <author>Sjors Provoost</author>
      <timestamp>2017-12-09T12:57:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="1" position="2" reply_to="[bitcoin-dev] Sign / Verify message against SegWit P2SH addresses Dan Bryant" parent_id="mailing-list-2017-12-mddd2c3e917b744671ef80daf8baaaa6138573f2a" anchor="m511860adf9b12554a85f6d68613c9ee1803308c2">
      <author>Pavol Rusnak</author>
      <timestamp>2017-12-19T21:36:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="2" position="3" reply_to="Pavol Rusnak" parent_id="mailing-list-2017-12-m511860adf9b12554a85f6d68613c9ee1803308c2" anchor="mececd8dd747efa6fa805393d4c5574fd698c62ff">
      <author>Mark Friedenbach</author>
      <timestamp>2017-12-19T21:58:00.000Z</timestamp>
    </message>
    <message id="msg_5" depth="3" position="4" reply_to="Mark Friedenbach" parent_id="mailing-list-2017-12-mececd8dd747efa6fa805393d4c5574fd698c62ff" anchor="m9a89fb735868698dbc5b70d64ceb963c542f532b">
      <author>Damian Williamson</author>
      <timestamp>2017-12-21T11:19:00.000Z</timestamp>
    </message>
    <message id="msg_6" depth="4" position="5" reply_to="Damian Williamson" parent_id="mailing-list-2017-12-m9a89fb735868698dbc5b70d64ceb963c542f532b" anchor="mb6e4354b34457b50f86d5b70b99bc4141a31cb55">
      <author>Mark Friedenbach</author>
      <timestamp>2017-12-21T16:29:00.000Z</timestamp>
    </message>
    <message id="msg_7" depth="3" position="6" reply_to="Mark Friedenbach" parent_id="mailing-list-2017-12-mececd8dd747efa6fa805393d4c5574fd698c62ff" anchor="mfea1c6144c9ec291c5ab3edf7a12675a0dc1db72">
      <author>Jason Dreyzehner</author>
      <timestamp>2017-12-21T17:23:00.000Z</timestamp>
    </message>
    <message id="msg_8" depth="2" position="7" reply_to="Pavol Rusnak" parent_id="mailing-list-2017-12-m511860adf9b12554a85f6d68613c9ee1803308c2" anchor="m8ea3c901c08324a55c7101b72d91c7f37aaaffd6">
      <author>Dan Bryant</author>
      <timestamp>2017-12-21T22:22:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Dec_2017/015452_Sign-Verify-message-against-SegWit-P2SH-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015449_Sign-Verify-message-against-SegWit-P2SH-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015448_Sign-Verify-message-against-SegWit-P2SH-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015446_Sign-Verify-message-against-SegWit-P2SH-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015441_Sign-Verify-message-against-SegWit-P2SH-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015440_Sign-Verify-message-against-SegWit-P2SH-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015375_Sign-Verify-message-against-SegWit-P2SH-addresses-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2017/015374_Sign-Verify-message-against-SegWit-P2SH-addresses-.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-December/015374.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Sign / Verify message against SegWit P2SH addresses.</title>
    <updated>2025-09-26T15:52:43.719936+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-December/015374.html" rel="alternate"/>
    <published>2017-12-21T22:22:58+00:00</published>
    <summary>On December 19, 2017, Pavol Rusnak inquired about the progress of a proposed BIP for Sign/Verify message against a SegWit address. The request was made to Dan Bryant via bitcoin-dev mailing list. An early draft for the same was available on Github as well. No further information was provided regarding the status or progress of the BIP.A proposal has been made to improve the message signing system by using an actual Bitcoin transaction with inputs that have the script being signed. This would allow for signing by any infrastructure that supports FORKID signing, including hardware wallets and 2FA signing services, and would also generalize the message signing to allow for multi-party signing setups as complicated as those allowed by Bitcoin transactions. The proposal also suggests that this approach would unify a single approach for message signing, proof of reserve, and off-chain colored coins. Mark Friedenbach made this proposal and noted that there is an issue of size efficiency, but suggested that it could be handled by a BIP specifying a template for constructing the pseudo-transaction and its inputs from a raw script. Pavol Rusnak had previously asked if anyone was writing a BIP for Sign/Verify message against a SegWit address, but it is unclear if this proposal addresses that specifically.The discussion in the Bitcoin-dev mailing list revolves around the signing of messages, specifically against SegWit P2SH addresses. Damian Williamson expresses his opinion that signing a message is an important feature regardless of the method used. He suggests updating it for SegWit addresses while retaining its current simplicity. Another member, Mark Friedenbach, proposes a solution that involves having the signature be an actual bitcoin transaction with inputs that have the script being signed. This would enable signing by any existing infrastructure and allow multi-party signing setups using Partially Signed Bitcoin Transactions. The proposal also unifies a single approach for message signing, proof of reserve, and off-chain colored coins. Dan Bryant asks if anyone is writing a BIP for Sign/Verify message against a SegWit address, to which Pavol Rusnak asks if he is still planning to write it.Damian Williamson suggests that signing a message is an important feature whether it is with Bitcoin Core or some other method. He believes that it would be worthwhile to update it for SegWit addresses. A signed message helps to verify that the message is indeed what was said. In response to a query by Pavol Rusnak about writing a BIP for Sign/Verify message against a SegWit address, Mark Friedenbach suggests a solution for message signing. Instead of rejiggering the message signing system to support non-P2PKH scripts, he proposes that the signature be an actual bitcoin transaction with inputs that have the script being signed. This approach has several benefits like enabling signing by any infrastructure out there, allowing multi-party signing setups, and unifying a single approach for message signing, proof of reserve and off-chain colored coins. While there is an issue of size efficiency, this can be handled by a BIP that specifies a template for constructing the pseudo-transaction and its inputs from a raw script.A recent post on the Bitcoin-dev mailing list discusses the possibility of improving message signing protocols to support non-P2PKH scripts. The author suggests using an actual bitcoin transaction with inputs that have the script being signed and using the salted hash of the message being signed as the FORKID for spin-off with replay protection. This approach would enable signing by any infrastructure out there, including hardware wallets and 2FA signing services, that have enabled support for FORKID signing. It also generalizes the message signing to allow multi-party signing setups and unifies a single approach for message signing, proof of reserve, and off-chain colored coins. Although there's an issue of size efficiency, a BIP can specify a template for constructing the pseudo-transaction and its inputs from a raw script for the single-party message signing application. Finally, the discussion thread asks if anyone is writing a BIP for Sign/Verify message against a SegWit address, which remains unanswered.A member of the bitcoin-dev mailing list, Dan Bryant, inquired about any developments towards a BIP for signing or verifying messages against SegWit addresses. This query was made on 08/12/17 at 19:25 and received a response from Pavol Rusnak, CTO of SatoshiLabs. Pavol asked if Dan still intended to write this BIP. This inquiry is related to the development of Bitcoin Improvement Proposals that suggest new features or changes to the Bitcoin protocol.The post discusses the need for a BIP for Sign/Verify message against a SegWit address, specifically for P2SH-PWPKH and/or native SegWit bech32 addresses. The author suggests that such functionality is important in scenarios where proof of assets is needed, or for cases where a person needs to prove that they are in charge</summary>
  </entry>
</feed>