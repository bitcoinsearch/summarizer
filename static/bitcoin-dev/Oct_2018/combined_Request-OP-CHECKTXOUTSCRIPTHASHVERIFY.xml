<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Request: OP_CHECKTXOUTSCRIPTHASHVERIFY</title>
  <updated>2025-09-26T16:03:14.508201+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0" anchor="m887a8cd50fcceca696317d9e1bff34ef19240d4e">
      <author>[bitcoin-dev] Request: OP_CHECKTXOUTSCRIPTHASHVERIFY kim juan</author>
      <timestamp>2018-10-17T04:26:00.000Z</timestamp>
    </message>
    <message id="msg_2" depth="1" position="1" reply_to="[bitcoin-dev] Request: OP_CHECKTXOUTSCRIPTHASHVERIFY kim juan" parent_id="mailing-list-2018-10-m887a8cd50fcceca696317d9e1bff34ef19240d4e" anchor="mbf45617a8f6d85688dfba9d40f527895dc3598e4">
      <author>ZmnSCPxj</author>
      <timestamp>2018-10-17T05:17:00.000Z</timestamp>
    </message>
    <message id="msg_3" depth="2" position="2" reply_to="ZmnSCPxj" parent_id="mailing-list-2018-10-mbf45617a8f6d85688dfba9d40f527895dc3598e4" anchor="m7848edf1d0f746e94b97039e3e2db723744a99d6">
      <author>kim juan</author>
      <timestamp>2018-10-17T06:58:00.000Z</timestamp>
    </message>
    <message id="msg_4" depth="3" position="3" reply_to="kim juan" parent_id="mailing-list-2018-10-m7848edf1d0f746e94b97039e3e2db723744a99d6" anchor="mafaba795503a48fa3f835a62b006ba15b0c9eddc">
      <author>ZmnSCPxj</author>
      <timestamp>2018-10-17T10:22:00.000Z</timestamp>
    </message>
  </thread>
  <link href="bitcoin-dev/Oct_2018/016451_Request-OP-CHECKTXOUTSCRIPTHASHVERIFY.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2018/016450_Request-OP-CHECKTXOUTSCRIPTHASHVERIFY.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2018/016449_Request-OP-CHECKTXOUTSCRIPTHASHVERIFY.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2018/016448_Request-OP-CHECKTXOUTSCRIPTHASHVERIFY.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-October/016448.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Request: OP_CHECKTXOUTSCRIPTHASHVERIFY</title>
    <updated>2025-09-26T16:03:14.508879+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-October/016448.html" rel="alternate"/>
    <published>2018-10-17T10:22:59+00:00</published>
    <summary>A new opcode, OP_CHECKTXOUTSCRIPTHASHVERIFY, is being proposed for the Bitcoin scripting system. This opcode would allow a transaction output to be spendable only in a predefined manner, potentially reducing the risk of key loss. However, there are concerns about covenants and vaults being visible on-chain and requiring complex script templates, which could increase block space usage. Efforts have also been made to move contract execution off-chain. ZmnSCPxj suggests an improvement to the specification of OP_CHECKTXOUTSCRIPTHASHVERIFY, with plans to focus future SCRIPT updates on SegWit versions. The opcode would succeed if certain conditions are met, such as being a P2WSH with a matching SegWit version and hash, or being the same as the transaction output being spent. If none of these conditions are met, the operation will fail. A sample use case is provided, where Acme has an ordinary key pair and a secure key pair. The private key of the secure key pair remains hidden until it needs to revoke the transaction of the ordinary key pair. To spend the outputs from the ThisRedeemScript, they must be forwarded to the NextRedeemScript. Even if the original key pair is compromised, the attacker can only spend the outputs in this specific way and must publish the transaction. The NextRedeemScript is time-locked, allowing Acme to monitor for unauthorized transactions and react within the specified duration. In certain cases, the combination of both key pairs as one multisig can immediately spend the output regardless of the timelock.The email thread emphasizes that CSV and CTLV have already paved the way for retroactive invalidation, as seen in protocols like HTLC of the lightning network. The proposed opcode could address other problems requiring retroactive invalidation in a less interactive manner than channels. By influencing how outputs can be spent, the opcode could make attacks less rewarding. However, there are still potential privacy concerns, and the use case assumes that P2SH is an exceptional case for custodians like e-commerce merchants and exchanges.</summary>
  </entry>
</feed>