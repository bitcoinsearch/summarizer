<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Compatibility requirements for hard or soft forks</title>
  <updated>2025-10-29T02:58:44.051202+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Nov_2015/011656_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011655_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011653_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011650_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011647_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011646_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011645_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011644_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011643_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011641_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2015/011640_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2015/011639_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2015/011625_Compatibility-requirements-for-hard-or-soft-forks.xml" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Compatibility requirements for hard or soft forks</title>
    <updated>2025-10-29T02:58:44.051337+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-November/011656.html" rel="alternate"/>
    <published>2015-11-03T05:32:18+00:00</published>
    <summary>A strategy for the safe use of Bitcoin involves creating an informational BIP (Bitcoin Improvement Proposal). The guidelines for this proposal include increasing transaction version numbers when possible, considering transactions with unknown/large version numbers as unsafe to use with locktime, and providing reasonable notice before implementing changes. Non-opt-in changes should only be made to protect the network's integrity. Transactions that can be validated without overburdening the network are considered safe to use, even if they are non-standard. However, an OP_CAT script that requires terabytes of RAM to validate is not considered &quot;reasonable.&quot; While these guidelines have generally been well-received, there may be disagreements over what constitutes &quot;protecting the integrity of the network&quot; and &quot;reasonable notice.&quot;Gavin Andresen shared his opinion on the guidelines, agreeing with them but noting potential disagreements over what constitutes &quot;reasonable notice&quot; and &quot;protects the integrity of the network.&quot; He suggested that if Bitcoin were perfect, any valid transaction would remain valid until spent regardless of protocol changes. However, there are cases where this guarantee cannot be met, and it is difficult to determine if these cases pose a real problem in practice. To address these issues, he proposed implementing non-pathological backward compatibility and treating unhandled cases as bugs until triggered.On November 1, 2015, Tier Nolan discussed guidelines for Bitcoin transaction version numbers. According to the guidelines, version numbers will be increased when possible, but transactions with unknown or large version numbers should not be used with locktime. Non-opt-in changes will only be made to protect the network's integrity, and reasonable notice must be given before implementing any changes. Locked transactions that can be validated without burdening the network are considered safe, even if they are non-standard. However, an OP_CAT script requiring terabytes of RAM to validate is deemed unreasonable. Gavin Andresen responded positively to these guidelines but acknowledged potential disagreements over &quot;reasonable notice.&quot;In a Bitcoin-dev mailing list, Tier Nolan suggested giving at least one year's notice to prevent people from losing their money. It was also noted that bitcoin nodes can validate blocks going back to the genesis block, preserving old consensus rules in current code bases. While validating input scripts according to past consensus rules is feasible, handling output may be more challenging. It was proposed that if every consensus rule change had been accompanied by a version number bump, old versions could have been phased out without invalidating signed-but-unbroadcast transactions.The term &quot;locked transaction&quot; may refer to a P2SH output. Justus Ranvier raised concerns about OP_CAT scripts in the UTXO set and the possibility of locked transactions paying to such scripts with lost private keys, potentially making outputs unspendable. There were discussions on preventing rule changes that permanently disable spendability of outputs and the question of who should decide Bitcoin usage standards. Miners were identified as the decision-makers, not developers. Additionally, the question of how close Bitcoin developers want to sail towards being administrators of a virtual currency was posed.The threshold of reasonableness for OP_CAT scripts, which require terabytes of RAM to validate, was discussed in a Bitcoin-dev thread. Concerns were raised about the presence of such scripts in the UTXO set, worth approximately $5 billion. The need to justify not changing the meaning of someone else's outputs and the role of Bitcoin developers as administrators of a virtual currency were debated. It was highlighted that miners have the power to collectively vote on disabling specific UTXOs and changing acceptance rules.Rusty Russell emphasized the importance of clear notification and non-standard transaction invalidation in the future. He suggested that surpassing the benchmark of &quot;reasonable certainty&quot; would involve adding redundancies like OP_CHECKSIG and widespread notification of change. Gavin Andresen raised questions about the requirement of validating one-megabyte transactions under new rules, expressing concern about the potential confiscation of funds in cases where expensive-to-validate transactions with lockTime exist. The benchmark for &quot;reasonable certainty&quot; was proposed as a transaction that would never have been generated by any known software.The author questioned the definition of &quot;short-term changes to the Bitcoin protocol&quot; as a moderation rule and raised the question of whether any one-megabyte transaction valid under existing rules should also be valid under new rules. Arguments were presented regarding expensive-to-validate transactions with lockTime in the future and the unlikelihood of such transactions existing. It was suggested that the requirement should only apply to valid 100,000-byte transactions under old consensus rules. Gavin Andresen implemented BIP101/Bitcoin XT with support for any &quot;non-attack&quot; 1MB transaction.</summary>
  </entry>
</feed>