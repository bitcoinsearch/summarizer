<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - hashcash-newhash</title>
  <updated>2025-10-12T02:34:09.710958+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/May_2020/017903_hashcash-newhash.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2020/017902_hashcash-newhash.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2020/017897_hashcash-newhash.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2020/017893_hashcash-newhash.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2020/017895_hashcash-newhash.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2020/017894_hashcash-newhash.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2020/017890_hashcash-newhash.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2020/017888_hashcash-newhash.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2020/017889_hashcash-newhash.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2020/017887_hashcash-newhash.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2020/017882_hashcash-newhash.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-May/017882.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-May/017882.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - hashcash-newhash</title>
    <updated>2025-10-12T02:34:09.711054+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-May/017882.html" rel="alternate"/>
    <published>2020-05-27T14:12:26+00:00</published>
    <summary>One of the key issues in the world of blockchain and cryptocurrency is the block reward system. Currently, the block reward is determined by the previous hash, but there is a suggestion to change this approach. The author proposes adjusting the block reward from the previous hash to the next, with different rewards being accepted. This could be achieved by calculating an appropriate rate based on the difficulty.The main idea behind this proposal is to ensure that present-day ASICs (Application-Specific Integrated Circuits) become obsolete due to competition. By introducing new hashes at a frequency that prevents the development of new ASICs, it would level the playing field and prevent any one entity from gaining an unfair advantage.Karl Semich, the author of this proposition, is actively seeking feedback and opinions on this matter. He is interested in hearing thoughts and concerns from the blockchain and cryptocurrency community. It is essential to gather various viewpoints to further explore the feasibility and potential implications of this suggested change.Overall, this proposal aims to address the issue of ASIC dominance in the blockchain space by adjusting the block reward system. By incorporating different rewards and preventing the development of new ASICs, it strives to create a fairer and more competitive environment. Karl Semich welcomes input from the community to foster discussion and refine this concept.In another email conversation, a different topic is discussed regarding the possibility of an algorithm change in case of a public mathematical breaking of the current SHA-256 algorithm used in Bitcoin mining. Ariel responds to this by explaining that cryptographic algorithms don't usually break completely, but may have their security reduced through exploits. If an exploit can be deployed as a software patch to most ASICs, the issue can be resolved during the next difficulty adjustment. If not, GPUs and FPGAs can still compete with less adaptive ASICs until new ASICs using the exploit are produced. Ariel also notes that there is no official &quot;public breaking&quot; of a hash function, but rather a gradual loss of security over time. The conversation emphasizes the need to plan for algorithm changes and improve the security of the blockchain in the face of ongoing cryptanalysis research and advancements in computer hardware.The conversation initiated by Karl via bitcoin-dev focuses on the need to plan for future algorithm changes in Bitcoin mining. The discussion revolves around the potential obsoletion of ASICs due to a public mathematical breaking of the SHA-256 algorithm. Karl suggests migrating to new hashing algorithms to increase decentralization and security. However, ZmnSCPxj argues that changing the hash algorithm is not a practical solution. Developing new hash algorithms is costly and requires coordinated hardforks at a high rate, which may put too much power in the hands of developers. ZmnSCPxj believes that non-ASIC resistance is not a significant issue, as miner earnings are determined by the cost of power supply. Instead, the focus should be on improving energy efficiency and increasing access to cheap energy to address the issue of miner centralization. The conversation highlights the importance of considering the impact on existing miners and finding a balance between decentralization and security.Lastly, Karl Semich initiates a discussion with Ariel about the need to plan for an algorithm change in case of a public mathematical breaking of the current SHA-256 algorithm used in Bitcoin mining. Ariel explains that cryptographic algorithms don't typically break completely, but their security may be reduced through exploits. He suggests that if an exploit can be deployed as a software patch to most ASICs, the issue can be resolved during the next difficulty adjustment. If not, GPUs and FPGAs can still compete with less adaptive ASICs until new ASICs utilizing the exploit are produced. The conversation emphasizes the importance of planning for algorithm changes to ensure the security of the blockchain, taking into account ongoing cryptanalysis research and advancements in computer hardware.</summary>
  </entry>
</feed>