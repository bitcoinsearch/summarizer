<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Bootstrapping full nodes post-pruning</title>
  <updated>2025-10-26T02:51:35.545630+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/June_2012/001524_Bootstrapping-full-nodes-post-pruning.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2012/001523_Bootstrapping-full-nodes-post-pruning.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2012/001522_Bootstrapping-full-nodes-post-pruning.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2012/001519_Bootstrapping-full-nodes-post-pruning.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2012/001518_Bootstrapping-full-nodes-post-pruning.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Bootstrapping full nodes post-pruning</title>
    <updated>2025-10-26T02:51:35.545722+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001518.html" rel="alternate"/>
    <published>2012-06-11T20:48:36+00:00</published>
    <summary>The discussion revolves around the use of BerkeleyDB (BDB) in Bitcoin and concerns regarding its inter-version compatibility and lack of space efficiency. It is mentioned that BDB files are not deterministic, which poses a problem for read-only pruned indexes. There is a suggestion to swap out BDB for LevelDB, but uncertainty remains about how deterministic LevelDB is.In 2012, Mike Hearn expressed concerns about introducing unauditable single source material, as it would require users to trust developers without any means to audit the software. He suggests a deterministic process to produce archival chains and introducing commitments to them in the blockchain. This way, a client doing a reverse header sync would encounter a commitment for an archival chain they have and would stop syncing and use the archival chain for points before that. This approach allows for auditable software distribution.The discussion also addresses the issue of bootstrapping newly installed nodes for Bitcoin. Three options are suggested: having special archival nodes that never prune, shipping a post-pruning block chain and transaction index with client downloads, or a combination of both approaches. Some individuals, like Greg, are not in favor of shipping pre-indexed files due to the absence of indexing overhead, but it speeds up the startup process for new users. The goal is to find a solution that balances the benefits and drawbacks of each approach to ensure easy bootstrapping of new nodes.</summary>
  </entry>
</feed>