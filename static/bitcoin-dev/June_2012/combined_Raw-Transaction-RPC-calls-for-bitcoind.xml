<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Raw Transaction RPC calls for bitcoind</title>
  <updated>2025-10-20T02:54:15.649867+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/June_2012/001532_Raw-Transaction-RPC-calls-for-bitcoind.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2012/001531_Raw-Transaction-RPC-calls-for-bitcoind.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2012/001528_Raw-Transaction-RPC-calls-for-bitcoind.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001528.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001528.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001528.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001528.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001528.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001528.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001528.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001528.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001528.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001528.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Raw Transaction RPC calls for bitcoind</title>
    <updated>2025-10-20T02:54:15.649957+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-June/001528.html" rel="alternate"/>
    <published>2012-06-14T20:00:57+00:00</published>
    <summary>On June 14th, 2012, Peter Vessenes emailed Gavin Andresen with a request to add a feature that would allow private keys to be provided at the command line with the signature, effectively turning the client into a wallet-less signature machine. Andresen agreed with the idea and suggested adding a third argument to support an array of private keys. This would enable the client to sign using only the given private key(s) and ignore the bitcoind wallet. The private keys would only remain in bitcoind memory for the duration of the RPC call.Peter subsequently submitted a feature request to allow private keys to be provided at the command line with the signature, enabling the client to function as a wallet-less signature machine. Meanwhile, Gavin Andresen has already submitted a pull request for an API implementation of low-level &quot;raw&quot; transactions. He is seeking feedback on the API and assistance in testing it.The key new method introduced in the pull request is the signrawtx method. It takes a raw transaction, signs as many inputs as possible, and returns the modified raw transaction with signatures. This API is primarily intended for people developing services on top of bitcoind rather than for command line usage. It is important to include appropriate transaction fees when using the sendrawtx method; otherwise, it is likely to fail. For more detailed information, the design document, pull request, and test plan can be found at the following links: - Design doc: https://gist.github.com/2839617- Pull request: https://github.com/bitcoin/bitcoin/pull/1456- Test plan: https://secure.bettermeans.com/projects/4180/wiki/Raw_Transaction_RPC_Test_PlanAdditionally, a list of all new RPC calls, along with their help output and example usage, is available. These include:- listunspent [minconf=1] [maxconf=999999]- getrawtx- createrawtx [[&quot;txid&quot;,n],...] {address:amount,...}- signrawtx [,...]- sendrawtx</summary>
  </entry>
</feed>