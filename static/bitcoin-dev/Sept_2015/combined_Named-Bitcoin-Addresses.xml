<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Named Bitcoin Addresses</title>
  <updated>2025-10-19T02:54:39.117334+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <link href="bitcoin-dev/Sept_2015/010983_Named-Bitcoin-Addresses.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2015/010981_Named-Bitcoin-Addresses.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2015/010980_Named-Bitcoin-Addresses.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2015/010979_Named-Bitcoin-Addresses.xml" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/010979.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/010979.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/010979.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/010979.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/010979.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/010979.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/010979.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/010979.html" rel="alternate"/>
  <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/010979.html" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Named Bitcoin Addresses</title>
    <updated>2025-10-19T02:54:39.117416+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-September/010979.html" rel="alternate"/>
    <published>2015-09-11T15:13:18+00:00</published>
    <summary>The proposal to assign unique names to Bitcoin addresses has faced criticism due to concerns over privacy and security. It is widely known that reusing Bitcoin addresses can compromise both privacy and security, making it essential to avoid such practices. Maintaining a registry of all addresses on one's computer could also present scalability challenges and unnecessary complexity for most network participants. To address the issue of complex and difficult-to-memorize Bitcoin addresses, some suggest developing a name registry system off-chain, connected to bip47 reusable payment codes.This proposed naming convention involves users of the system selecting names from a directory. The names would be sorted based on their first character and total length, allowing for efficient binary search through the data. Once a name is verified and broadcasted to the network, it becomes available for use. However, skepticism remains regarding the potential privacy and security implications of this approach.The problem of complex Bitcoin addresses that are challenging to memorize and share is well-known. In response, the idea of assigning unique names to Bitcoin addresses has been put forward. This proposal involves creating a new address with a user-chosen name, which is then broadcasted to the network for availability verification. The client ensures that the name is valid and not already taken before confirming the transaction. When sending money to a named address, the recipient's wallet references the same directory as the sender's wallet to locate the desired name's OP_RETURN output. If found, the wallet extracts information from the transaction and uses the sending address to complete the Bitcoin transfer. Various solutions for this issue are available on GitHub, with the recommended practice being the use of BIP-70 for sending payment requests.On September 10, 2015, a member of the Bitcoin developer community proposed a solution to the challenge of complex and hard-to-memorize Bitcoin addresses. The suggestion involved assigning unique names to addresses, aiming to simplify sharing and improve user-friendliness. The proposal outlined how a user, such as Bob, could create a named address by entering their preferred name into their wallet and verifying its availability through a directory of previously chosen names. Once verified, Bob's client would send a transaction to an address without a private key but visible on the blockchain, with the name appended as an OP_RETURN output. Alice, for instance, could then easily send Bitcoin to Bob's named address using a binary search method to confirm name availability. The proposal aimed to establish a fully verifiable and independent approach to assigning names to Bitcoin addresses, enhancing usability.Bitcoin addresses can be complex and daunting for new users to memorize and share. To provide a more user-friendly experience, a method has been proposed to assign unique names to Bitcoin addresses. With this named address, users can easily remember it and minimize the risk of sending Bitcoin to the wrong recipient. Creating a named Bitcoin address involves entering the desired name into the wallet, which then checks for availability by referencing a directory of previously chosen names. If the name is available, a transaction with 1 satoshi and a small fee is sent to an address without a private key, with the name appended as an OP_RETURN output. After confirmation, the named address is ready to use.When someone wants to send Bitcoin to a named address, their client consults the same directory and employs a binary search method to locate the OP_RETURN output associated with the desired name. Upon finding the name, the client uses the address linked to that transaction to complete the Bitcoin transfer. This proposed method is entirely verifiable and does not rely on third parties. It offers a solution to the issue of complex Bitcoin addresses and has the potential to enhance the overall user experience. Feedback and inquiries regarding this proposal are encouraged.</summary>
  </entry>
</feed>