<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Fwd: Re: Routing &amp; Beacons</title>
  <updated>2023-07-31T18:59:38.961924+00:00</updated>
  <author>
    <name>laurentmt 2016-05-04 16:00:46+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-05-02 23:27:56+00:00</name>
  </author>
  <author>
    <name>laurentmt 2016-05-01 16:26:50+00:00</name>
  </author>
  <link href="lightning-dev/May_2016/000533_Fwd-Re-Routing-Beacons.xml" rel="alternate"/>
  <link href="lightning-dev/May_2016/000531_Fwd-Re-Routing-Beacons.xml" rel="alternate"/>
  <link href="lightning-dev/May_2016/000528_Fwd-Re-Routing-Beacons.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Fwd: Re: Routing &amp; Beacons</title>
    <updated>2023-07-31T18:59:38.961924+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-May/000528.html" rel="alternate"/>
    <summary>The email exchange between Rusty Russell and LaurentMT focuses on the update of routing tables in the Lightning Network. They discuss a protocol called Pulse Protocol, which involves landmark nodes sending periodic messages to update routing tables. Rusty suggests using channels as landmarks, while LaurentMT introduces the concept of temporal framing.Temporal framing entails landmark nodes sending messages to initiate a new frame and update routing tables. When a node receives the first message associated with a new temporal frame for a particular landmark, it waits for a delay before forwarding the message to its neighbors. This allows them to receive the same message from a better route. After the delay, the node computes the best route to the landmark and forwards the message, defining the temporal frame and best route, to its neighbors. This process repeats for every node, resulting in each node knowing the best route to/from a given landmark.This information becomes useful for onion routing when a node needs to send a payment. The receiver sends their best routes to each landmark node, enabling the sender to compute the best route to reach the receiver. However, the discussion raises questions about how fees are associated with nodes and what fee models could be used. They agree that fees should be collected by the node pushing the HTLC into the channel, allowing them to set the fee unilaterally for that direction.Regarding fee models, the "base+per-satoshi" model creates challenges in defining the best route. One potential solution discussed is using nominal values and forwarding a set of best routes, with a route for each range of amounts between two nominal values. Additionally, they consider associating fees with individual payment channels, where different fees are defined for sending and receiving on each channel. This approach would allow nodes to signal their preference for sending or receiving payments on a given route.The participants also discuss the usefulness of simulations to gain insights into routing table updates in the Lightning Network. While Anthony Towns has conducted some simulations, there are no published results beyond a simple YouTube video. The discussion highlights the need for further research and experimentation in this area.In conclusion, the email exchange delves into the update of routing tables in the Lightning Network, exploring the concept of temporal framing and its implications for onion routing. It also addresses the challenges of fee association and proposes different models to handle fees in a more nuanced manner. The participants discuss the potential benefits of simulations to gain a deeper understanding of routing table updates.</summary>
    <published>2016-05-04T16:00:46+00:00</published>
  </entry>
</feed>
