<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Thoughts on JoinChannels, benefits for LN using Schnorr sig ?</title>
  <updated>2023-07-31T18:54:57.088372+00:00</updated>
  <author>
    <name>Tier Nolan 2016-03-07 12:59:16+00:00</name>
  </author>
  <author>
    <name>Jérôme Legoupil 2016-03-07 12:17:55+00:00</name>
  </author>
  <link href="lightning-dev/March_2016/000460_Thoughts-on-JoinChannels-benefits-for-LN-using-Schnorr-sig-.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000458_Thoughts-on-JoinChannels-benefits-for-LN-using-Schnorr-sig-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Thoughts on JoinChannels, benefits for LN using Schnorr sig ?</title>
    <updated>2023-07-31T18:54:57.088372+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-March/000458.html" rel="alternate"/>
    <summary>In this article, the author explores the need for a method to establish consensus enforced sequence numbers without requiring all participants to be online. Currently, locktime is used to lock transaction outputs, preventing them from being included in the blockchain and enabling double spending with higher sequence numbers. However, the author proposes a soft fork approach that utilizes a locked transactions list committed to in the coinbase.Under this system, individuals would need to pay fees to be placed on the pending list, and these fees would remain consistent even when the final locktime is reached. To implement state changes, the author suggests that only those negatively affected should be required to sign. This could be achieved through a moderator and normal participants system, with the hub likely acting as the moderator. It is important to note that if the moderator signs the same state number twice, there would be penalties.Ideally, users would periodically sign updates to reduce clutter. Additionally, signing state 180 would imply signing all previous states as well. Jerome introduces the concept of multi-party channels called JoinChannels, which have not been extensively discussed in literature. He argues that JoinChannels are more efficient than 2-2 payment channels within the Lightning Network. Unlike 2-2 channels, JoinChannels require only one multisig(3/3) transaction to open, resulting in less blockchain space usage. Furthermore, the signature time for JoinChannels remains consistent regardless of the number of participants, making them more efficient.JoinChannels also allow for larger transfers of value through the Lightning Network due to increased connectivity. In contrast, intermediate 2-2 channels require locked funds in the right direction when transferring from one participant to another. However, intermediate nodes in the Lightning Network can benefit from JoinChannels by pooling their funds into a single channel, raising the threshold for transfer conditions.Nevertheless, a drawback of JoinChannels is that all participants must be online to engage in an LN transfer. This could pose challenges when payments need to traverse multiple JoinChannels with numerous participants. To illustrate the advantages of JoinChannels, Jerome provides an example where a sender cannot send "2" to a receiver due to insufficient funds in the AB channel. However, if participants A, B, and C had established a (3/3) JoinChannel, the sender could have successfully sent "2" to the receiver.Overall, the author highlights the need for consensus enforced sequence numbers without online participation, proposes a soft fork approach, introduces the concept of JoinChannels as an efficient alternative to 2-2 payment channels, and discusses both the benefits and limitations of JoinChannels within the Lightning Network.</summary>
    <published>2016-03-07T12:59:16+00:00</published>
  </entry>
</feed>
