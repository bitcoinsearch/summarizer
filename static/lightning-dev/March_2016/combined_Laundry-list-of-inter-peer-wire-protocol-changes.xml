<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Laundry list of inter-peer wire protocol changes</title>
  <updated>2023-07-31T18:46:08.491441+00:00</updated>
  <author>
    <name>Rusty Russell 2016-04-12 01:36:51+00:00</name>
  </author>
  <author>
    <name>CJP 2016-04-07 20:21:53+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-03-08 05:55:56+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-14 03:28:15+00:00</name>
  </author>
  <author>
    <name>CJP 2016-02-11 22:47:52+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-03 00:55:37+00:00</name>
  </author>
  <author>
    <name>CJP 2016-02-02 17:56:08+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-02 01:11:36+00:00</name>
  </author>
  <author>
    <name>Fabrice Drouin 2016-02-01 16:18:21+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-01 01:02:56+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2016-01-29 04:37:33+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-01-29 02:35:17+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-01-29 01:35:35+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-01-29 01:23:30+00:00</name>
  </author>
  <author>
    <name>CJP 2016-01-27 21:19:42+00:00</name>
  </author>
  <author>
    <name>CJP 2016-01-27 19:34:15+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2016-01-27 14:22:29+00:00</name>
  </author>
  <author>
    <name>Mats Jerratsch 2016-01-27 07:00:53+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2016-01-27 03:07:04+00:00</name>
  </author>
  <link href="lightning-dev/April_2016/000516_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/April_2016/000514_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000469_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000444_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000443_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000425_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000423_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000420_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000419_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000417_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000416_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000413_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000414_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000415_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000412_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000411_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000410_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000409_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000408_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Laundry list of inter-peer wire protocol changes</title>
    <updated>2023-07-31T18:46:08.491441+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-January/000408.html" rel="alternate"/>
    <summary>The development of the Lightning Network protocol involves several discussions and proposals to enhance its functionality. One suggestion is to decouple certain aspects of the protocol, such as micro-transaction channel design, commit conditions, and routing, by creating separate sub-protocols with their own version numbers. Currently, Amiko Pay has already implemented the separation of micro-transaction channel design.There have been multiple suggestions for the inter-node protocol. One proposal is to use protobufs instead of open-coded structures to allow for easier extension with new fields. It is also recommended to prefix the initial key exchange and other packets with a length word to facilitate future extensions. Differences in HTLC negotiation schemes between lnd and lightning-c have been addressed, as well as the ability for initiators to abort new HTLC processes before revocation exchange. Version bits should be exchanged after the initial handshake to indicate compulsory and optional features. Wire protocol crypto has also been discussed, including the use of chacha20/poly1305 instead of AES/HMAC-SHA256 and a separate encoding stream for packet lengths. The choice between shachain and elkrem for generating revocation secrets has been debated, along with proposals regarding anchor tx renegotiation, R value vs keypair, and multi-sig txs.The Amiko Pay protocol aims to provide a decentralized payment network with privacy and security. It uses TCP for the transport layer and JSON with added conventions for serialization. Manual message confirmation is employed to ensure message delivery even after crashes and restarts. The protocol supports bi-directional routing, enabling the transmission of metadata and an arbitrary "receipt" between payer and payee. Multiple channels per link are utilized for efficient transaction routing, and different channel classes facilitate micro-transaction design. The protocol emphasizes the importance of implementation alongside specifications for future compatibility.In an email conversation, Rusty Russell and aj discuss the use of shachain and elkrem for generating revocation secrets. While elkrem is easier to understand, there are issues with the provided code example. The conversation also covers the indexing of shachain and elkrem, as well as the use of a simple secret "redeemhash" and multi-sig txs for escrow-style services.Proposed changes to the Lightning Network protocol include using open-coded messaging and implementing length prefixes for key exchange and packets. The protocol also incorporates security features such as exchanging version bits after key setup, using AES/HMAC-SHA256 or Chacha20/Poly1305 for wire protocol crypto, and separate encoding streams for packet lengths. Shachain and elkrem are tools used for generating revocation secrets, and the protocol allows for re-anchoring of channels and multi-sig transactions. There is also a debate between the R value vs keypair scheme, and individuals are encouraged to clone the lightning-core repository and write up their specifications.Rusty Russell, the developer of the inter-node protocol, is working on finalizing the 1.0 version and has listed proposed changes in an email conversation. These changes include using Protobufs instead of open-coded structures, adding length prefixes for key exchange and packets, supporting multiple in-flight HTLC negotiations, and allowing initiators to abort the HTLC process. Version bits are suggested to be exchanged after key setup for compulsory and optional features. Wire protocol crypto recommendations include AES/HMAC-SHA256 or Chacha20/Poly1305, and a separate encoding stream for packet lengths. Other topics mentioned include shachain vs elkrem, anchor tx renegotiation, R value vs keypair, and multi-sig transactions. Rusty acknowledges the possibility of missed changes and welcomes input from others.</summary>
    <published>2016-04-12T01:36:51+00:00</published>
  </entry>
</feed>
