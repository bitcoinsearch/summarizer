<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - terminology</title>
  <updated>2023-07-31T18:55:49.724668+00:00</updated>
  <author>
    <name>Rusty Russell 2016-03-10 01:13:58+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2016-03-09 06:48:50+00:00</name>
  </author>
  <link href="lightning-dev/March_2016/000485_terminology.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000483_terminology.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - terminology</title>
    <updated>2023-07-31T18:55:49.725674+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-March/000483.html" rel="alternate"/>
    <summary>During a discussion on IRC, the participants were trying to determine the appropriate term to be used in documentation for a specific failure mode. This failure mode occurs when a node sets too tight of a timeout, resulting in the node paying out an outgoing HTLC but being unable to redeem the incoming HTLC. The proposed term of "one-sided redemption" was considered inadequate as it did not effectively convey that money had been lost due to this mistake.To address this issue, the suggestion was made to use the term "avoiding timeout on incoming HTLC when forwarding" or something similar. This term would better describe the situation and highlight the importance of avoiding such mistakes.The conversation then shifted to the risks associated with HTLC timeouts, which can have a cascading effect across the network. If the R preimage received from an offered HTLC is too late to be used for an incoming HTLC, the node may end up with unexpected liability. Therefore, it is crucial for nodes to estimate the deadline for successful redemption for each HTLC they offer and avoid offering an HTLC after this deadline.In addition to discussing terminology, the participants also addressed the confusion caused by the term "revocation preimage." This term is used to invalidate old transactions between pairs of nodes. It was suggested that "void" be used instead to describe the old commitment, with "V" as the symbol for the hash/signature/whatever. However, it was noted that "R" for the HTLC "receipt" seemed to work well and should be retained.Overall, the IRC discussion focused on finding an appropriate term to describe the failure mode related to tight timeouts and emphasized the importance of properly managing HTLC deadlines to avoid one-sided redemption. Additionally, the participants discussed the confusion caused by certain terms and proposed alternative options to improve clarity in documentation.</summary>
    <published>2016-03-10T01:13:58+00:00</published>
  </entry>
</feed>
