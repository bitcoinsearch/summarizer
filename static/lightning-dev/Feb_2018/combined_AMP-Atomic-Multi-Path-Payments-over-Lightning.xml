<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - AMP: Atomic Multi-Path Payments over Lightning</title>
  <updated>2023-07-31T19:45:39.017151+00:00</updated>
  <author>
    <name>Rusty Russell 2018-02-14 00:47:49+00:00</name>
  </author>
  <author>
    <name>Conner Fromknecht 2018-02-13 03:29:28+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-02-13 02:56:04+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2018-02-12 18:05:56+00:00</name>
  </author>
  <author>
    <name>Corné Plooy 2018-02-12 13:30:07+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2018-02-12 09:23:22+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2018-02-12 09:18:49+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-02-12 03:03:37+00:00</name>
  </author>
  <author>
    <name>Cezary Dziemian 2018-02-11 13:58:49+00:00</name>
  </author>
  <author>
    <name>CJP 2018-02-09 10:15:20+00:00</name>
  </author>
  <author>
    <name>Johan Torås Halseth 2018-02-08 18:05:40+00:00</name>
  </author>
  <author>
    <name>Jim Posen 2018-02-08 17:44:21+00:00</name>
  </author>
  <author>
    <name>Johan Torås Halseth 2018-02-08 16:41:41+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-02-08 00:22:47+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-02-07 23:21:43+00:00</name>
  </author>
  <author>
    <name>Jim Posen 2018-02-07 08:36:35+00:00</name>
  </author>
  <author>
    <name>Conner Fromknecht 2018-02-07 02:14:45+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-02-07 00:03:45+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-02-06 07:12:09+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-02-06 05:26:30+00:00</name>
  </author>
  <link href="lightning-dev/Feb_2018/001029_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001025_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001024_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001023_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001022_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001021_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001020_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001019_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001017_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001015_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001012_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001011_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001010_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001009_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001008_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001004_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001001_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/000999_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/000994_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/000993_AMP-Atomic-Multi-Path-Payments-over-Lightning.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - AMP: Atomic Multi-Path Payments over Lightning</title>
    <updated>2023-07-31T19:45:39.017151+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-February/000993.html" rel="alternate"/>
    <summary>Conner Fromknecht and Rusty expressed concerns about the weak proof of payment provided by the current invoicing system in the Lightning Network. They suggested exploring stronger proofs such as utilizing ephemeral keys or the onion packet as a witness. ZmnSCPxj proposed using techniques like ZKCP and ZKCSP to provide atomic access to information in exchange for monetary compensation, but it depends on new cryptography. Christian Decker argued for keeping things simple and sticking to the current system that allows atomic multipath payments using a single secret. He also raised concerns about overpaying and trusting the recipient. Corné Plooy proposed a different signed invoice format for cases where there is already trust between payer and payee.The discussion also touched upon presenting proof-of-payment in court without abandoning existing guarantees. Corné Plooy suggested a new signed invoice format stating several payment hashes and corresponding amounts, with the obligation of the signer to deliver if all payment keys are shown. The court would be the final point of settlement in this case. ZmnSCPxj noted that AMP currently cannot provide proof-of-payment, unlike current payment routing. Jim Posen raised concerns about using two hashes for payment delivery and suggested maintaining atomicity to avoid partial claims.The Atomic Multi-Path (AMP) protocol was developed by Conner Fromknecht and Olaoluwa Osuntokun. It allows sending large payments non-atomically over multiple routes, with the recipient unable to settle any partial payments until all have arrived. AMP does not require fundamental changes to the current protocol and aims for atomicity, avoiding payment hash reuse, order invariance, and non-interactive setup. AMPs eliminate the constraint of a single path and allow logical payments larger than the current maximum value. The sender requires a random identifier, number of partial payments, and total payment value to use the AMP protocol. The receiver reconstructs and settles the payment once all partial payments have arrived.The Lightning Network proposed Atomic Multi-Path Payments (AMP) to send larger payments over multiple channels without reusing payment hashes. AMP splits transactions into micro-payments, improving path diversity and privacy in routing. It reduces strain on individual paths and allows for logical payments larger than the current maximum value. The protocol goals include atomicity, avoiding payment hash reuse, order invariance, and non-interactive setup. AMPs leverage Encrypted Onion Balances (EOBs) to deliver additive shares of a base preimage, ensuring atomicity. The sender divides the total payment value into partial payments using the base preimage and additive shares.The Lightning Network community has been discussing the possibility of implementing multipath payments on the network. Multipath payments would allow for the splitting of a payment into multiple paths, increasing reliability and privacy. However, there are concerns about maintaining atomicity and decorrelation without introducing new primitives. Despite these concerns, the community is enthusiastic about exploring ways to implement multipath payments.There have been discussions on how to solve the issue of proof-of-payment in Lightning payments. One proposal suggests using two hashes to claim the HTLCs, providing a receipt after only one of the HTLCs is claimed. However, there are concerns about linkability and the incentive for the receiver to claim the HTLCs before being fully paid. The feasibility of making multipath payments while retaining proof of payment is also being discussed. Multipath payments could offer increased reliability, privacy, and potential fee savings for larger payments. Changes to the scripts may be necessary to implement these solutions.The Lightning Network is a layer-two scaling solution for Bitcoin that enables faster and cheaper transactions through payment channels. There have been discussions about the possibility of sending $6 payment atomically by combining five $2 channels. While it is possible, proof of payment would be lost in the process. It is suggested that this problem could be resolved with the introduction of scriptless scripts or other decorrelation mechanisms. Multipath payments are seen as having compelling reasons for adoption, such as increased reliability and privacy. There is ongoing exploration of ways to implement multipath payments.A proposal by Olaoluwa Osuntokun introduces a generalized version of a single non-interactive payment scheme that utilizes decoding of extra onion blobs (EOBs) to encode additional data for receivers. The protocol combines split payments and expansion of onion space. Simplifications to the proposal are suggested, such as using the payment preimage as the XOR of 20 bytes with 12 zero bytes prepended. The proposal aims to provide dynamic resizing for senders and requires the receiver to only remember the combination-so-far.The email conversation on the Lightning-dev mailing list discusses the possibility of implementing Atomic Multi-path Payments (AMP) on the Lightning network. AMP requires no fundamental changes to the protocol and is strictly negotiated between sender and receiver. Potential benefits of AMP include reducing the effectiveness of static analysis techniques, increasing possible payment paths, and improving privacy. However, using multiple flows may be more expensive due</summary>
    <published>2018-02-14T00:47:49+00:00</published>
  </entry>
</feed>
