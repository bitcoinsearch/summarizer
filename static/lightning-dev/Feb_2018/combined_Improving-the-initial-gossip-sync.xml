<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Improving the initial gossip sync</title>
  <updated>2023-07-31T19:43:53.904647+00:00</updated>
  <author>
    <name>Christian Decker 2018-02-28 21:38:01+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-02-26 05:37:26+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-02-26 01:43:56+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-02-25 23:23:54+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-02-24 00:45:27+00:00</name>
  </author>
  <author>
    <name>Fabrice Drouin 2018-02-21 18:02:57+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-02-20 06:26:16+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-02-20 01:08:54+00:00</name>
  </author>
  <author>
    <name>Fabrice Drouin 2018-02-19 18:04:39+00:00</name>
  </author>
  <author>
    <name>Fabrice Drouin 2018-02-13 09:01:38+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-02-12 01:45:55+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2018-02-09 11:41:42+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-02-09 01:44:24+00:00</name>
  </author>
  <author>
    <name>Jim Posen 2018-02-07 21:27:05+00:00</name>
  </author>
  <author>
    <name>Fabrice Drouin 2018-02-07 17:50:19+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-02-07 00:24:02+00:00</name>
  </author>
  <author>
    <name>Fabrice Drouin 2018-02-05 15:08:22+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2018-02-05 13:02:38+00:00</name>
  </author>
  <link href="lightning-dev/Feb_2018/001057_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001053_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001052_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001050_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001043_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001036_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001033_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001032_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001030_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001026_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001018_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001016_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001014_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001007_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001006_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/001000_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/000992_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2018/000989_Improving-the-initial-gossip-sync.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Improving the initial gossip sync</title>
    <updated>2023-07-31T19:43:53.905647+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-February/000989.html" rel="alternate"/>
    <summary>The Lightning Network developers are currently discussing different approaches to synchronizing gossip messages between nodes. One approach being considered is using a timestamp mechanism, while another approach favored by Rusty Russell is an Invertible Bloom Lookup Table (IBLT) approach. Rusty believes the IBLT approach is easier to maintain and update.To implement the timestamp mechanism, Christian suggests appending a `routing_sync_timestamp` field to the `init` message. He proposes that this field should be used to filter messages and retransmit old announcements based on the timestamp. However, Rusty argues that the peer would need to know how to skip 4 bytes for future fields, making this approach less desirable.In terms of retransmitting announcements, Rusty dislikes the idea of retransmitting all old `channel_announcement` and `node_announcement` messages due to recent `channel_update`. Christian suggests keeping a filter of received messages to solve this problem. He explains that c-lightning keeps a tree of gossip but not in timestamp order, so they need to actively filter and skip entries less than the `routing_sync_timestamp`.There are also discussions about when to stop retransmitting announcements and whether to remember which ones have been sent to each peer. Christian proposes using highwater and lowwater marks to forward messages within a time window. This would allow multiple `timestamp_routing_sync` messages for different time windows.Fabrice's proposal focuses on initial sync between nodes, specifically for mobile nodes that are often offline and need frequent resyncing. The proposal involves creating filters for channel announcements and using them to optimize learning of new channels. A new feature bit called `use_channel_announcement_filters` would be added along with a `channel_announcement_filters` message. Nodes supporting these filters would exchange and use them to improve the synchronization process.The lightning-dev mailing list discusses the need for a temporary solution to address initial sync issues. Christian proposes adding a new feature bit called `gossip_timestamp` to the `init` message. Laolu suggests using a new message instead of extending the `init` message. Fabrice's proposal focuses on newly created channels and uses an update horizon to filter out older announcements. The mailing list is open for further discussion and proposals.Christian and Fabrice propose a solution to fix initial sync issues while waiting for a more comprehensive sync protocol. They suggest using an optional feature bit to group channel announcements by "buckets" and create filters for each bucket. Nodes supporting these filters would exchange and use them to optimize learning of new channels. This proposal aims to address short-term issues during initial sync, without aiming for perfect synchronization between nodes.The author of the message explains that topology synchronization was initially postponed, and a trivial gossip protocol was implemented instead. They propose adding a new feature bit to extend the `init` message with a `gossip_timestamp`. This timestamp indicates the lowest channel_update and node_announcement timestamp to be sent. The author outlines the logic to forward announcements based on the gossip_timestamp. They also mention the possibility of creating a new `set_gossip_timestamp` message but note the potential for duplicate messages.Overall, the Lightning Network developers are actively exploring various approaches to synchronize gossip messages between nodes. They are considering the benefits and drawbacks of using a timestamp mechanism versus an IBLT approach. Deployment suggestions include appending a `routing_sync_timestamp` field to the `init` message and retransmitting old announcements based on the timestamp. The developers are also investigating ways to actively filter messages and optimize the synchronization process.</summary>
    <published>2018-02-28T21:38:01+00:00</published>
  </entry>
</feed>
