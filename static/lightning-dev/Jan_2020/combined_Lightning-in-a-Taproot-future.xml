<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning in a Taproot future</title>
  <updated>2023-07-31T22:27:40.186736+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-01-27 01:40:30+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-24 09:56:10+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2020-01-12 18:04:41+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-12 15:01:06+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2020-01-10 18:30:07+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-10 15:24:56+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-07 00:26:05+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-06 07:37:20+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2020-01-05 13:58:47+00:00</name>
  </author>
  <author>
    <name>Lloyd Fournier 2019-12-18 03:51:56+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-17 15:05:17+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2019-12-17 14:02:29+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2019-12-16 01:27:59+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-15 15:43:07+00:00</name>
  </author>
  <link href="lightning-dev/Jan_2020/002453_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002450_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002424_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002423_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002422_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002421_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002415_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002414_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002412_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002392_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002387_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002385_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002376_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002375_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning in a Taproot future</title>
    <updated>2023-07-31T22:27:40.186736+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002375.html" rel="alternate"/>
    <summary>The Lightning Network is currently exploring various improvements and upgrades to enhance its performance, security, and privacy. One area of focus is the combination of MuSig and PTLCs. MuSig enables the generation of multiple signatures in parallel, reducing communication rounds. PTLCs are being considered as a replacement for HTLCs and require all nodes along the payment path to support them. The use of script paths and taproot is also being discussed to minimize round trip delays.There are discussions regarding the privacy and security of the Lightning Network. A proposal for a "maximally private" channel using absolute locktimes was deemed insecure due to the existence of the "revoked by then" branch. Instead, relative-locktime requirements for revocable outputs were suggested. The privacy of mutual closes is considered good, but there may be an increase in accidental unilateral closes as the network becomes more stable, necessitating a re-evaluation of privacy for unilateral closes in the future.The implementation of Schnorr and Taproot at the base layer of Bitcoin is seen as crucial for the Lightning Network. Schnorr signatures enable multiple inputs to be signed with a single signature, reducing transaction size and fees. Taproot allows for more complex smart contracts with increased privacy. These updates will improve the scalability, privacy, and efficiency of the Lightning Network, making it more usable for everyday transactions.In conclusion, the Lightning Network is actively exploring improvements and upgrades, such as MuSig and PTLCs, to enhance performance, security, and privacy. The implementation of Schnorr and Taproot in Bitcoin is considered essential for the continued development and success of the Lightning Network.The Lightning Network community is engaged in discussions on optimizing performance while maintaining security and privacy. One focus is the taproot update, which offers options such as updating the current Poon-Dryja mechanism to use Schnorr signatures or keeping the current mechanism with SegWit v0 and updating to Schnorr/SegWit v1 with Decker-Russell-Osuntokun. Different options are being considered, including adding new modules for Decker-Russell-Osuntokun with HTLCs and PTLCs or adding PTLCs to Poon-Dryja channels. However, if the Poon-Dryja mechanism is updated to use Schnorr, certain issues need to be addressed. One potential solution is using MuSig between channel participants. Further discussion is required to evaluate the tradeoffs associated with these options.The article also discusses off-chain updateable cryptocurrency mechanisms like Poon-Dryja and Decker-Russell-Osuntokun, and their compatibility with relative locktimes. While the desirable case is the use of relative-locktime branch in revocable outputs, this compromises privacy as there is no common use of activated relative locktimes for ordinary spends. The discussion focuses on PTLCs and their implementation in the Lightning Network. The tradeoffs between "purely scriptless" PTLCs and tapscripted timelock branch PTLCs are explored, highlighting the need for further understanding before selecting the best option that balances privacy and latency.To reduce round trips, options include not using any form of composable MuSig or using Multi-R composable MuSig with a limit on the number of commitments that can be sent. It is emphasized that further discussions are necessary before implementing and evaluating specific options in alpha software.</summary>
    <published>2020-01-27T01:40:30+00:00</published>
  </entry>
</feed>
