<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Decoy node_ids and short_channel_ids</title>
  <updated>2023-07-31T22:32:27.737793+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2020-02-13 10:45:46+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-02-13 10:43:58+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-13 09:44:23+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-13 04:49:47+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-11 10:58:14+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-10 03:40:10+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-02-06 02:38:30+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-05 09:00:32+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-05 01:28:43+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-04 14:50:26+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-04 14:09:16+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-04 04:29:09+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-04 04:04:31+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-03 15:05:25+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-02-03 14:51:33+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-02-03 14:06:50+00:00</name>
  </author>
  <author>
    <name>m.a.holden 2020-02-03 06:50:20+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-02-03 05:31:04+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-03 04:37:56+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-01-20 16:44:53+00:00</name>
  </author>
  <link href="lightning-dev/Feb_2020/002540_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002539_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002538_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002535_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002519_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002512_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002504_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002502_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002501_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002499_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002497_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002495_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002494_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002493_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002492_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002491_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002490_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002489_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002488_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002435_Decoy-node-ids-and-short-channel-ids.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Decoy node_ids and short_channel_ids</title>
    <updated>2023-07-31T22:32:27.737793+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002435.html" rel="alternate"/>
    <summary>In a series of email conversations, several individuals discuss the issue of privacy in Bitcoin Lightning Network transactions and propose various strategies to address it. The main concern is preventing correlation between different invoices by an adversary named Carol. One suggestion is to use a different node_id for each invoice, but it is noted that the lowest bits of the node ID are embedded in the SCID and should not be openly revealed to Carol.To hide from Bob, another participant named Bastien suggests using Tor and a different node_id for each channel opened with Bob. The importance of privacy in Bitcoin transactions is emphasized throughout the discussion, along with the need for effective strategies to maintain it.The conversation also touches on the topic of hiding the node ID of the last node. Bob can provide an encryption key to peers with unpublished channels, which they can XOR with their own true node ID and use the lowest bits in the SCID. The possibility of Alice using multiple Bobs to enhance her privacy is also explored.Another proposal is made by Mark Holden, suggesting a way for Alice and Bob to agree on a set of 256 scids without additional messages or changes to existing ones. This involves negotiating a random integer 'r' on open_channel and using the `temporary_channel_id`. Bob can compute 256 scids using a specific formula, resulting in a low chance of scid collisions between channels. A cuckoo filter is suggested as a more efficient alternative to keeping a map of 256 scids for each channel.Bastien Teinturier suggests a new scheme to prevent channel probing attacks in the Lightning Network, involving payment secrets and decoy keys to create decoy short channel IDs. The issue of assigning short channel IDs is also addressed, with the proposal of using blocknum=0 to identify special SCIDs and reserving the rest for the lowest 40 bits of the X-coord of the destination node ID. The use of short channel IDs as a reference to the next node in onion routing is mentioned, along with the potential for stealing additional bits from blocknum to increase identification capacity.The conversation continues with Bastien proposing an improved scheme for payment channel routing. The use of payment secrets and decoy node IDs is suggested to prevent leakage of real information. However, there is a need to address the issue of assigning SCIDs without revealing them trivially. The suggestion is made for Bob to keep a mapping and restrict each peer to 256 live SCIDs.In another email, the author explores enhancements for unannounced channels in the Lightning Network, which are useful for mobile nodes and help break linkability between on-chain and off-chain payments. The current implementation is considered broken as invoices leak both the node_id and short_channel_id. An alternative design is proposed, involving the use of decoy node IDs and short_channel_ids to prevent leakage. Improvements to the scheme include leveraging the payment_secret to reduce the size of the onion payload.Overall, the conversations highlight the ongoing efforts to address privacy concerns in Bitcoin Lightning Network transactions and propose various strategies and enhancements to achieve it effectively.</summary>
    <published>2020-02-13T10:45:46+00:00</published>
  </entry>
</feed>
