<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Setting to_self_delay and cltv_expiry prior to channel opening</title>
  <updated>2024-02-22T01:50:40.758645+00:00</updated>
  <author>
    <name>Keagan McClelland 2024-02-14 21:44:06+00:00</name>
  </author>
  <author>
    <name>Michael Folkson 2024-02-01 11:30:44+00:00</name>
  </author>
  <link href="lightning-dev/Feb_2024/004278_Setting-to-self-delay-and-cltv-expiry-prior-to-channel-opening.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2024/004277_Setting-to-self-delay-and-cltv-expiry-prior-to-channel-opening.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Setting to_self_delay and cltv_expiry prior to channel opening</title>
    <updated>2024-02-22T01:50:40.758686+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2024-February/004277.html" rel="alternate"/>
    <summary>The discussion underscores the complexities involved in negotiating configuration options for channel openings within the Lightning Network, with a particular focus on timelock settings such as `to_self_delay` and `cltv_expiry`. These configurations strike a critical balance between securing transactions against potential fraud and minimizing the undesirable effects of capital being locked up for extended periods. The significance of these timelock settings escalates during periods of high onchain fees, impacting both transaction costs and confirmation times. There is an ongoing debate about the default timelock settings across various Lightning implementations and the flexibility afforded to node operators in adjusting these defaults. An essential aspect of this conversation is whether there should be a standardized protocol for negotiating these settings prior to establishing a channel. 

A key issue raised is the transparency of timelock preferences during the negotiation process. It's crucial for parties to understand if a channel opening is rejected due to incompatible timelock settings. The question extends to whether these negotiations should be integrated within the peer-to-peer protocol or conducted through separate communications before agreeing to use the Lightning protocol for channel creation. This inquiry into the negotiation and communication of timelock settings is vital for accommodating diverse operator preferences and adapting to the fluctuating fee environment on the blockchain.

For those seeking further insights into Bitcoin and its underlying technologies, the email includes a link to educational resources available at [portofbitcoin](https://www.youtube.com/@portofbitcoin). Michael Folkson's contact information is also provided, along with his GPG key for secure communication, highlighting the importance of security and privacy in these discussions.</summary>
    <published>2024-02-14T21:44:06+00:00</published>
  </entry>
</feed>
