<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Breach of contract?</title>
  <updated>2023-07-31T18:10:01.215407+00:00</updated>
  <author>
    <name>Rusty Russell 2015-07-30 02:33:21+00:00</name>
  </author>
  <author>
    <name>Joseph Poon 2015-07-29 19:50:06+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-28 01:38:05+00:00</name>
  </author>
  <author>
    <name>Joseph Poon 2015-07-27 19:37:57+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-27 01:50:54+00:00</name>
  </author>
  <author>
    <name>Joseph Poon 2015-07-26 14:57:53+00:00</name>
  </author>
  <author>
    <name>Christopher Jamthagen 2015-07-25 20:59:16+00:00</name>
  </author>
  <link href="lightning-dev/July_2015/000083_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000077_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000073_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000070_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000067_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000065_Breach-of-contract-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000064_Breach-of-contract-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Breach of contract?</title>
    <updated>2023-07-31T18:10:01.215407+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000064.html" rel="alternate"/>
    <summary>The discussion revolves around the implications of using Hashed Timelock Contracts (HTLCs) in the Lightning Network. Two main implications are highlighted. Firstly, constant monitoring of the blockchain is required due to the low interval of HTLC-TIMEOUT. This is necessary to avoid losing money, especially when the channel balance is heavily tilted in one direction. Secondly, using HTLCs results in doubling the timelock on LN payments, which can lead to higher fees and potentially less graph centralization.Joseph Poon and Rusty Russell discuss the interlink between HTLC timeout and OP_CSV revocation. They also address the need for a contestation period to prevent older versions of transactions from being broadcasted through credible threats. The email exchange highlights the importance of properly delaying outputs redeemable by a party and provides fixes for issues found in the initial draft.The conversation further explores the risk of broadcasting older commitments and stealing HTLC payouts. To mitigate this risk, it is suggested to have reserve funds available and ensure that the total value of HTLCs remains below one's own reserve balance. This solution works better with dual-funder models and requires shallow rebalancing for single-funder scenarios. The email also advises maintaining a permanent reserve above the value encumbered in HTLCs to maximize security against uncooperative counterparties.Christopher Jamthagen raises concerns about the security and invalidation of HTLCs. He questions the ability of receivers to use the pre-image to spend the output after the CLTV has expired. Rusty Russell agrees with this concern but suggests eliminating the HTLC through a commitment transaction update. Adding an additional delay is considered overengineering.Another email conversation discusses the design of HTLCs and their invalidation process. It is explained that HTLCs have a built-in contestation period where the party broadcasting the Commitment Transaction must wait before the payment goes back to themselves. The implications of dual anchor/funding versions and the use of OP_CSV are also explored. The tradeoff between increased time delay and blockchain monitoring frequency is discussed, along with the benefits of a SIGHASH_NOINPUT model.Overall, the discussions highlight various implications and potential solutions related to the use of HTLCs in the Lightning Network, addressing issues such as constant monitoring, reserve balance, invalidation, and security concerns.</summary>
    <published>2015-07-30T02:33:21+00:00</published>
  </entry>
</feed>
