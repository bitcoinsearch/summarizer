<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - #PickhardtPayments implemented in lnd-manageJ</title>
  <updated>2023-08-01T00:20:16.262945+00:00</updated>
  <author>
    <name>Vincent 2022-05-18 09:31:37+00:00</name>
  </author>
  <author>
    <name>Carsten Otto 2022-05-17 10:46:08+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-05-17 07:23:07+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2022-05-16 20:59:05+00:00</name>
  </author>
  <author>
    <name>Carsten Otto 2022-05-15 20:01:58+00:00</name>
  </author>
  <link href="lightning-dev/May_2022/003587_-PickhardtPayments-implemented-in-lnd-manageJ.xml" rel="alternate"/>
  <link href="lightning-dev/May_2022/003586_-PickhardtPayments-implemented-in-lnd-manageJ.xml" rel="alternate"/>
  <link href="lightning-dev/May_2022/003585_-PickhardtPayments-implemented-in-lnd-manageJ.xml" rel="alternate"/>
  <link href="lightning-dev/May_2022/003584_-PickhardtPayments-implemented-in-lnd-manageJ.xml" rel="alternate"/>
  <link href="lightning-dev/May_2022/003583_-PickhardtPayments-implemented-in-lnd-manageJ.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - #PickhardtPayments implemented in lnd-manageJ</title>
    <updated>2023-08-01T00:20:16.262945+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-May/003583.html" rel="alternate"/>
    <summary>In a recent email thread on the Lightning-dev mailing list, members discussed the topic of routing payments in the Lightning Network. The discussion covered various aspects such as channel scoring, liquidity estimation, and path-finding algorithms. Eclair has implemented a set of heuristics around channel scoring and has been experimenting with channel liquidity estimation for over half a year. However, it is difficult to determine the effectiveness of these heuristics without real payment experiments on the mainnet. Vincent Palazzo is working on abstracting the collection of necessary information in a common way for research sharing and verification across different implementations.Another post related to the Lightning Network discussed the #PickhardtPayments approach, which aims to optimize multi-path payments (MPPs) for reliability and cost efficiency. The implementation of #PickhardtPayments in lnd-manageJ offers an optimal and computationally feasible method for MPPs. It considers liquidity information and uses a minimum-cost flow algorithm to find routes. While the code is highly experimental and currently only works with lnd, it has received positive feedback so far.The latest version of lnd-manageJ now includes channels that charge a base fee. To make this work, the implementation assumes the worst-case scenario, adjusts the fee rate for route computation, and uses a linear penalty in the quantization amount. A Dockerfile has been added to facilitate experiments, and users can tweak the lnd-manageJ.conf file and review available options on GitHub. The implementation also considers route/hop hints provided in payment requests, but it only works for "route hints" containing a single hop. Users are advised to issue a test payment before measuring the time it takes to send out any real payment, as lnd-manageJ needs to request the Lightning Network graph from lnd, which takes a few seconds.The Lightning Network community continues to explore new approaches to improve payment efficiency, lower fees, and enhance scalability. Carsten Otto's PickhardtPayments proposal aims to minimize the number of transactions required for MPPs while ensuring reliability. The code is complex and currently only works with lnd, but it has garnered positive feedback and support from the community. Switching to a minimum-cost flow routing algorithm can be useful for relaying large payments that need to be split aggressively to reach the destination. However, the economic viability of making such payments on the Lightning Network should be considered. Eclair's heuristics and testing system for channel scoring and liquidity estimation demonstrate ongoing innovation in routing payments.In conclusion, the Lightning Network community is actively researching and innovating new approaches to enhance payment efficiency. The recent discussions on routing payments have highlighted the importance of channel scoring, liquidity estimation, and path-finding algorithms. Eclair's implementation of heuristics and testing system, as well as Vincent Palazzo's work on abstracting information collection, contribute to this ongoing research. The #PickhardtPayments approach, implemented in lnd-manageJ, offers an optimal method for MPPs by considering liquidity information and using a minimum-cost flow algorithm. While still experimental, the results show promise. The latest version of lnd-manageJ includes support for PickhardtPayments and addresses various considerations, such as base fee channels and route hints. Overall, these developments reflect the active pursuit of improving payment routing in the Lightning Network.</summary>
    <published>2022-05-18T09:31:37+00:00</published>
  </entry>
</feed>
