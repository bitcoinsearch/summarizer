<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - AMP via HD, BN+SS, and TR</title>
  <updated>2023-07-31T19:53:32.527352+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-03-20 06:25:20+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-20 02:32:16+00:00</name>
  </author>
  <author>
    <name>Andrew Poelstra 2018-03-19 14:57:57+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-19 00:25:13+00:00</name>
  </author>
  <link href="lightning-dev/March_2018/001109_AMP-via-HD-BN-SS-and-TR.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001107_AMP-via-HD-BN-SS-and-TR.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001106_AMP-via-HD-BN-SS-and-TR.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001100_AMP-via-HD-BN-SS-and-TR.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - AMP via HD, BN+SS, and TR</title>
    <updated>2023-07-31T19:53:32.527866+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001100.html" rel="alternate"/>
    <summary>The email conversation between ZmnSCPxj and Andrew Poelstra focuses on the use of adaptor signatures as a replacement for hash challenges in a protocol involving timelock scripts. They also discuss Graftroot, a technique that allows parties to share a commit transaction. However, Andrew raises concerns about the symmetry of commitment transactions and suggests that each side will still need its own commitment transaction. ZmnSCPxj argues that symmetry in commitment transactions is not particularly space-heavy, as well-behaved nodes can delete old commitments from disk and only need to store their own commitments.Both ZmnSCPxj and Andrew agree that the "output has different spend conditions depending on who publishes to the chain" primitive offered by Graftroot is a fascinating feature that hasn't received much attention until recently. This primitive allows for more flexibility in spend conditions depending on who publishes the transaction.The email also mentions the use of adaptor signatures, which are reblinded at each layer, allowing arbitrary sets of signatures to be made atomic. The use of discrete logs as challenges makes reblinding and transferable proof-of-payment easy.The conversation concludes with Andrew mentioning his ongoing work in understanding Lightning and figuring out better ways to use scriptless scripts. Overall, the email provides detailed information about atomic multipath payments, the use of BIP32 HD keys, scriptless scripts, taproot construction, adaptor signatures, and Graftroot technique.</summary>
    <published>2018-03-20T06:25:20+00:00</published>
  </entry>
</feed>
