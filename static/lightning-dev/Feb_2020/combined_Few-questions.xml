<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Few questions</title>
  <updated>2023-07-31T22:40:52.684662+00:00</updated>
  <author>
    <name>Cezary Dziemian 2020-02-10 17:53:16+00:00</name>
  </author>
  <author>
    <name>René Pickhardt 2020-02-09 09:51:02+00:00</name>
  </author>
  <author>
    <name>Cezary Dziemian 2020-02-09 09:25:21+00:00</name>
  </author>
  <link href="lightning-dev/Feb_2020/002514_Few-questions.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002511_Few-questions.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002510_Few-questions.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Few questions</title>
    <updated>2023-07-31T22:40:52.684662+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-February/002510.html" rel="alternate"/>
    <summary>The Lightning Network protocol is being developed by a mailing list dedicated to driving its development, and users are encouraged to direct questions about understanding the protocol to bitcoin.stackexchange.com. In response to Cezary's first question, René Pickhardt explains that payees will only release the preimage for an invoice if they are satisfied with the amount specified in the invoice. For keysend, where the payee does not expect an amount, the payee will most likely release the preimage as they would consider it to be free money.Regarding Cezary's second question, René explains that onions are always of constant size and additional data is added to the end of the onion-encrypted list of HTLCs in order to prevent the last hub from guessing that it is the last hub in the route. This padding technique is described in the Sphinx paper and BOLT 04.In response to Cezary's third question, René explains that HTLCs are additional outputs in the commitment transaction and the protocol allows for up to 483 HTLCs concurrently in flight. However, the standard of implementations and recommendation is 30. This means that a single payment is not freezing the channel, but it "locks" the amount of that payment until settlement, which cannot be used by either party of the channel for other payments or activities.Cezary Dziemian, a member of the Polish LN community, has some questions about Lightning Network transactions. Firstly, he asks if it is possible for the last hub to prepare the last HTLC with a smaller amount to the payee if no invoice is sent. He also enquires whether additional data are added to the end of the onion-encrypted list of HTLCs to prevent the last hub from guessing that it is the last one in the route. Finally, he asks whether channels are locked entirely during payment confirmation or only for the in-flight payment amount and if a single channel can process more than one transaction at once. Cezary requests simple answers as his English is not yet perfect.</summary>
    <published>2020-02-10T17:53:16+00:00</published>
  </entry>
</feed>
