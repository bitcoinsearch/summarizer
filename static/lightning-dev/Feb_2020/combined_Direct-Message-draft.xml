<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Direct Message draft</title>
  <updated>2023-07-31T22:41:49.091123+00:00</updated>
  <author>
    <name>Rusty Russell 2020-02-24 03:15:58+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-02-23 23:21:23+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2020-02-21 21:22:41+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-02-21 08:45:34+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-21 00:03:33+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-20 23:33:22+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-02-20 10:17:30+00:00</name>
  </author>
  <author>
    <name>Ren√© Pickhardt 2020-02-20 10:01:01+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-02-20 09:36:55+00:00</name>
  </author>
  <link href="lightning-dev/Feb_2020/002564_Direct-Message-draft.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002562_Direct-Message-draft.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002560_Direct-Message-draft.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002559_Direct-Message-draft.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002557_Direct-Message-draft.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002556_Direct-Message-draft.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002555_Direct-Message-draft.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002554_Direct-Message-draft.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2020/002552_Direct-Message-draft.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Direct Message draft</title>
    <updated>2023-07-31T22:41:49.091123+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-February/002552.html" rel="alternate"/>
    <summary>The conversation between Rusty Russell and Christian Decker revolves around the idea of circular payment in onion routing. The lack of a 'reply' function eliminates storage requirements for intermediaries, but it poses a threat to the integrity of the onion routing as the recipient cannot add any reply without invalidating the HMACs on the return leg of the onion. Christian suggests a construction of the onion routing packet that allows compression in such a way that it fits inside the payload itself. This method also enables the recipient to construct a reply without modifying the routing onion. The conversation also touches upon the use of circular payment for certain circumstances and the potential disruption of a circuit by a node in the circular path.Rusty Russell proposes creating a circular path for onion routing, ensuring different nodes on the forward and return directions. Christian agrees with this proposal but notes the challenge of adding replies without invalidating the HMACs. He suggests a rendez-vous construction that involves fitting an onion into another onion of the same size. They discuss the possibility of introducing an end-to-end payload in a new messaging system, simplifying the system and allowing storage of a full, unmodified return onion. The conversation also explores the use case of circular payment for certain scenarios and the need for higher-level protocols to resume the conversation on another circuit if a disruption occurs.The conversation between Rusty and ZmnSCPxj delves into the idea of creating a circular path for communication using onion routing. They discuss the challenges and limitations associated with this approach, including the inability to fit the reply onion inside the existing onion. However, they consider using the same construction as in trampoline to overcome this limitation. They also explore the use of Chaumian tokens as a means of issuing tokens and discuss the possibility of requiring all Lightning nodes to have a Tor .onion address for direct messaging over Tor.ZmnSCPxj raises concerns about timing attacks in a conversation where multiple requests and responses are exchanged between two parties. To address this, he suggests creating a circular path instead of using the same path each time, eliminating timing attacks and storage requirements for intermediaries. Rusty acknowledges the potential benefits of this approach but notes that it may not justify setting up a circuit for just two uses. They also discuss the possibility of using a hashcash scheme combined with single-use tokens to prevent information leaks.Rene Pickhardt expresses delight in Rusty's proposal but raises concerns about spam prevention. Rusty confirms that his proposal doesn't handle spam but suggests adding an upfront payment when possible. They discuss the non-persistent storage costs and the potential use of this protocol for fee-free rebalancing and communication with nodes beyond peers. Rusty emphasizes that his proposal offers a more efficient method than encoding via HTLCs.The Lightning Network is a popular topic of discussion among developers, with various proposals being put forward to address potential issues. The conversation includes discussions on timing attacks, circular paths, messaging over lightning, reasonable timeouts, and references to relevant specifications.Overall, the conversations explore different aspects of circular payment in onion routing, including the challenges, potential solutions, and implications for the Lightning Network.</summary>
    <published>2020-02-24T03:15:58+00:00</published>
  </entry>
</feed>
