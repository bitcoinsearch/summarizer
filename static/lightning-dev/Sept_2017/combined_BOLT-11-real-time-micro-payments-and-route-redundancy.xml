<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BOLT 11, real time micro payments, and route redundancy</title>
  <updated>2023-07-31T19:23:32.294395+00:00</updated>
  <author>
    <name>Rusty Russell 2017-09-15 03:49:18+00:00</name>
  </author>
  <author>
    <name>Andy Schroder 2017-09-11 06:00:41+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2017-09-04 18:42:06+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2017-09-04 00:34:01+00:00</name>
  </author>
  <author>
    <name>Andy Schroder 2017-09-03 05:58:39+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2017-09-02 03:39:09+00:00</name>
  </author>
  <author>
    <name>Andy Schroder 2017-08-30 03:30:50+00:00</name>
  </author>
  <link href="lightning-dev/Sept_2017/000762_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000761_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000757_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000754_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000753_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000752_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2017/000751_BOLT-11-real-time-micro-payments-and-route-redundancy.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BOLT 11, real time micro payments, and route redundancy</title>
    <updated>2023-07-31T19:23:32.295404+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-August/000751.html" rel="alternate"/>
    <summary>During a conversation between Andy Schroder and Rusty Russell, the limitations of high-frequency payments using the Lightning Network were discussed. They concluded that micro-payments are not possible for high-value products that need to be delivered quickly. Paying the same payment request twice is currently not possible as it could result in someone in the middle taking the funds. Schroder noted the difference between donations with lightning and blockchain donation addresses, as the latter can't be reused. The conversation then shifted to lower value products that are delivered slowly over long periods of time, such as water, natural gas, electricity, internet, parking meters, or digital content. Russell explained that there is no security hole where one party can reroute the payment instead of receiving the offer during the actual payment process. Schroder inquired about redundancy measures, which are possible but require multinode realtime failover, which has not been implemented yet. Privacy concerns with lightning were also discussed. While with blockchain payments, a refund can be returned without knowing the customer's identity, with lightning, the payer reveals their identity to the payee by offering a refund payment request. A more complex scheme using round-trip payments was suggested, but it requires the payer to know the amount of the refund. However, a smaller return onion could fix this issue. In an email exchange between Rusty Russell and Andy Schroder, the limitations of lightning payments were further explored. Currently, paying the same payment request twice is not possible, as it invites anyone in the middle to take the funds. There were discussions on potentially changing the way payment hashes work to allow for repeated payments in version 1.1. Additionally, the idea of allowing for amount adjustments while the payment is unresolved was discussed, which would enable incremental payments from the sender to the recipient.Rusty Russell and Christian Decker also discussed the possibility of paying the same payment request twice. It was noted that currently, this is not possible as it can be an opportunity for someone in the middle to take the funds. However, with version 1.1, they may change the payment hashes to make this possible. They also discussed the idea of allowing for amount adjustments while the payment has not been resolved, which could enable incremental payments from the sender to the recipient. However, careful implementation is necessary to avoid new DoS vectors.Andy Schroder and Rusty Russell had a conversation regarding the feasibility of high-frequency payments and micro-payments. It was noted that micro-payments are not possible for high-value products that need to be delivered quickly. Paying the same payment request twice is not possible currently as it could result in someone taking the funds. The payment route going down only happens during the actual payment process, not everything related to the payment request. Privacy concerns were raised with refund addresses revealing the payer's identity to the payee. The need for a flag in BOLT 11 to indicate a refund address was discussed. The purpose of different tagged fields in BOLT 11 was explained, including distinguishing payments from different payers and the use of the n field when key recovery is not possible.Andy Schroder is exploring the possibility of implementing micro-payments with his fuel pump using Lightning. He has concerns about the smallest volume that can be individually paid for and the protocol for repeated payments. Rusty Russell suggests changing the payment hashes in version 1.1 to allow for repeated payments. They also discuss the possibility of adjusting the payment amount before it is resolved, enabling incremental payments. However, careful implementation is needed to prevent potential DoS attacks. The lack of a refund address option in BOLT 11 compared to BIP 70 is questioned by Andy Schroder. He mentions adapting his fuel pump to use Lightning and requiring a refund address due to pre-payment requirements. Rusty Russell suggests adding a flag in BOLT 11 to indicate the need for a refund address and including the refund information in the payment onion itself. The inclusion of a refund address option in BIP 70 is seen as useful for many other use cases.</summary>
    <published>2017-09-15T03:49:18+00:00</published>
  </entry>
</feed>
