<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning in the setting of blockchain hardforks</title>
  <updated>2023-07-31T19:22:25.677041+00:00</updated>
  <author>
    <name>Rusty Russell 2017-08-21 02:20:45+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2017-08-17 10:39:54+00:00</name>
  </author>
  <author>
    <name>Martin Schwarz 2017-08-17 08:53:22+00:00</name>
  </author>
  <author>
    <name>Martin Schwarz 2017-08-17 08:24:02+00:00</name>
  </author>
  <link href="lightning-dev/Aug_2017/000748_Lightning-in-the-setting-of-blockchain-hardforks.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2017/000746_Lightning-in-the-setting-of-blockchain-hardforks.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2017/000745_Lightning-in-the-setting-of-blockchain-hardforks.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2017/000747_Lightning-in-the-setting-of-blockchain-hardforks.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning in the setting of blockchain hardforks</title>
    <updated>2023-07-31T19:22:25.677041+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-August/000747.html" rel="alternate"/>
    <summary>Christian Decker and Rusty Russell discuss the use of the first forked block as the genesis block for a forkchain, while keeping the non-forked blockchain on the original genesis hash to avoid disruption. They acknowledge the difficulty that arises when one chain does not declare itself as the forked chain. The conversation then shifts to the settlement of channels that are open during the fork. If no replay protection was implemented, the last commitment can be used to close the channel. However, if replay protection is in place, people may lose money. Rusty suggests the possibility of a standalone "salvage" utility to retrieve lost funds.In another email exchange between Christian and Martin, they discuss the challenges of using Lightning on or across permanent forks of a parent blockchain that share the same genesis block. They propose changing the definition of chain_id to the hash of the first block of the new branch and requiring replay and wipe-out protection to address these challenges. However, they also express concerns about slow block times and the sudden loss of hashpower in almost frozen blockchains. The complications of open channels during a fork and the potential loss of funds without replay protection are also discussed. Christian welcomes Martin to the mailing list and expresses excitement for the upcoming challenges.The current chain_id allows for differentiation of blockchains based on the hash of their genesis block. However, with hardforks branching off the Bitcoin blockchain, there are questions about how Lightning can function on or across permanent forks that share the same genesis block. Suggestions have been made to redefine chain_id to the hash of the first block of the new branch and require replay and wipe-out protection. Concerns have been raised regarding the relaxation of these requirements, considering slow block times and the possibility of operating Lightning on almost frozen blockchains experiencing sudden loss of hashpower. It is also noted that there has been no prior discussion or study of Lightning in the context of hardforks, and it is unclear if this is the appropriate forum for such discussions. Martin seeks input and guidance on these issues.</summary>
    <published>2017-08-21T02:20:45+00:00</published>
  </entry>
</feed>
