<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Bi-directional or uni-directional?</title>
  <updated>2023-07-31T19:29:28.625815+00:00</updated>
  <author>
    <name>Pierre 2017-11-21 09:44:50+00:00</name>
  </author>
  <author>
    <name>Alan Carbery 2017-11-21 09:07:05+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2017-11-21 03:05:11+00:00</name>
  </author>
  <author>
    <name>Alan Carbery 2017-11-20 17:54:02+00:00</name>
  </author>
  <link href="lightning-dev/Nov_2017/000797_Bi-directional-or-uni-directional-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000796_Bi-directional-or-uni-directional-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000795_Bi-directional-or-uni-directional-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000794_Bi-directional-or-uni-directional-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Bi-directional or uni-directional?</title>
    <updated>2023-07-31T19:29:28.625815+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-November/000794.html" rel="alternate"/>
    <summary>In a discussion about Lightning Network channel funding, it was confirmed that each channel is funded by one party only, but payments can be made in both directions. The `push_msat` field allows for an initial payment to be made as part of the channel opening. One-sided channel funding was chosen for simplicity in version 1.0 of the protocol, but a pull request for dual funding is currently being worked on. The pull request can be found on GitHub at https://github.com/lightningnetwork/lightning-rfc/pull/184.Alan Carbery reached out to Rusty Russell seeking clarification about the Lightning Network's channel funding mechanism. While tutorials show an example where both Alice and Bob put 5BTC into the funding transaction, Alan was puzzled because the spec for open_channel has the funding_satoshis attribute whereas accept_channel does not. He wondered if this meant that each channel is funded by one party only but payments can be made in both directions assuming some initial payments are made. Additionally, he asked why there was a rationale for one-sided channel funding. Rusty responded that the channels are bidirectional and that both sides send a batch of updates followed by a commitment, then the other side replies with an ack. Both sides can do this independently and it all works out.A developer named Alan Carbery asked a question about Lightning's bi-directional channels. He was curious if the protocol is uni-directional only, based on the draft RFC. Rusty Russell responded to his query saying that Lightning's channels are actually bidirectional. However, each side of the channel sends a batch of updates followed by a commitment, and then the other side replies with an acknowledgement. Both sides operate independently in this process.Alan is seeking clarification regarding the bi-directionality of channels in Lightning. While most tutorials describe them as bi-directional, he wonders if they are actually uni-directional based on his reading of a draft RFC. Alan is asking for confirmation on whether this is the case and, if so, the reason behind not implementing bi-directional channels in the first release.</summary>
    <published>2017-11-21T09:44:50+00:00</published>
  </entry>
</feed>
