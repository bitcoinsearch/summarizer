<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning-dev Digest, Vol 27, Issue 2</title>
  <updated>2023-07-31T19:25:11.101473+00:00</updated>
  <author>
    <name>Rusty Russell 2017-11-09 23:29:52+00:00</name>
  </author>
  <author>
    <name>Louis Willcock 2017-11-03 22:18:23+00:00</name>
  </author>
  <link href="lightning-dev/Nov_2017/000775_Lightning-dev-Digest-Vol-27-Issue-2.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000771_Lightning-dev-Digest-Vol-27-Issue-2.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning-dev Digest, Vol 27, Issue 2</title>
    <updated>2023-07-31T19:25:11.101473+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-November/000771.html" rel="alternate"/>
    <summary>Rusty Russell, when asked about the lack of adoption of BIP70, particularly in relation to the BIP 70-72 collection, believes that this is because it does not offer significant advantages over existing bitcoin addresses. He contrasts this with the Lightning Network, which required a unique format and therefore warranted the creation of a dedicated protocol.In a Lightning-dev mailing list, Rusty Russell provided some insights on the Lightning Network's payment protocol, addressing various questions. One query pertained to handling payments from users who may or may not use LN. Russell suggested using a BOLT 11 QR code with a fallback address, but acknowledged that extracting this information would still require the recipient's app to understand BOLT11. Alternatively, if the app understands the BIP70 payment protocol, an alternate payment mechanism could be included, although it appears that nobody actually utilizes this feature.Another question raised was regarding payment delays resulting from a lack of cooperation from intermediaries. In response, Russell offered two options: waiting for the payment to go through or trying again with a new invoice. In version 1.1, users would be able to safely reuse the same invoice, provided the merchant remained honest and rejected the second payment if they had already received two. If the payment has not failed yet, the user will still receive their goods and may not be concerned about waiting for the money to be deducted.Russell also touched upon the concept of decremental time lock, which is closely tied to block confirmation time. Even if there were a currency with extremely fast confirmation times (e.g., 5 seconds), the time lock period cannot be too short as there needs to be a margin for payment reversals. However, Russell emphasized that if payments are so unreliable that such cases need to be worried about, then something is seriously wrong in practice.</summary>
    <published>2017-11-09T23:29:52+00:00</published>
  </entry>
</feed>
