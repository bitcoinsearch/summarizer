<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Sidepools For Improving Payment Reliability At Scale</title>
  <updated>2023-09-21T01:55:08.043941+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-09-19 08:51:15+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-09-12 10:52:56+00:00</name>
  </author>
  <link href="lightning-dev/Sept_2023/004108_Sidepools-For-Improving-Payment-Reliability-At-Scale.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2023/004099_Sidepools-For-Improving-Payment-Reliability-At-Scale.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Sidepools For Improving Payment Reliability At Scale</title>
    <updated>2023-09-21T01:55:08.043993+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004099.html" rel="alternate"/>
    <summary>In the email, the sender introduces the concept of sidepools as a solution to the challenges of allocating liquidity on the Lightning Network. They compare allocating liquidity to investing in stocks and highlight the difficulties of accurately predicting payment influxes and avoiding over or under-allocation.To address these issues, the sender proposes the use of sidepools, which are parallel constructions that allow forwarding node operators to manage the allocation of funds without closing channels. Instead of hosting channels within the sidepool mechanism, actual Lightning Network channels remain on-chain. The sidepool acts as a service for HTLC-swapping to facilitate the allocation of funds in the channels.The sender emphasizes the benefits of retaining 2-participant channels instead of expanding to channels with more participants. This approach reduces the number of participants who know about every payment, thus preserving privacy. Additionally, they mention that sidepools can be implemented using Decker-Wattenhofer decrementing `nSequence` mechanisms without any changes to Bitcoin.The motivation for using sidepools lies in their ability to help maintain liquidity in existing channels. By relying on other participants in the sidepool to receive funds, forwarding node operators can avoid depleting channels. This approach reduces costs compared to opening new channels or performing onchain/offchain swaps. The sender also acknowledges that past performance is not indicative of future performance, highlighting the potential risks of doubling down on specific counterparties.Another advantage of sidepools is their potential to support scaling by mitigating liquidity fluctuations during large buyer movements. The sender suggests the implementation of channel factories for end users and sidepools for forwarding nodes to further enhance scalability.Overall, the sender proposes the use of sidepools as a solution to the challenges of allocating liquidity on the Lightning Network. They provide insights into the benefits of this approach and how it can be implemented while maintaining compatibility with existing Lightning Network design.</summary>
    <published>2023-09-19T08:51:15+00:00</published>
  </entry>
</feed>
