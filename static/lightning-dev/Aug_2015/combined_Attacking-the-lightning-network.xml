<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Attacking the lightning network</title>
  <updated>2023-07-31T18:13:17.346532+00:00</updated>
  <author>
    <name>Rusty Russell 2015-08-12 01:06:57+00:00</name>
  </author>
  <author>
    <name>Joseph Poon 2015-08-11 20:15:47+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2015-08-11 19:38:16+00:00</name>
  </author>
  <link href="lightning-dev/Aug_2015/000123_Attacking-the-lightning-network.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000118_Attacking-the-lightning-network.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000116_Attacking-the-lightning-network.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Attacking the lightning network</title>
    <updated>2023-07-31T18:13:17.346532+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000116.html" rel="alternate"/>
    <summary>In an email exchange between Joseph Poon and Anthony Towns, the vulnerability of double-spend attacks in Bitcoin is discussed. The conversation also explores how the Lightning Network could potentially reduce this vulnerability. It is noted that confirmation times matter less with the Lightning Network as it operates off-chain.However, the discussion takes a turn towards a scenario where a user can still execute a double-spend attack despite waiting for N confirmations, if it gains them a certain amount of money, denoted as $X. In this case, the user would open anonymous channels capable of receiving at least $X and initiate a doublespend fork. They would then proceed to construct multiple lightning channels simultaneously, funding them at $d each.Once the new channels become active after N confirmations, the user can rapidly route multiple payments from their new channels to their anonymous channels until they are no longer able to send any more. At this point, the user would publish the doublespending fork, resulting in the $d*n never being spent. They would then close their original anonymous channels, ultimately gaining $X.The only individuals negatively affected by this scheme are those who opened the $d channels after N confirmations. However, it is highlighted that none of the intermediary hubs involved need to know where the money ended up, making it challenging to recover the funds using iron pipe cryptography.Several constraints are identified, including the number of channels one can open within a specific timeframe (M-N blocks), the requirement of having more than $X funds available to commit to the double spend, and the capacity of the lightning network in terms of routable bitcoin.The email conversation concludes with Joseph Poon's signature, leaving readers with insights into the potential risks and limitations associated with double-spend attacks in the Lightning Network.</summary>
    <published>2015-08-12T01:06:57+00:00</published>
  </entry>
</feed>
