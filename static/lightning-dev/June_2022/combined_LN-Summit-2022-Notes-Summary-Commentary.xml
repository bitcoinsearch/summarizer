<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - LN Summit 2022 Notes &amp; Summary/Commentary</title>
  <updated>2023-08-01T00:32:52.266538+00:00</updated>
  <author>
    <name>Matt Corallo 2022-06-30 16:38:37+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2022-06-29 10:56:39+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2022-06-28 23:11:10+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2022-06-28 15:31:54+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2022-06-28 13:05:46+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2022-06-23 22:10:36+00:00</name>
  </author>
  <author>
    <name>Michael Folkson 2022-06-21 11:54:27+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-06-15 08:09:13+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-06-14 22:00:53+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2022-06-08 02:38:39+00:00</name>
  </author>
  <link href="lightning-dev/June_2022/003641_LN-Summit-2022-Notes-Summary-Commentary.xml" rel="alternate"/>
  <link href="lightning-dev/June_2022/003638_LN-Summit-2022-Notes-Summary-Commentary.xml" rel="alternate"/>
  <link href="lightning-dev/June_2022/003621_LN-Summit-2022-Notes-Summary-Commentary.xml" rel="alternate"/>
  <link href="lightning-dev/June_2022/003620_LN-Summit-2022-Notes-Summary-Commentary.xml" rel="alternate"/>
  <link href="lightning-dev/June_2022/003619_LN-Summit-2022-Notes-Summary-Commentary.xml" rel="alternate"/>
  <link href="lightning-dev/June_2022/003614_LN-Summit-2022-Notes-Summary-Commentary.xml" rel="alternate"/>
  <link href="lightning-dev/June_2022/003615_LN-Summit-2022-Notes-Summary-Commentary.xml" rel="alternate"/>
  <link href="lightning-dev/June_2022/003608_LN-Summit-2022-Notes-Summary-Commentary.xml" rel="alternate"/>
  <link href="lightning-dev/June_2022/003607_LN-Summit-2022-Notes-Summary-Commentary.xml" rel="alternate"/>
  <link href="lightning-dev/June_2022/003600_LN-Summit-2022-Notes-Summary-Commentary.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - LN Summit 2022 Notes &amp; Summary/Commentary</title>
    <updated>2023-08-01T00:32:52.267538+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-June/003600.html" rel="alternate"/>
    <summary>During a recent email exchange, Bitcoin developer Peter Todd suggested the idea of allowing users to opt-in for slower payment processing for increased privacy. This could be beneficial for rebalancing and other automated processes. While it may not be practical to hold onto a hashed time-locked contract (HTLC) for too long, waiting a second instead of 100ms to batch transactions could still provide benefits without creating capacity issues. Some in the Bitcoin community find this idea interesting.In the discussion about the Lightning Network (LN) protocol's latency sensitivity, Christian Decker mentioned that slow signers should not cause too many issues, except for slower forwards in the case of routing nodes. However, if forwarding nodes take a full second to forward a payment, it may be necessary to avoid such nodes. Matt Corallo suggested that a good goal would be to get 95th percentile payments down to one second to avoid retrying payments. Implementing a timeout on the peer level is not recommended, but it may need to be handled in route selection if it becomes more of an issue going forward.Christian Decker also mentioned that the LN protocol is generally not very latency sensitive and can handle slow signers without causing too many issues. Routing node signers are expected to be well below the 1-second mark, even when implementing more complex signer logic. The LN protocol implements a batch mechanism where changes are applied to the commitment transaction as a batch, so while a slow signer may impact payment latency, it should not affect throughput on the routing nodes.In a Lightning Network developer meeting, several proposals were discussed, including nonce handling, leveraging recursive MuSig2 for multi-sig channels, updating the gossip network for Taproot, applying Mini Sketch to LN Gossip, and addressing DoS concerns related to onion messages. The meeting also covered topics like rate limiting, privacy enhancement, and increasing payment reliability. Some proposals are close to deployment, but more work needs to be done to specify and analyze them properly.During the meeting, attendees discussed the use of nested or recursive MuSig2 for threshold signatures. The terminology "nested MuSig2" was chosen for simplicity. There was also discussion about the latency impact of adding more signers in the multi-signature setting for LN. The LN protocol currently does not verify Schnorr signatures, but the plan is to use musig2 in the funding output for a single aggregated key. Some added latency may occur depending on the system architecture.Another proposal discussed at the meeting was splicing, which builds off the interactive-tx scheme used in the dual-funding protocol extension. The main question was whether concurrent splices should be allowed and how to handle edge cases. The meeting also explored the topics of LN-URL and BOLT 12 as standardized ways of obtaining Lightning Network invoices.In another discussion, Bastien expressed skepticism about a proposal for rate-limiting, stating that it does not provide enough protection against private gossip. ZmnSCPxj shared waxwing's proposal for a proof-of-channel-ownership mechanism that matches the requirements for lightning gossip, but emphasizes the need for a global network to prevent UTXOs from being reused across services.At the LN Dev Summit, Taproot updates were a major topic of discussion. Taproot has now been fully activated, and progressive revamping of the system using more taprooty features was proposed. Other discussions at the summit included applying Mini Sketch to LN Protocol, evaluating channel jamming solutions, addressing last-mile privacy issues, and optimizing node fees. The importance of invoice fetching in light of blinded paths was also discussed, with LN-URL and BOLT 12 being two standardized methods for fetching invoices.Overall, the Lightning Network community is actively exploring various proposals to improve the protocol's efficiency, privacy, and reliability. Discussions range from latency sensitivity to rate limiting, payment optimization, and the implementation of new features like Taproot. These discussions aim to address the challenges faced by the Lightning Network and enhance its functionality for users.During the meeting, various topics were debated and discussed, with a particular focus on wallets and implementations. It was noted that these entities would benefit from displaying the most pessimistic value. The meeting yielded several interesting developments, underscoring the need for further research to provide better guidance regarding best practices in this domain.</summary>
    <published>2022-06-30T16:38:37+00:00</published>
  </entry>
</feed>
