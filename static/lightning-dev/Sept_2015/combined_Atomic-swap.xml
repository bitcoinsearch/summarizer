<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Atomic swap</title>
  <updated>2023-07-31T18:17:59.380501+00:00</updated>
  <author>
    <name>Pierre 2015-09-14 21:44:26+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2015-09-14 18:46:10+00:00</name>
  </author>
  <author>
    <name>Pierre 2015-09-14 13:35:02+00:00</name>
  </author>
  <link href="lightning-dev/Sept_2015/000186_Atomic-swap.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000185_Atomic-swap.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000184_Atomic-swap.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Atomic swap</title>
    <updated>2023-07-31T18:17:59.380501+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-September/000184.html" rel="alternate"/>
    <summary>Pierre is discussing an idea proposed by a group of people on the Bitcointalk forum. The idea involves adding another anchor to a channel, as atomic swaps cannot increase channel capacity. Additionally, there is a routing question that needs to be addressed. The proposal suggests using normal HTLCs with a different next hop - a "bitcoin address X" instead of a "lightning node X". No protocol changes are required, except for adding routing information to the commitment transaction to initiate the HTLC.The implementation of this idea would allow for secure movement of funds in and out of existing channels through the use of HTLC contracts. This has several use cases, such as funding balanced channels and providing merchants with a seamless way to cash out their funds. To illustrate the implementation, the author provides Rusty-style protobuf messages for the swap in and swap out processes.In the regular swap in flow, Bob sends Alice a swap_in_offer, which she accepts. Then, Alice sends an update_add_htlc message to Bob. After revealing the hash r, Bob sends an update_fulfill_htlc message to Alice.On the other hand, in the regular swap out flow, Bob sends Alice a swap_out_offer, which she accepts. Then, Alice sends an update_add_htlc message to Bob. After revealing the hash r, Alice sends an update_fulfill_htlc message to Bob.Overall, the tone of the conversation is positive, with the participants expressing excitement about this approach. They believe that this implementation has the potential to improve channel capacity and routing efficiency in the Lightning Network.</summary>
    <published>2015-09-14T21:44:26+00:00</published>
  </entry>
</feed>
