<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - GUI for Lightning Network?</title>
  <updated>2023-07-31T18:43:08.865413+00:00</updated>
  <author>
    <name>Lawrence Botley 2015-12-13 10:24:39+00:00</name>
  </author>
  <author>
    <name>Denis Gorbachev 2015-12-13 10:18:06+00:00</name>
  </author>
  <author>
    <name>Denis Gorbachev 2015-12-13 10:13:54+00:00</name>
  </author>
  <author>
    <name>Lawrence Botley 2015-12-13 09:20:05+00:00</name>
  </author>
  <author>
    <name>Luke Dashjr 2015-12-13 06:38:35+00:00</name>
  </author>
  <author>
    <name>Mark Friedenbach 2015-12-13 03:13:01+00:00</name>
  </author>
  <author>
    <name>Denis Gorbachev 2015-12-13 02:08:47+00:00</name>
  </author>
  <author>
    <name>Luke Dashjr 2015-12-13 01:30:10+00:00</name>
  </author>
  <author>
    <name>Denis Gorbachev 2015-12-13 01:14:11+00:00</name>
  </author>
  <author>
    <name>gb 2015-12-13 01:07:07+00:00</name>
  </author>
  <author>
    <name>Denis Gorbachev 2015-12-13 01:03:12+00:00</name>
  </author>
  <link href="lightning-dev/Dec_2015/000383_GUI-for-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000382_GUI-for-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000381_GUI-for-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000380_GUI-for-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000379_GUI-for-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000378_GUI-for-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000377_GUI-for-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000376_GUI-for-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000375_GUI-for-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000374_GUI-for-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000373_GUI-for-Lightning-Network-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - GUI for Lightning Network?</title>
    <updated>2023-07-31T18:43:08.865413+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-December/000373.html" rel="alternate"/>
    <summary>The discussion revolves around the implementation of a GUI for Lightning Network (LN) node management. One user suggests that it would be useful to compare fees for current and previous months, but implementing this through command line would be tedious. Instead, he suggests using a web application that connects to the LN node backend. Another user suggests integrating the LN node management into the Bitcoin Core GUI using an external library. AdminLTE, an open-source web admin template that supports multiple charting libraries is mentioned as a potential tool for implementation. The user also provides a nodejs RPC wrapper for Ethereum as an example.Mark and Lawrence are discussing the implementation of Lightning Network (LN) nodes. They agree that there will be two types of nodes: endpoints (consumers and providers) and relays (standalone LN nodes). Mark suggests that endpoints should be integrated into wallets while relays should have their own management console. Lawrence agrees and adds that an RPC interface would be useful for agnostic web clients with OTP as standard, and yubikey support would be great. Luke Dashjr joins in the conversation and suggests that every wallet could be a LN node, to which Denis Gorbachev asks if they are talking about wallet integration or LN node management. Luke doesn't see a distinction between the two. Denis provides an example of how reports on various transactions would be a useful feature in general, not necessarily tied to LN. The conversation ends with no further discussion.In an email exchange between Luke Dashjr and Denis Gorbachev, they discussed the idea of every wallet being a Lightning Network (LN) node. Dashjr argued that there shouldn't be a distinction between the two, to which Gorbachev pointed out the risk of being hacked when running a node. Dashjr then went on to say that running a node is like running a business, as it requires running a server 24/7 and dealing with security and updates. They also briefly touched upon the idea of comparing fees for current versus previous months using command line or GUI, and agreed that reports on various transactions would be a useful feature in general, not just tied to LN.Mark suggests that an RPC interface approach is the best for agnostic web clients with OTP as standard and also praises yubikey support. Luke Dashjr does not see a distinction between wallet integration or LN node management, saying that every wallet should be a LN node. In response to Denis Gorbachev's question about comparing fees for current month versus previous month, Luke mentions that reports on various transactions would be a useful feature in general, not necessarily tied to LN. This conversation took place on the Lightning-dev mailing list.In a discussion on December 13, 2015, Denis Gorbachev and Luke were discussing wallet integration and Lightning Network (LN) node management. They were debating whether every wallet should be a LN node or not. Denis brought up the example of running an intermediary LN node and wanting to compare fees for the current month versus the previous month. He mentioned that it could be done through command line or with a GUI. Luke suggested that reports on various transactions would be a useful feature in general, not necessarily tied to LN.The discussion revolves around the idea of creating a GUI for Lightning Network (LN) node management. It is suggested that since LN nodes need to be on 24/7 in order to be routed through, it would be better to approach this the same way one would a server daemon with a back-end API stack, request authentication, logs, and an authenticated web interface to view graphs. A mobile command and control application is also suggested as a potential feature. However, it is also suggested that there could be room for a "lite mode" client which is not online 24/7 but can still send or receive payments when turned on. The correct approach here would probably be to integrate it with existing wallets as another payment type.Denis Gorbachev asks about a real use-case scenario where someone running an intermediary LN node would want to compare fees for the current month versus the previous month and suggests implementing it as a web application that connects to the LN node backend. Luke Dashjr responds by saying he would like to see LN node management transparently supported in Bitcoin Core GUI using an external library.In this context, Luke and Denis are discussing the idea of creating a GUI for Lightning Network (LN) node management. Luke suggests that it would be beneficial to have this functionality supported in Bitcoin Core's GUI using an external library. However, Denis has a specific use case in mind where someone running an intermediary LN node would want to compare fees from the current month to the previous month. He asks if this is a real use case and suggests implementing it as a web application that connects to the LN node backend. It seems that the discussion is focused on the practicality and usefulness of a GUI for LN node management. Luke is interested in integrating this functionality into Bitcoin Core's GUI while Denis is exploring a</summary>
    <published>2015-12-13T10:24:39+00:00</published>
  </entry>
</feed>
