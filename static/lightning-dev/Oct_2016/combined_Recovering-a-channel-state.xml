<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Recovering a channel state</title>
  <updated>2023-07-31T19:13:30.784437+00:00</updated>
  <author>
    <name>Rusty Russell 2016-10-24 04:11:38+00:00</name>
  </author>
  <author>
    <name>Anton Kumaigorodskiy 2016-10-21 13:52:48+00:00</name>
  </author>
  <link href="lightning-dev/Oct_2016/000641_Recovering-a-channel-state.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000639_Recovering-a-channel-state.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Recovering a channel state</title>
    <updated>2023-07-31T19:13:30.784437+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-October/000639.html" rel="alternate"/>
    <summary>Anton Kumaigorodskiy, a member of the Rusty Russell team, raises the concern of mobile devices being lost or stolen and the need for a way to recover data or break channels unilaterally on a new device. While this topic was deferred for 1.0, it is still important to address. Currently, if you lose your key, you are out of luck even if you have your ID.One potential solution discussed by Tadge involves outsourcing vigilance by uploading encrypted information to watchers. This approach can almost reconstruct the current state enough to mutually close the channel. Another interesting possibility is having peers exchange encrypted data to help each other recover channels. Each peer would keep some encrypted data for you and send it whenever you connect, allowing for clean shutdowns without being robbed as long as one peer is honest.However, there is still much work to be done in understanding how exactly this would work. Enumerating the specifics of this process is necessary. The idea of relying on peers to exchange encrypted data for recovery purposes could prove useful in situations where mobile devices are lost or stolen.The author also suggests the option of a unilateral close, where essential parameters are recorded on a server for later retrieval. However, fully recovering the latest channel state poses challenges as it requires trusting the server to provide an up-to-date snapshot. Alternatively, the author proposes directly asking the counterparty for the latest channel state, but this introduces trust-related issues.In conclusion, the author seeks feedback on whether obtaining a trustless latest channel snapshot from the counterparty or pursuing a unilateral close is a more viable option for addressing the issue of recovering data or breaking channels unilaterally on new devices in the event of mobile device loss or theft.</summary>
    <published>2016-10-24T04:11:38+00:00</published>
  </entry>
</feed>
