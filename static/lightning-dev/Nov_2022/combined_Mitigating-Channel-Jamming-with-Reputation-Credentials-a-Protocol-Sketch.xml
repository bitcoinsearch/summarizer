<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Mitigating Channel Jamming with Reputation Credentials: a Protocol Sketch</title>
  <updated>2023-08-01T00:51:27.716675+00:00</updated>
  <author>
    <name>Antoine Riard 2022-12-02 01:07:09+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-12-02 00:33:20+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-12-01 12:28:00+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-12-01 11:52:13+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-30 04:07:41+00:00</name>
  </author>
  <author>
    <name>Michael Folkson 2022-11-29 16:25:31+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-28 21:34:10+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-28 18:48:52+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-11-28 11:50:45+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2022-11-27 16:34:57+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2022-11-26 20:48:49+00:00</name>
  </author>
  <author>
    <name>Michael Folkson 2022-11-26 10:52:54+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-26 02:23:39+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-11-25 23:12:08+00:00</name>
  </author>
  <author>
    <name>Clara Shikhelman 2022-11-25 15:40:11+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-25 02:21:54+00:00</name>
  </author>
  <author>
    <name>Clara Shikhelman 2022-11-24 14:44:55+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-24 02:48:06+00:00</name>
  </author>
  <author>
    <name>Clara Shikhelman 2022-11-23 15:59:56+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-23 01:13:06+00:00</name>
  </author>
  <author>
    <name>Clara Shikhelman 2022-11-22 20:54:04+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-22 00:26:22+00:00</name>
  </author>
  <author>
    <name>Clara Shikhelman 2022-11-21 18:15:38+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-11-21 04:01:24+00:00</name>
  </author>
  <link href="lightning-dev/Dec_2022/003779_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2022/003778_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2022/003776_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2022/003775_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003774_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003773_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003772_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003771_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003770_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003768_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003767_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003766_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003765_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003764_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003763_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003762_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003761_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003760_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003759_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003758_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003757_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003756_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003755_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2022/003754_Mitigating-Channel-Jamming-with-Reputation-Credentials-a-Protocol-Sketch.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Mitigating Channel Jamming with Reputation Credentials: a Protocol Sketch</title>
    <updated>2023-08-01T00:51:27.716675+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-November/003754.html" rel="alternate"/>
    <summary>Antoine Riard proposes a reputation-based scheme for solving channel jamming in the Lightning Network. The scheme involves using credentials issued by routing hops to allocate channel liquidity efficiently and reward/punish payment senders. Critics raise concerns about the management of decentralized reputation systems and the potential for innocent parties to be blamed in attacks. Antoine suggests fleshing out the proposal, seeking community feedback, and iterating until consensus is reached.The proposed reputation system uses credentials attached to each HTLC forward request to protect against channel jamming. These credentials can be acquired through upfront fees or based on previous HTLC traffic. Node operators have flexibility in determining acquisition costs, expiration height, and binding with liquidity units. The system is effective if node operators require credentials of worthiness equivalent to routing fees.There are concerns about attackers gaming the reputation system and introducing centralization inertia. However, new routing hops can lower acquisition costs to attract more traffic. The proposal should be studied for its impact on inbound channel routing fees and the overall liquidity toolchain.The reputation-based scheme can be implemented with few modifications to the protocol. It requires support for HTLC intercepting API, onion messages, and EC blinded signature. The proposed framework can also serve as a generalized risk-management framework for Bitcoin decentralized financial networks.Feedback on the proposal is welcomed, and the proposed protocol and work-in-progress proof-of-concept can be found on GitHub. Further research and community feedback are necessary to refine and validate the proposal.In a conversation between Antoine Riard and David A. Harding, there is an issue with credential tampering by intermediary nodes in a classic payment path. This scenario allows malicious nodes to waste the sender's credentials allocated on downstream hops. Blinded paths are suggested as an alternative solution, using per-hop shared secrets or blinded onion routes for fresh credentials refill. Privacy concerns arise due to the quantity of credentials being a potential privacy leak.The potential for denial-of-service (DoS) attacks on the Lightning Network is discussed in a mailing list discussion. Malicious nodes could harvest tokens from other Lightning Service Providers (LSPs) and use them to launch wide attacks, reducing the reputation of competitor LSPs. However, credential tokens are blinded, making it impossible for forwarding nodes to determine the origin of payments and blame another node.Antoine Riard suggests using onion messages and blinded paths for token dissemination and renewal rounds in Lightning Network transactions. The current design assumes tokens are attached to the HTLC during forwarding, but an alternative design could detach them, with the HTLC onion only containing a reference to the tokens.Michael Folkson expresses skepticism about embedding a reputation layer or credentials into the Lightning protocol, believing that decentralized reputation systems are too risky to be managed by protocol developers. Antoine Riard discusses the economic aspects of new tokens and their secondary markets, suggesting that routing hops would increase the liquidity value of their credentials until the failure rate affects their routing income.The current reputation-credential framework assumes distribution at the endpoint of the network, but it should be flexible enough for credentials to be harvested by LSPs and distributed in a secondary fashion. There are concerns about competitor LSPs applying to be a spoke on their rival's network and jamming up payments, reducing their competitor's reputation.In an email conversation, Antoine Riard proposes a "staking"/reputational credentials policy to save on unconditional fees in the Lightning Network. The policy suggests strict binding between acquisition cost and channel liquidity routed, with higher returns achieved through an adjusted ratio of credentials to liquidity. A "pure reputation" system could be layered on top, allocating more liquidity based on identity quality. Proving UTXO ownership without revealing additional information is a challenge in this system.Clara Shikhelman questions the benefits of using tokens compared to unconditional fees and requests a recommended policy for token quantity, rate issuance, token acquisition cost, and adaptations to channel congestion. Antoine agrees that a recommended policy is needed and proposes refining the credentials architectural framework.Antoine's proposed solution involves a "staking"/reputational credentials system that allows past HTLC routing success to be converted into more allocated credentials. This system maintains a 0-risk HTLC forwarding acceptance by tying credentials acquisition cost to channel liquidity routed. A "pure reputation" layer can be added, allocating more liquidity based on identity quality. The challenge lies in proving UTXO ownership without revealing additional information. Clara raises concerns about the lack of a recommended policy and requests a timeline for presenting one. Antoine focuses on refining the credentials architectural framework and considers dynamic routing policy and active risk-management as more advanced questions.Clara proposes a call to discuss a recommended policy for the Lightning Network. Antoine responds with a detailed explanation of his proposal, including using credentials issued by routing hops and adjusting them based on local channel congestion or network data. He mentions the possibility of a reputation layer and addresses Clara's questions about token transferability, recommended policies, secondary markets, and privacy concerns. Antoine emphasizes the need for flexibility in the framework and seeks feedback</summary>
    <published>2022-12-02T01:07:09+00:00</published>
  </entry>
</feed>
