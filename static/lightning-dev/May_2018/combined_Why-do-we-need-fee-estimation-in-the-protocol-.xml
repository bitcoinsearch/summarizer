<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Why do we need fee estimation in the protocol?</title>
  <updated>2023-07-31T20:16:43.882517+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-05-15 01:03:34+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-05-14 03:51:13+00:00</name>
  </author>
  <author>
    <name>CJP 2018-05-12 20:45:15+00:00</name>
  </author>
  <link href="lightning-dev/May_2018/001277_Why-do-we-need-fee-estimation-in-the-protocol-.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001276_Why-do-we-need-fee-estimation-in-the-protocol-.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001272_Why-do-we-need-fee-estimation-in-the-protocol-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Why do we need fee estimation in the protocol?</title>
    <updated>2023-07-31T20:16:43.882517+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-May/001272.html" rel="alternate"/>
    <summary>In a discussion thread, ZmnSCPxj raised a question about the necessity of consensus in commitment transactions in the Lightning Network. They proposed that each peer should have their own version of the transaction and be responsible for paying the associated fee. However, ZmnSCPxj acknowledged that this approach could lead to issues with both parties being dissatisfied with the fees when using the transaction.ZmnSCPxj mentioned that Eltoo tackles this issue by utilizing a single input/output pair with SIGHASH_SINGLE|SIGHASH_ANYONECANPAY, enabling fees to be added later without causing bloat. However, this technique cannot be applied to Poon-Dryja because commitment transactions often have multiple outputs.The Lightning Network's fee estimation algorithm, as described in BOLT#3, may not be optimal due to the subjective considerations involved in fee estimation. Rusty Russell, a contributor to the Lightning Network, suggested a solution where peer A pays for the commit transaction A and determines the fee amount, as they always pay the fee anyway. Peer B would need to approve it but only needs to ensure the safety of their own funds. However, this solution is insufficient due to the asynchronous nature of updates, as neither party may end up being satisfied with the fees.Laolu Osuntokun proposed a different approach that involves having an "OP_TRUE" output and minimal fees, which require a Child Pays for Parent (CPFP) mechanism to push the transaction. This simplifies the fee problems but results in some on-chain bloat for unilateral closes. On the other hand, Eltoo addresses this by utilizing only a single input/output pair with SIGHASH_SINGLE|SIGHASH_ANYONECANPAY and relying on SIGHASH_NOINPUT, allowing fees to be attached later without the bloat issue.The author of the discussion questions the necessity of consensus in fee estimation for BOLT#3, suggesting that the current algorithm may be sub-optimal and subjective. They propose that each peer should have the ability to determine the fee for their own commitment transaction, with the peer who has an interest in committing to a certain transaction paying the fee. The author also suggests that changing the fee may not require a new revocation secret and that peers should be free to choose their own fees during normal operation, except in cases where there are significant HTLCs. However, updating the fee would necessitate changes to follow-up transactions due to the alteration in txID.</summary>
    <published>2018-05-15T01:03:34+00:00</published>
  </entry>
</feed>
