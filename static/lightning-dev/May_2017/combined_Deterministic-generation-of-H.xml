<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Deterministic generation of H</title>
  <updated>2023-07-31T19:20:37.619290+00:00</updated>
  <author>
    <name>Rusty Russell 2017-05-20 06:51:49+00:00</name>
  </author>
  <author>
    <name>Neil Fincham 2017-05-18 22:23:20+00:00</name>
  </author>
  <link href="lightning-dev/May_2017/000723_Deterministic-generation-of-H.xml" rel="alternate"/>
  <link href="lightning-dev/May_2017/000721_Deterministic-generation-of-H.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Deterministic generation of H</title>
    <updated>2023-07-31T19:20:37.619290+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-May/000721.html" rel="alternate"/>
    <summary>In response to Neil Fincham's query regarding the deterministic generation of the payment hash (H) in Lightning Network (LN) without revealing the payment preimage (S) used for channel closure, Rusty explains that while Bitcoin addresses can be generated using BIP32 without private keys, the same cannot be achieved with the current method for LN. Rusty further elaborates on the terminology used in LN, where the payment hash is referred to as H and the payment preimage as S. He clarifies that even though the payment preimage is required for closing out the HTLC, it is possible to send payment requests without access to the preimages.Rusty suggests a potential solution involving the use of a public key for the payment hash (H) and a private key for the payment preimage (S), which would allow for the utilization of BIP32. However, he points out that this approach is not feasible with SHA256. Additionally, Rusty mentions an alternative scheme utilizing Schnorr, wherein the signature itself serves as a type of preimage. This method could potentially enable a partition scheme similar to what Neil described, but Rusty expresses uncertainty about its viability.To summarize, the author of the email inquires about the possibility of deterministically generating the payment hash (H) in LN without disclosing the payment preimage (S) used for channel closure. They draw parallels to the generation of Bitcoin addresses using BIP32 without private keys and seek clarification on whether a similar approach can be applied to LN's payment hash.</summary>
    <published>2017-05-20T06:51:49+00:00</published>
  </entry>
</feed>
