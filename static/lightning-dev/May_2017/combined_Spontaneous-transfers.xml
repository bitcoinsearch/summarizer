<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Spontaneous transfers</title>
  <updated>2023-07-31T19:20:25.232838+00:00</updated>
  <author>
    <name>Rusty Russell 2017-05-10 03:57:41+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2017-05-09 10:19:24+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-05-09 09:01:02+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2017-05-09 01:22:42+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2017-05-08 11:47:24+00:00</name>
  </author>
  <link href="lightning-dev/May_2017/000720_Spontaneous-transfers.xml" rel="alternate"/>
  <link href="lightning-dev/May_2017/000718_Spontaneous-transfers.xml" rel="alternate"/>
  <link href="lightning-dev/May_2017/000715_Spontaneous-transfers.xml" rel="alternate"/>
  <link href="lightning-dev/May_2017/000713_Spontaneous-transfers.xml" rel="alternate"/>
  <link href="lightning-dev/May_2017/000711_Spontaneous-transfers.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Spontaneous transfers</title>
    <updated>2023-07-31T19:20:25.232838+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-May/000711.html" rel="alternate"/>
    <summary>The Lightning Network, a protocol for off-chain bitcoin payments, is facing a potential vulnerability to probing attacks. To address this issue, the developers have come up with a solution that involves using XORing to make it harder to probe the network. This approach also allows lightning nodes to function as gambling casinos without the risk of loss if they are only used as relays.In a discussion between Rusty Russell and Christian Decker, they considered using the 16 bytes in the onion to communicate a 128-bit R value. However, if larger amounts were to be supported, a new onion version would be required. They also discussed implementing the LightningDice service, which would enable probabilistic payments via the LD server. The route would commit to two possible outcomes, with the XORing playing an interesting role.ZmnSCPxj suggested two methods for making anonymous donations to controversial charities. The first option involves creating a circular route where Alice sends `X+fees` to Bob and then `fees` back to herself, masquerading the payment as an oversized fee deposited at Bob. This way, Alice can trigger the payment herself without revealing her identity to Bob. The second option involves creating a gambling service where the payout of the winning amount is the second half of the route if Alice wins. This method ensures that even the receiver cannot leak information about the donors.Some users have contacted Christian Decker to propose additional use-cases for the Lightning Network beyond invoice-based transfers. They want to be able to send donations without prior contact between the sender and recipient, without going through the invoice-transfer-release cycle. Christian Decker has suggested two solutions to address this issue. The first option involves adding sender information into the routing info, along with the payment preimage and Alice's ID. The second option involves creating a circular route where Alice sends funds to Bob and then back to herself, masquerading the payment as an oversized fee. Rusty has suggested using a wiki on Github to document brainstorming ideas for the Lightning Network.In conclusion, the discussion about invoice-based transfers has prompted the exploration of other use-cases, such as anonymous donations. Possible solutions include adding information to the routing info or creating circular routes to masquerade payments. These ideas can be documented on the lightning-rfc wiki on Github for future reference and development into BOLTs (Basis of Lightning Technology).</summary>
    <published>2017-05-10T03:57:41+00:00</published>
  </entry>
</feed>
