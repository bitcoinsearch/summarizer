<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Pay-to-Open and UX improvements</title>
  <updated>2023-07-31T22:29:19.804866+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-12-19 10:00:09+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2019-12-19 08:29:45+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-19 06:24:15+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-19 03:22:18+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2019-12-18 15:14:24+00:00</name>
  </author>
  <author>
    <name>Ethan Heilman 2019-12-18 14:35:39+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2019-12-18 10:14:38+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2019-12-18 04:49:35+00:00</name>
  </author>
  <author>
    <name>Ethan Heilman 2019-12-17 21:07:24+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-17 16:27:00+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2019-12-17 16:01:01+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-17 15:14:50+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2019-12-17 14:43:46+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-17 12:51:18+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2019-12-17 10:23:14+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-17 09:31:56+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2019-12-17 08:34:07+00:00</name>
  </author>
  <link href="lightning-dev/Dec_2019/002400_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002399_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002398_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002397_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002396_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002395_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002394_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002393_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002391_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002390_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002389_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002388_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002386_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002384_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002383_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002382_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002381_Pay-to-Open-and-UX-improvements.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Pay-to-Open and UX improvements</title>
    <updated>2023-07-31T22:29:19.804866+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002381.html" rel="alternate"/>
    <summary>The conversation discussed various proposals and solutions for optimizing Bitcoin's opcode behavior. One suggestion was the use of single-show signatures, where the private key is revealed only when combined with another signature from the same key. However, this approach can add fragility to the system and limit useful features. An alternative solution proposed was the use of a signing federation, which would require multiple signatures from respected companies in different legal jurisdictions to spend funds, addressing concerns about double-spending. Other possibilities mentioned include enforcing single-show signatures using OP_CHECKSIGFROMSTACK or SIGHASH_NOINPUT/SIGHASH_ANYPREVOUT.The Lightning network's onboarding process could be made smoother by using pay-to-open, as discussed by Bastien. This method provides a great user experience but requires temporary trust between the user and the node until the funding transaction confirms. The issue of revealing the preimage once the channel is funded can be fixed once Bitcoin supports Schnorr. By using PTLCs and MuSig for channel funding transactions, a tweaked channel opening flow can be initiated. However, in the current version, there is a security concern as Alice knows the nonce tweak beforehand.Addressing the issue of double-spending by the funder while the funding transaction is unconfirmed is a major concern. Suggestions include leveraging HTLC-like constructions similar to those used in BOLT 3 to ensure atomicity. One proposal involves creating a transaction from on-chain funds that pays out to an HTLC-like construction. However, this solution makes Alice vulnerable to Bob aborting after the pre-funding is confirmed. It is suggested that Bob be forced to provide funds to the pre-funding and a pre-signed backout can be created to return the funds back to both Alice and Bob.In conclusion, while pay-to-open offers a smoother onboarding process for Lightning network users, there are trust-related concerns that need to be addressed. The first scenario can be resolved with Schnorr support, but finding a solution for preventing double-spending by the funder during unconfirmed transactions remains a challenge. The mailing list community is actively brainstorming and leveraging their collective expertise to find potential solutions that incentivize funders against double-spending.</summary>
    <published>2019-12-19T10:00:09+00:00</published>
  </entry>
</feed>
