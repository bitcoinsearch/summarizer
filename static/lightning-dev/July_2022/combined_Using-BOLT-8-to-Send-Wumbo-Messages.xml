<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Using BOLT 8 to Send Wumbo Messages</title>
  <updated>2023-08-01T00:38:08.225533+00:00</updated>
  <author>
    <name>Thibaut Le Guilly 2022-07-04 00:29:14+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2022-07-02 00:16:08+00:00</name>
  </author>
  <link href="lightning-dev/July_2022/003655_Using-BOLT-8-to-Send-Wumbo-Messages.xml" rel="alternate"/>
  <link href="lightning-dev/July_2022/003649_Using-BOLT-8-to-Send-Wumbo-Messages.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Using BOLT 8 to Send Wumbo Messages</title>
    <updated>2023-08-01T00:38:08.225533+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-July/003649.html" rel="alternate"/>
    <summary>During a discussion among dlcspecs developers and contributors, Thibaut expressed his motivation for explicitly specifying a method to send messages larger than 65 KB using BOLT 8, a Noise-based encrypted transport protocol. One of the reasons behind this suggestion was to handle disconnects and reconnects without relying on access to the low-level network layer. Additionally, Christian Decker mentioned the need for sending urgent messages in the middle of transmitting large ones. Thibaut acknowledged that he doesn't have a strong preference for the best approach but believes it would be beneficial to implement something similar in the Lightning Network (LN) to reduce the need for managing multiple methods.Olaoluwa Osuntokun clarified that it is indeed possible to send large messages without introducing new application layer messages. The sender can divide their messages into smaller chunks, while the receiver can read them into a read buffer exposed through a stream-like interface. This method is comparable to sending a 65 KB message over TCP/IP. Interestingly, this behavior was originally included in the BOLT 8 specification but was subsequently removed to simplify matters. To reintroduce this feature, a new "wumbo message" feature bit could be added to indicate that a peer understands how to appropriately chunk and aggregate larger messages.In the discussion, various links were provided to relevant discussions and commits related to the topic. This indicates an active engagement among the dlcspecs community in refining and improving the message transmission capabilities within BOLT 8. As part of this effort, a developer sought feedback on a pull request (PR) aimed at enabling the transmission of messages larger than 65 KB. The PR proposes leveraging the existing mechanism of message chunking and aggregating, which was present in the original specification but removed for simplicity. To support this functionality, the introduction of a new feature bit, referred to as the "wumbo message" bit, is suggested.</summary>
    <published>2022-07-04T00:29:14+00:00</published>
  </entry>
</feed>
