<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Comments on BOLT#11</title>
  <updated>2023-07-31T19:31:11.407572+00:00</updated>
  <author>
    <name>Alex Bosworth 2017-12-18 05:20:35+00:00</name>
  </author>
  <author>
    <name>Jonathan Underwood 2017-12-17 12:11:25+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2017-12-16 18:51:03+00:00</name>
  </author>
  <author>
    <name>Jameson Lopp 2017-12-15 23:46:29+00:00</name>
  </author>
  <author>
    <name>Jonathan Underwood 2017-12-15 23:44:03+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2017-12-15 06:12:19+00:00</name>
  </author>
  <author>
    <name>Jonathan Underwood 2017-12-12 13:58:44+00:00</name>
  </author>
  <author>
    <name>Johan Torås Halseth 2017-12-12 13:46:28+00:00</name>
  </author>
  <author>
    <name>Jonathan Underwood 2017-12-12 05:15:47+00:00</name>
  </author>
  <author>
    <name>Jonathan Underwood 2017-12-12 02:18:50+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2017-12-12 01:18:10+00:00</name>
  </author>
  <author>
    <name>Jonathan Underwood 2017-12-11 12:17:19+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-12-11 11:10:10+00:00</name>
  </author>
  <author>
    <name>Jonathan Underwood 2017-12-10 11:37:04+00:00</name>
  </author>
  <link href="lightning-dev/Dec_2017/000858_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000855_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000857_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000853_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000852_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000851_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000831_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000830_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000829_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000828_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000826_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000822_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000821_Comments-on-BOLT-11.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000818_Comments-on-BOLT-11.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Comments on BOLT#11</title>
    <updated>2023-07-31T19:31:11.407572+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-December/000818.html" rel="alternate"/>
    <summary>The Lightning Network Daemon API does not include data in the payment request, leading to htlc.me storing data in the description field. Rusty Russell believes this is an incorrect API implementation and suggests that c-lightning does not store descriptions in the database; instead, it uses a label specified by the invoice creator. Htlc me separates its balance into user accounts outside of Lightning and uses an identifier to link user information with the payment request status. Jon, a developer, seeks edge cases for his bitcoinjs/bolt11 project related to Bitcoin and Lightning Network payments.In a discussion thread, Jonathan Underwood suggests that the invoice description may be used to link user data and payment hashes. Rusty notes that when he sends payments, only the payment hash is received. HTLC.me, which separates its balance into user accounts, uses the description field to join user data and payment hash on their end. However, Rusty suggests that this practice is understandable but not ideal for an API. Alex Bosworth is the owner of HTLC.me and uses descriptions to store user information locally. Rusty urges HTLC.me to fix the violation of using the description field for purposes other than intended.Jonathan Underwood proposes hiding certain text in payment request descriptions under specific conditions and adding an "extra data" tag. Rusty suggests that HTLC.me should have a description entry field in their "Request Payment" form to avoid violating specifications. In an email exchange with Johan Torås Halseth, Underwood shares a payment request made using UTF-8 description and discusses potential improvements to BOLT#11. There is a suggestion to set a max length for invoices and add UTF-8 support.Johan from the Lightning-dev mailing list suggests setting a reasonable maximum length for invoices and agrees on UTF-8 support. He questions including the description hash URL in the invoice and suggests it should be used between clients who have already agreed on payment for data. Jonathan Underwood shares code for a payment request using UTF-8 descriptions and provides the results of the request.Rusty and Jon discuss various topics related to the Lightning Network, including decoding process, properly formatted signatures, clear descriptions of payments, and maximum field size. They also discuss the inclusion of a URL in payment requests and its potential de-anonymizing effects. Jon proposes hiding text in descriptions and adding an "extra data" tag.Jonathan Underwood implements BOLT11 in Node.js and receives comments regarding the implementation. The user suggests adding a tags_length integer and debates whether the description or description commit hash should be included as a tag. Full unicode support via UTF8 is recommended, along with a maximum length for descriptions. Test cases for the RFC and adding signature preimage hex data to examples are proposed to improve the implementation.In a conversation between Jonathan Underwood and ZmnSCPxj, they discuss the use of UTF-8 encoding for descriptions in Bitcoin transactions. Underwood argues for mentioning naive implementations that do not follow the UTF-8 spec to avoid corruption. The purpose of the commit hash and Unicode normalization are discussed. ZmnSCPxj warns about being precise in choosing the variant of UTF8 and suggests considering Modified UTF8 or disallowing null characters. The issue of Unicode normalization and ASCII usage is also mentioned.A developer implements BOLT11 in Node.js and shares it on Github. The implementation is still in progress, with tests being developed and possible changes to the encode function. Suggestions include adding a tags_length integer, supporting full Unicode via UTF8, implementing a maximum length for descriptions, and specifying ways for parsing clients to fetch committed purpose description data. Additional test cases for the RFC and a pull request for adding signature preimage hex data to examples are proposed. The developer's PGP public key block is provided for secure communication.</summary>
    <published>2017-12-18T05:20:35+00:00</published>
  </entry>
</feed>
