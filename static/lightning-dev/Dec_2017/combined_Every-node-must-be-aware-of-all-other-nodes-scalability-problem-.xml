<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Every node must be aware of all other nodes - scalability problem?</title>
  <updated>2023-07-31T19:32:13.709559+00:00</updated>
  <author>
    <name>Christian Decker 2017-12-15 21:24:57+00:00</name>
  </author>
  <author>
    <name>Oliver Mattos 2017-12-14 18:02:38+00:00</name>
  </author>
  <link href="lightning-dev/Dec_2017/000849_Every-node-must-be-aware-of-all-other-nodes-scalability-problem-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000845_Every-node-must-be-aware-of-all-other-nodes-scalability-problem-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Every node must be aware of all other nodes - scalability problem?</title>
    <updated>2023-07-31T19:32:13.709559+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-December/000845.html" rel="alternate"/>
    <summary>The scalability issues of the Lightning Network are being discussed in a mailing list post. According to Bolt 7, every node in the network must have knowledge of every other node to select a complete route for transactions. However, as the network grows, this simplistic protocol becomes impractical. With the potential for 7e10 nodes, there would need to be 7e10 channels and a significant amount of data storage. The author suggests implementing a method where peers only keep track of nearby nodes and utilize routing tables for more distant nodes. They propose using a Distributed Hash Table (DHT) as an example, where intermediate nodes do not know both the sender and receiver.The author wonders why this solution has not been implemented yet and speculates that there are many aspects to address before tackling the routing problem. Christian, in response, mentions that they are already considering advanced path finding algorithms to reduce the reliance on complete information about nodes. He acknowledges that there is still much work to be done for the Lightning Network in general, so the routing problem has been put aside for now as it is considered a "luxury problem." Before reaching that point, they need to establish a successful enough network that necessitates a better solution.Rusty provides some approximate calculations regarding the data size that a node would have to handle for 1 million nodes, which amounts to around 120 MB without updates. Overall, the Lightning Network's requirement for every node to be aware of all others for transaction routing poses significant scalability challenges. The concept of having peers track only nearby nodes and employing routing tables for more distant ones, possibly utilizing a DHT system, could be a potential solution. However, the implementation of such a system presents its own set of difficulties, which may explain why it has not been adopted yet.</summary>
    <published>2017-12-15T21:24:57+00:00</published>
  </entry>
</feed>
