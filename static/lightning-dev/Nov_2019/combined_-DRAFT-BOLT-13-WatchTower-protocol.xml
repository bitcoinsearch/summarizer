<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [DRAFT] BOLT 13(?): WatchTower protocol</title>
  <updated>2023-07-31T22:24:32.570199+00:00</updated>
  <author>
    <name>Sergi Delgado Segura 2020-03-09 17:49:47+00:00</name>
  </author>
  <author>
    <name>Sergi Delgado Segura 2019-12-05 16:46:23+00:00</name>
  </author>
  <author>
    <name>Sergi Delgado Segura 2019-12-05 16:21:10+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2019-12-03 00:26:11+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2019-11-29 05:43:32+00:00</name>
  </author>
  <author>
    <name>Sergi Delgado Segura 2019-11-27 20:20:21+00:00</name>
  </author>
  <link href="lightning-dev/March_2020/002586_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002368_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002367_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002357_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002353_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002350_-DRAFT-BOLT-13-WatchTower-protocol.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [DRAFT] BOLT 13(?): WatchTower protocol</title>
    <updated>2023-07-31T22:24:32.570199+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-November/002350.html" rel="alternate"/>
    <summary>The document discusses the concept of WatchTower, which is a mechanism in the Lightning Network that helps protect users from potential channel breaches. It explains that while the WatchTower cannot access any information about a client's channel unless there is a breach, clients are advised to send data to the WatchTower whenever there is an update in the channel.The protocol includes various messages such as appointment, appointment_accepted, and appointment_rejected. The appointment message contains information about the appointment that the client wants to arrange with the server, while the appointment_accepted and appointment_rejected messages indicate the acceptance or rejection of an appointment by the WatchTower.Quality of Service (QoS) is an optional feature offered by the WatchTower protocol. It provides stronger guarantees to the clients, such as a signed receipt for every new job. The protocol defines the format for customer_evidence and tower_evidence messages associated with accountability QoS. These messages are used to provide evidence in case of disputes.The payment modes for WatchTowers are discussed in the document. On-chain bounty, micropayments, and subscriptions are the three common payment approaches. Micropayments and subscriptions are more favorable for WatchTowers, whereas the on-chain bounty approach may lead to DoS attacks.The document also discusses the vulnerability of WatchTowers to attacks and suggests precautions that can be taken to prevent them. It emphasizes the importance of using subscriptions instead of single appointments to enhance security.Furthermore, the proposal acknowledges areas for further development and improvements to the current hiring protocol. It mentions the need for defining proper tower discovery and error handling mechanisms.Overall, the WatchTower protocol aims to standardize the communication between clients and WatchTowers, providing a secure and reliable monitoring service for Lightning Network channels.The document provides a detailed table of contents, outlining different sections that focus on various topics such as WatchTower discovery and services, basic service, QoS, sending and receiving appointments, accountability, transaction locator and encryption key, encryption algorithms and parameters, payment modes, and no compression of justice transactions.However, it notes that the authors have not yet defined how a client can find a list of servers to hire but assume that the client has already found a server offering a watching service.Lastly, the document describes two types of services: basic service and quality of service (QoS). The QoS builds on top of the basic service provided by the tower, offering additional features and guarantees.Overall, the document aims to provide a comprehensive guide to building appointments for the WatchTower, including key/locator derivation and data encryption, a protocol for client/server communication, and a format for the signed receipt.</summary>
    <published>2020-03-09T17:49:47+00:00</published>
  </entry>
</feed>
