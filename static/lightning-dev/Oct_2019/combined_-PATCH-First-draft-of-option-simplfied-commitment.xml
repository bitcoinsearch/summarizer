<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [PATCH] First draft of option_simplfied_commitment</title>
  <updated>2023-07-31T20:52:13.722504+00:00</updated>
  <author>
    <name>Joost Jager 2020-01-22 07:41:26+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2019-11-19 18:53:01+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2019-11-19 13:46:23+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2019-11-16 05:46:26+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2019-11-14 23:43:50+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2019-11-14 09:56:05+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2019-11-12 01:06:20+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2019-11-07 14:33:00+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2019-11-06 00:48:25+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2019-11-04 22:41:57+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2019-10-31 11:34:48+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2019-10-31 00:17:56+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2019-10-30 16:21:43+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2019-10-30 16:08:41+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2019-10-30 13:03:55+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2019-10-30 10:04:04+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2019-10-26 20:28:38+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2019-10-26 07:19:43+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-29 17:13:44+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-26 03:12:30+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-25 19:09:25+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-25 19:02:55+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2018-11-25 18:47:17+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-22 05:12:54+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-22 02:20:16+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-21 22:45:23+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-21 17:55:33+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2018-11-21 02:54:18+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-21 02:17:17+00:00</name>
  </author>
  <link href="lightning-dev/Jan_2020/002449_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002338_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002337_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002334_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002336_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002329_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002319_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002297_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002287_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2019/002274_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002269_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002270_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002267_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002266_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002264_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002262_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002250_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2019/002249_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001695_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001668_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001667_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001666_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001665_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001656_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001654_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001651_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001647_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001644_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001643_-PATCH-First-draft-of-option-simplfied-commitment.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [PATCH] First draft of option_simplfied_commitment</title>
    <updated>2023-07-31T20:52:13.722504+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001643.html" rel="alternate"/>
    <summary>In a recent email thread, Lightning Network developers discussed the implementation of anchor outputs and their impact on channel opening and closing. The dust limit for Segwit outputs is currently set at 294 satoshis, assuming three times the minfee. Anchor outputs, which are currently set at 294 satoshis, are spendable and cost $3 each if BTC reaches $1M. However, there is a suggestion to lower the anchor size if the BTC/fiat price rises and lowers the dust limit to prevent giving away too much free money.The complexity of the Lightning Network protocol is a concern, and it is suggested to simplify the state machine instead of adding more complexity. One proposal is to introduce a new parameter in the channel opening sequence to set the anchor size, keeping all options open and avoiding future changes.The dust limit exists to prevent non-economical UTXOs from filling the UTXO set when feerates are low. The dust limit is not expected to rise unless the BTC/fiat price drops significantly. Dust limits could decrease or be removed, but this would not affect anchor outputs. It is advised to create anchor outputs that are economical to spend and require negotiable output amounts to compensate for fee rate fluctuations.There is a discussion about the possibility of channels getting stuck due to unbalanced transactions and the use of a hard-coded constant for dust relay fee. To adapt to changes in dustRelayFee, two options are proposed: adding a new anchor_msat field or reusing `dust_limit_satoshis` as the anchor size. It is also suggested to put an anchor output limit of 294 satoshis directly into the spec to avoid potential risks.In terms of commitment transactions, there will never be a commitment tx where the non-initiator pays fees. However, channels can get stuck if there is no reasonable balance. The concern is raised about the possibility of `dustRelayFee` changing in the future, making the hard-coded 294 sat anchors risky for opening new channels. Various proposals are discussed, including each side paying for their own anchor output and rotating anchors. The idea of reusing funding keys for the anchor output is also mentioned.The implementation of anchor outputs and key rotation in the Lightning Network is a topic of discussion. The need for both parties to pay for their own anchors, the dust limit negotiated in the open_channel or accept_channel message, and the possibility of stuck channels are all considered. Suggestions are made to make payment for anchors before fees and to avoid a hard-coded constant for dustRelayFee. The idea of each side paying for their own anchor output and rotating anchors is proposed, along with the suggestion of reusing funding keys for the anchor output.In an email exchange, the Lightning Network developers discuss the implementation of anchor outputs and the possibility of using distinct values. The issue of unbalanced transactions and the use of a hard-coded constant for dust relay fee is raised. It is suggested to introduce a new parameter in the channel opening sequence to set the anchor size and avoid future changes. The possibility of channels getting stuck and the need to adapt to changes in dustRelayFee are also discussed. The idea of reusing `dust_limit_satoshis` or adding a new `anchor_msat` field in the opening messages is proposed. The conversation also touches on the proposal to reuse funding keys for the anchor output to simplify the process.The discussion also includes the proposal of a new commitment format for Lightning Network channels. There is a debate about using a single "to_self_delay" value or allowing distinct values. It is agreed that negotiation during the opening phase is not feasible, but a unification proposal suggests using the maximum of the two settings. The use of anchor outputs and the concerns about insufficient fees and stuck channels are also addressed. The possibility of using a hard-coded constant for dustRelayFee is opposed, and the idea of each side paying for its own anchor output is suggested.The conversation delves into the details of using anchor outputs in the Lightning Network. The possibility of negotiation during the opening phase is discussed, along with the concern of channels getting stuck due to unbalanced transactions. The need for key rotation to prevent watchtower hacks is also addressed. Several proposals are made, including reusing funding keys for the anchor output and simplifying the process by sticking with the original design. The issue of adapting to changes in dustRelayFee is also raised, with suggestions to reuse `dust_limit_satoshis` or add a new `anchor_msat` field in the opening messages.In a mailing list conversation between Rusty Russell and Joost Jager, proposed changes to the Bitcoin rules for Lightning Network's commitment transactions were discussed. One suggestion was to add `1 OP_CHECKSEQUENCEVERIFY OP_DROP` to the non-revocation clause of the HTLC outputs. However, there were concerns about the proposal to have an unconditional additional spending path for anchor outputs except for a</summary>
    <published>2020-01-22T07:41:26+00:00</published>
  </entry>
</feed>
