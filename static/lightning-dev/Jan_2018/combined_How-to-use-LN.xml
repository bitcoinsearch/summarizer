<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - How to use LN</title>
  <updated>2023-07-31T19:40:12.415098+00:00</updated>
  <author>
    <name>Benjamin Mord 2018-01-25 21:16:50+00:00</name>
  </author>
  <author>
    <name>v e 2018-01-25 20:48:12+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2018-01-20 13:41:53+00:00</name>
  </author>
  <author>
    <name>v e 2018-01-19 17:21:27+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2018-01-19 11:31:49+00:00</name>
  </author>
  <author>
    <name>v e 2018-01-18 21:27:24+00:00</name>
  </author>
  <link href="lightning-dev/Jan_2018/000960_How-to-use-LN.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000959_How-to-use-LN.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000955_How-to-use-LN.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000953_How-to-use-LN.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000952_How-to-use-LN.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000951_How-to-use-LN.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - How to use LN</title>
    <updated>2023-07-31T19:40:12.415098+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000951.html" rel="alternate"/>
    <summary>The email thread discusses the implementation of the Lightning Network, specifically c-lightning, lnd, and eclair. Christian Decker advises against exposing lightningd to multiple tenants and suggests building a layer in between that differentiates the tenants and controls access to individual resources. It is recommended for every user, including customers and shops, to run their own nodes instead of relying on managed infrastructure. The conversation between v e and Christian Decker revolves around understanding how a merchant wallet is tied to an invoice and how a consumer wallet can send satoshi to that invoice id. Code examples related to these topics were requested but not provided.In another conversation, the topic of the Lightning protocol and its use by clients was discussed. It was confirmed that all parties involved in the network, including end clients who buy goods and services, should understand the Lightning protocol. The discussion then shifted to building a server-client model where multiple merchants could accept payments from end customers. The question arose whether each merchant needed a Bitcoin node, c-lightning + charge node. However, it was advised against exposing lightningd directly to multiple tenants and instead suggested building a layer in between to differentiate tenants and control access to resources. It was emphasized that every user, whether customer or shop, should run their own nodes and not rely on managed infrastructure.In the email conversation between v e and Christian Decker, they discuss the use of the Lightning Charge API for a merchant app and consumer wallet app. The necessary components mentioned include a full bitcoind node synced with the network, a c-lightning node, and npm + lightning-charge running to give access to the REST API. Invoices are tracked by c-lightning and can be stored using the payment_hash. Customers need their own Lightning client and open channels to the network to send payments. The question was also asked if customers referred to end clients buying goods and services.A user named v e reached out to the Lightning development team with questions about using their Lightning Charge API. They are building a merchant app and consumer wallet app using Bitcoinj APIs for wallet creation. They inquire about the need to run a Bitcoin Core node and how to tie the merchant wallet to the invoice. Christian explains that to use Lightning Charge, a full bitcoind node synced with the network, c-lightning node, and npm + lightning-charge running are necessary. The invoices are tracked by c-lightning and customers require their own Lightning client and open channels to send payments.The writer is creating a merchant app and consumer wallet app using bitcoinj APIs for wallet creation and wants to use the Lightning Network (LN) built by the recipient's team. They ask if they need to run a Bitcoin Core node to integrate with LN and how to tie the merchant wallet to the invoice generated through LN's invoice APIs. They also inquire about sending coins from the consumer wallet to the created invoice. Despite being new to this area, the writer seeks assistance from the recipient and appreciates any help given.</summary>
    <published>2018-01-25T21:16:50+00:00</published>
  </entry>
</feed>
