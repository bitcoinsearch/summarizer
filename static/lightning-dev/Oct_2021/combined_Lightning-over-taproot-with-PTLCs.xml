<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning over taproot with PTLCs</title>
  <updated>2023-07-31T23:52:43.122614+00:00</updated>
  <author>
    <name>Anthony Towns 2021-10-19 06:26:50+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-19 04:16:13+00:00</name>
  </author>
  <author>
    <name>Lloyd Fournier 2021-10-13 04:15:14+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-12 04:48:56+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-10-12 04:18:37+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-12 03:26:58+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-12 03:08:21+00:00</name>
  </author>
  <author>
    <name>Lloyd Fournier 2021-10-11 21:12:14+00:00</name>
  </author>
  <author>
    <name>Lloyd Fournier 2021-10-11 10:23:19+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-11 06:29:51+00:00</name>
  </author>
  <author>
    <name>Lloyd Fournier 2021-10-11 06:05:05+00:00</name>
  </author>
  <author>
    <name>Jonas Nick 2021-10-10 18:01:55+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-09 13:59:39+00:00</name>
  </author>
  <author>
    <name>Jonas Nick 2021-10-09 12:21:03+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-10-09 02:27:37+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-09 02:15:19+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-10-09 01:49:38+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-09 01:12:07+00:00</name>
  </author>
  <link href="lightning-dev/Oct_2021/003325_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003324_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003306_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003296_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003295_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003294_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003293_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003291_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003288_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003287_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003286_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003284_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003283_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003282_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003281_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003280_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003279_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003278_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning over taproot with PTLCs</title>
    <updated>2023-07-31T23:52:43.122614+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003278.html" rel="alternate"/>
    <summary>In recent discussions on the Lightning Network's payment forwarding system, several proposals and considerations have been put forward to improve its functionality. One proposal suggests replacing BOLT#2 and BOLT#3 with a gradual implementation plan that includes various features such as taproot funding/anchor output, PTLC outputs, low-latency payments, eltoo channels, and eltoo factories. Each step in the plan aims to enhance privacy, reduce complexity, and enable low-latency payments.Another topic of discussion revolves around a new payment channel update mechanism that allows for low-latency payments while ensuring security against revoked states. The proposed transaction structure involves commitment transactions, low-latency inflight transactions, and careful management and monitoring of the channel. This approach offers the opportunity for low-latency payments but requires attention to security considerations.Game theory concerns are also being explored in relation to the implementation of eltoo, a protocol that enables costless theft attempts. While there are concerns about potential abuse and lack of penalties, mechanisms are in place to prevent such issues. Additionally, alternative approaches such as revocable signatures and scorched earth punishments are being considered.The layering of payments is another aspect being discussed, with a focus on addressing challenges and finding solutions to ensure safe and efficient payment forwarding. Concerns about delays and early channel closures are being addressed to improve the overall efficiency of the payment system.In the context of generalized payment channels, the use of revocable signatures is proposed to solve the constant size storage problem. This approach also enables scorched earth punishments. However, there are questions regarding numbering inflight transactions and the implications of certain notation. The lack of option_static_remotekey is compensated by signing a "good will" in-flight transaction that sends all coins to the static key.A proposal involving the use of deterministic nonces in MuSig raises concerns about security and nonce reuse. Possible countermeasures and an adaptor signature scheme are suggested to address these concerns.There is also a suggestion to avoid putting transactions on-chain to reduce implementation complexity. Child pays for parent (CPFP) and establishing a new taproot-based channel without advertising it are proposed as alternatives.ZmnSCPxj proposes various approaches to transition from the BOLT#3 format to a new scheme without requiring an on-chain transaction. These proposals aim to maintain historical longevity of channels and minimize data storage requirements.Overall, these discussions highlight ongoing efforts to improve the Lightning Network's payment forwarding system through various proposals and considerations. The focus is on addressing privacy, security, latency, and usability concerns while maintaining a robust and efficient payment network.</summary>
    <published>2021-10-19T06:26:50+00:00</published>
  </entry>
</feed>
