<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Commitment Transaction Format Update Proposals?</title>
  <updated>2023-07-31T20:33:03.021237+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2018-11-06 06:03:19+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-06 04:59:52+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-11-06 04:29:21+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-23 10:43:26+00:00</name>
  </author>
  <author>
    <name>Jim Posen 2018-10-20 20:36:59+00:00</name>
  </author>
  <author>
    <name>Conner Fromknecht 2018-10-20 16:12:00+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-19 10:42:31+00:00</name>
  </author>
  <author>
    <name>Fabrice Drouin 2018-10-18 11:28:31+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-13 02:59:02+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-10-12 07:08:48+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-12 06:36:57+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-10-12 06:19:31+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-12 04:56:03+00:00</name>
  </author>
  <link href="lightning-dev/Nov_2018/001520_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001519_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001518_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001473_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001471_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001470_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001469_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001466_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001452_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001450_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001449_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001448_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001446_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Commitment Transaction Format Update Proposals?</title>
    <updated>2023-07-31T20:33:03.022234+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001446.html" rel="alternate"/>
    <summary>The Lightning Network developers are considering changes to the commitment transaction format. These changes include using an OP_TRUE-style output for CPFP, making `remotepubkey` a BIP-32-style to avoid the option_data_loss_protect problem, and making the CLTV timeout symmetrical to prevent gaming the peer into closing. These changes will be combined into a single `commitment_style2` feature.In a discussion between Olaoluwa Osuntokun and Rusty Russell, they discuss changes that simplify the static channel backup and recovery workflow in Bitcoin's Lightning Network. They agree to modify the derivation for local+remote pubkey to minimize code impact while achieving the immediate goal. They also discuss the use of SIGHASH_ANYONECANPAY|SIGHASH_SINGLE for HTLC transactions to allow users to bring their own fees.The derivation of keys such as `localpubkey`, `remotepubkey`, `local_htlcpubkey`, `remote_htlcpubkey`, `local_delayedpubkey`, and `remote_delayedpubkey` will now use a two-stage unhardened BIP-32 derivation based on the commitment number. This change is aimed at simplifying the backup and recovery workflow with the current commitment design.There is a discussion about the use of CPFP in Bitcoin transactions to include transaction fees. Jim Posen suggests signing inputs with ANYONECANPAY and creating an exact output for the fees input. However, this approach would change the transaction ID that the HTLC transactions rely on.Rusty Russell argues that the delays in commitment transactions need not be the same for both parties but should be applied equally regardless of who publishes the commitment transaction. He explains that taking the maximum delay avoids game theory issues and potential coercion.The Lightning Network's commitment transaction format may see changes including a P2WSH OP_TRUE output of 1000 satoshi and symmetrical timeouts on the CLTV. The feerate for commitment transactions would be set at 253 satoshi/Sipa, and fees and OP_TRUE would be paid by the initial funder in most cases. Changes are also coming to HTLC-timeout and HTLC-success txs sigs, allowing users to bring their own fees. The derivation of keys will now use a two-stage unhardened BIP-32 derivation based on the commitment number.In a discussion about managing on-chain fees for commitment transactions, various proposals were made. One proposal suggests using an OP_TRUE-style output to allow for CPFP, while another suggests using SIGHASH_ANYONECANPAY|SIGHASH_SINGLE for HTLC transactions without adding the "OP_TRUE" output to the commitment transaction. There is also a proposal to make the CLTV timeout symmetrical to avoid trying to game the peer into closing. These suggestions aim to manage fees in commitment transactions more effectively.The Lightning Network developers are considering changes to the commitment transaction format. One proposal is to use an OP_TRUE-style output to allow for CPFP and avoid channel closures during spikes in on-chain fees. Another suggestion is to use SIGHASH_ANYONECANPAY|SIGHASH_SINGLE for HTLC transactions, allowing users to bring their own fees. Additionally, the CLTV timeout may be made symmetrical to prevent gaming the peer into closing. These changes aim to simplify the backup and recovery workflow in Bitcoin's Lightning Network.A discussion took place regarding the management of on-chain fees for commitment transactions in the Lightning Network. One proposal suggested using an OP_TRUE-style output to enable Child Pays for Parent (CPFP) and avoid closing channels during spikes in on-chain fees. Another suggestion was to use SIGHASH_ANYONECANPAY|SIGHASH_SINGLE for HTLC transactions, allowing users to bring their own fees. It was also proposed to make the CLTV timeout symmetrical to prevent attempts to game the peer into closing. These proposals aim to simplify the fee management process and improve the overall efficiency of the Lightning Network.The Lightning Network developers are considering changes to the commitment transaction format. One proposed change is the use of an OP_TRUE-style output to allow for Child Pays for Parent (CPFP), which would avoid closing channels during spikes in on-chain fees. Another change is the use of SIGHASH_ANYONECANPAY|SIGHASH_SINGLE for HTLC transactions, allowing users to bring their own fees. The CLTV timeout may also be made symmetrical to prevent attempts to manipulate the peer into closing. These changes aim to simplify the backup and recovery workflow and provide more flexibility in managing on-chain fees.</summary>
    <published>2018-11-06T06:03:19+00:00</published>
  </entry>
</feed>
