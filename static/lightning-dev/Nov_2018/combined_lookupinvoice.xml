<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - lookupinvoice</title>
  <updated>2023-07-31T20:57:54.840060+00:00</updated>
  <author>
    <name>Sarat G 2018-11-26 08:54:41+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-26 03:27:59+00:00</name>
  </author>
  <author>
    <name>Sarat G 2018-11-23 10:46:04+00:00</name>
  </author>
  <link href="lightning-dev/Nov_2018/001672_lookupinvoice.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001669_lookupinvoice.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001658_lookupinvoice.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - lookupinvoice</title>
    <updated>2023-07-31T20:57:54.841060+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001658.html" rel="alternate"/>
    <summary>Sarat G, who has been actively involved in working on the Lightning Network (LN) repository, is currently facing a challenge in finding a suitable method for payees to retrieve information about their paid invoices. He specifically mentions the 'lookupinvoice' command available in lnd (Golang), but it remains unclear which LN repository Sarat is referring to since there are multiple options.In response to Sarat's query, Rusty Russell provides valuable insights and suggests utilizing various commands from different LN repositories. For instance, Rusty mentions that lnd offers the 'lookupinvoice' command, while eclair provides 'checkpayment', and c-lightning offers both 'listinvoices' and 'wait(any)invoice'. These commands can be utilized to track and determine the status of invoices created within each respective LN repository.Additionally, Rusty proposes the idea of creating a rosetta stone, a comprehensive guide that maps out the different APIs available in different LN repositories. This would greatly assist developers like Sarat in navigating and understanding the diverse range of commands and functionalities provided by each repository.To address Sarat's specific problem, he explains that there is a hub where various players make payments of differing amounts. The hub node requires a mechanism to accurately track which player paid for which specific invoice. Sarat seeks assistance in identifying the most effective combination of commands that would facilitate this particular task.Overall, Sarat G's work on the LN repository involves finding a solution for payees to access information about their paid invoices. Rusty Russell offers support by suggesting relevant commands from different LN repositories and proposes the creation of a rosetta stone as a helpful resource for developers. Sarat also expresses the need for assistance in determining the ideal combination of commands to effectively track payments made by players at the hub node.</summary>
    <published>2018-11-26T08:54:41+00:00</published>
  </entry>
</feed>
