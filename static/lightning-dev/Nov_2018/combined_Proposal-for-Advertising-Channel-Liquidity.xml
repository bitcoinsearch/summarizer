<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Proposal for Advertising Channel Liquidity</title>
  <updated>2023-07-31T20:39:18.354928+00:00</updated>
  <author>
    <name>Cezary Dziemian 2019-06-05 14:05:17+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-12 10:05:08+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-12 09:58:08+00:00</name>
  </author>
  <author>
    <name>lisa neigut 2018-11-12 09:42:13+00:00</name>
  </author>
  <author>
    <name>lisa neigut 2018-11-12 09:35:19+00:00</name>
  </author>
  <author>
    <name>lisa neigut 2018-11-12 09:20:49+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-11-08 22:42:38+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2018-11-08 22:39:54+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-11-08 07:02:01+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2018-11-08 06:17:03+00:00</name>
  </author>
  <author>
    <name>Jim Posen 2018-11-08 02:40:13+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-07 10:49:21+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-07 06:17:17+00:00</name>
  </author>
  <author>
    <name>lisa neigut 2018-11-07 04:07:42+00:00</name>
  </author>
  <link href="lightning-dev/June_2019/002002_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001567_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001566_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001565_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001564_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001563_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001545_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001544_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001543_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001542_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001541_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001538_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001536_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001532_Proposal-for-Advertising-Channel-Liquidity.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Proposal for Advertising Channel Liquidity</title>
    <updated>2023-07-31T20:39:18.355934+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001532.html" rel="alternate"/>
    <summary>In this email thread, Cezary Dziemian expresses frustration with the implementation of a project he had been working on for over a year. He initially built a prototype based on c-lightning but switched to LND due to issues with c-lightning. However, he faced problems with LND as well, as there were missing API methods. Cezary suggests building a cross-implementation group to work together and mentions that his friend is willing to fund the development of the project, preferably in Java.Another part of the discussion revolves around charging for liquidity on Lightning channels. ZmnSCPxj proposes establishing a channel with a fixed rate of payment per hour, but there are concerns that a second node could game the system by making payments through the channel to capture the fees. To address this, higher transmission fees are suggested to make the attack infeasible. An alternative mechanism to CLTV-encumberance is proposed, which may be superior.The discussion also focuses on advertising and receiving offers for dual funding. Skewed channels are required for large vendors like Amazon, and open channels with Amazon can benefit liquidity providers. An attack scenario is discussed where a node operator advertises liquidity but does not deliver it after receiving payment. Possible solutions include modifying channel commitment transactions and encumbering only the liquidity provider.A proposal is made to allow nodes to advertise initial liquidity matching through their node_announcement. This would create a market of inbound capacity that any node can take advantage of, reducing the need for out-of-band negotiation. New feature flags are added to the node_announcement, including data such as fee rates for liquidity and base fees for providing liquidity. If a node cannot provide the requested liquidity, it must return an error. The proposal credits Casey Rodamor for the initial idea.In the discussion about charging for liquidity, Jim Posen suggests a model based on the amount multiplied by time. Another proposal suggests establishing a channel with specific payment terms for a certain period. However, there are concerns about potential gaming of the system by a second node. To mitigate this, higher transmission fees are suggested. The idea is still in its early stages and may require protocol modifications.The debate on whether a node should be able to request more liquidity than they put into a channel is discussed. There are concerns that allowing arbitrary capacity requests could lead to malicious attacks where funds are locked up in unusable channels. Suggestions include requiring nodes to have a minimum amount of capacity tied into the channel. Advertised liquidity creates a market of inbound capacity, reducing the need for out-of-band negotiation.In the context of node announcements, it is mentioned that most implementations currently ignore announcements from nodes without any channels. This behavior would need to be changed globally for node announcements to propagate effectively. The usefulness of incoming capacity from a random node without other channels is questioned.The proposal to allow nodes to advertise liquidity matching is seen as a solution to the problem of sourcing inbound capacity. It would create a market of inbound capacity, reducing the need for out-of-band negotiation. The proposal depends on dual funding being possible and credits Casey Rodamor for the initial idea.The challenges of offering liquidity and potential solutions are discussed. Charging based on the amount of liquidity provided multiplied by time is suggested, but enforcing it at the protocol layer is difficult. Pre-paying on fees and locking up fees in a channel reserve are also proposed. Aligning incentives better is seen as crucial, and paying upfront for routing fees and reimbursing as needed is one idea.Overall, the discussions revolve around finding fair and secure ways to charge for liquidity on Lightning channels, allowing nodes to advertise liquidity matching, addressing attack scenarios, and reducing the need for out-of-band negotiation to obtain inbound capacity.</summary>
    <published>2019-06-05T14:05:17+00:00</published>
  </entry>
</feed>
