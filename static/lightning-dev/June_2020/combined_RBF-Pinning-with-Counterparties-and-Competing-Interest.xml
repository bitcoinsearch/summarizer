<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - RBF Pinning with Counterparties and Competing Interest</title>
  <updated>2023-07-31T22:50:13.549812+00:00</updated>
  <author>
    <name>Matt Corallo 2020-06-24 08:32:52+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-06-22 08:25:09+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-22 08:15:37+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-06-22 07:35:20+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-21 02:10:32+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-06-20 16:01:16+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2020-06-20 10:36:47+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-06-20 08:54:03+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2020-06-19 20:52:20+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2020-06-19 19:58:46+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-06-19 07:44:11+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-04-27 21:26:19+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2020-04-23 22:47:46+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-04-23 12:52:57+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-04-23 12:46:59+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2020-04-23 09:59:57+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2020-04-23 06:21:50+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-04-23 04:50:09+00:00</name>
  </author>
  <author>
    <name>Jeremy 2020-04-23 01:18:05+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2020-04-23 01:10:47+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2020-04-22 23:27:49+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2020-04-22 23:20:03+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2020-04-22 23:13:01+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2020-04-22 23:11:08+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2020-04-22 23:05:17+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2020-04-22 22:53:37+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2020-04-22 20:28:13+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2020-04-22 18:24:54+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2020-04-22 16:56:38+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2020-04-22 16:50:46+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2020-04-22 11:51:30+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-04-22 08:55:42+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2020-04-22 08:01:23+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-04-22 06:08:06+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2020-04-22 04:18:29+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2020-04-22 04:13:34+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-04-22 04:12:59+00:00</name>
  </author>
  <author>
    <name>Matt Corallo 2020-04-21 02:43:14+00:00</name>
  </author>
  <link href="lightning-dev/June_2020/002757_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002754_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002753_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002752_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002746_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002744_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002743_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002742_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002741_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002740_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002739_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002674_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002669_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002667_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002666_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002664_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002663_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002662_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002660_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002658_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002657_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002656_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002655_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002654_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002653_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002652_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002651_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002650_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002649_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002648_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002646_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002645_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002644_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002643_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002642_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002641_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002640_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <link href="lightning-dev/April_2020/002639_RBF-Pinning-with-Counterparties-and-Competing-Interest.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - RBF Pinning with Counterparties and Competing Interest</title>
    <updated>2023-07-31T22:50:13.549812+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-April/002639.html" rel="alternate"/>
    <summary>The discussion on the Bitcoin-dev mailing list revolves around the possibility of a miner hiding a transaction from certain parts of the network. One participant acknowledges that it is theoretically possible but difficult in practice. They argue that an attacker capable of doing this would disrupt off-chain constructions relying on absolute timeouts, with the hope that achieving this without cooperation from miners would be challenging.Another participant suggests using independent pay-to-preimage transactions as a technical solution but highlights concerns about incentives. They propose releasing two transactions with near-equal fees, one near miners and the other near non-miners, creating an inviolate boundary between the two transactions.Matt observes that transaction relay delays and network topology make this attack practical with a double-digit success rate, suggesting it should be addressed in the medium term.In an email exchange, Bastien and ZmnSCPxj discuss the possibility of an attack on off-chain constructions relying on absolute timeouts. ZmnSCPxj suggests using independent pay-to-preimage transactions as a solution, but Bastien raises concerns about the incentives involved, as miners would have to cooperate with the attacker. ZmnSCPxj argues that it is technically possible to execute this attack without miner cooperation. The attacker can release two transactions with near-equal fees, one near miners and the other near non-miners, creating a boundary between the two transactions that neither can pass.ZmnSCPxj responds to Bastien's message regarding independent pay-to-preimage transactions, agreeing with the technical implementation but highlighting remaining incentive issues. They suggest that miners hiding the preimage transaction must collaborate with the attacker. However, they believe it is technically possible to execute the attack without miner cooperation. By releasing two transactions with near-equal fees, one near miners and the other near non-miners, a boundary is created where each node receives and rejects one of the transactions. This inviolate boundary prevents either transaction from passing, even with unmodified Bitcoin Core code.In a discussion on recent attacks on the Lightning Network (LN), Bastien suggests using independent pay-to-preimage transactions as a technical solution. However, David Harding raises concerns about incentives and centralization. Miners hiding the preimage transaction would have to collaborate with the attacker, potentially leading to bidding wars and loss of funds for honest users. Harding proposes incentive equivalents to normal on-chain transaction fees, eliminating reputational advantage and direct economies of scale.The conversation discusses the use of pay-for-signature construction in pointlocked timelock contracts (PTLCs) involving signing with MuSig(A, B). A proposes a fund that can only be claimed by leaking knowledge of 's' behind 's*G'. The proposal includes generating keypairs, revealing specific information publicly, and involving a third party to complete the signature. The discussion highlights privacy advantages.David A. Harding raises concerns about LN nodes investing in mining pools to gain information and reduce attacks, suggesting it could lead to centralization. He recommends using independent pay-to-preimage transactions as incentive equivalents to on-chain fees. ZmnSCPxj notes that pay-to-preimage doesn't work with PTLCs. Harding questions the need for off-chain nodes to heavily invest in on-chain operations and sees no benefits from eltoo. However, he considers investing in running nodes in mining pools to learn about attackers' transactions and potentially share preimages off-chain reasonable, ignoring concerns about mining centralization.The conversation involves a proposal to protect against an attack on lightning network channels involving broadcasting the latest state of a channel and redirecting funds to an attacker's address. It discusses the relay of blind child transactions and the limitations in practice. Bastien suggests having Lightning Network nodes invest in running nodes in mining pools to learn about attackers' transactions and share discovered preimages off-chain. The recent attacks highlight the importance of off-chain nodes being invested in on-chain operations.The context discusses various proposals and solutions related to the Bitcoin mempool, HTLC spends, pinning attacks, and potential vulnerabilities. One proposal suggests using a hashlock smart contract with an intermediary to facilitate payments. However, there are flaws in the current implementation, and alternative solutions are proposed.Matt Corallo suggests using a bribe system to incentivize miners to include transactions with specific preimages. This can be done through confirmed P2WPKH UTXOs and scriptPubKeys with OP_SHA256 OP_EQUAL. Non-miners can also create child transactions if they know the preimage. However, this solution requires additional software and complexity in LN clients.ZmnSCPxj proposes limiting the size of low fee-rate transaction packages to prevent denial-of-service attacks. By preventing incoming transactions from extending a low-fee-rate tree of transactions, it will be easier to evict such transactions without much impact. This solution aims to address the difficulty involved in evicting low fee-rate transactions.Jeremy Rubin suggests dedicating more development resources towards finishing the mempool project to solve the existing issues. This includes testing construction, refactoring algorithms, and</summary>
    <published>2020-06-24T08:32:52+00:00</published>
  </entry>
</feed>
