<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Disclosure of a fee blackmail attack that can make a victim loose almost all funds of a non Wumbo channel and potential fixes</title>
  <updated>2023-07-31T22:57:23.628961+00:00</updated>
  <author>
    <name>Jeremy 2020-06-22 19:18:08+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2020-06-22 14:19:20+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2020-06-22 01:20:23+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2020-06-22 01:09:28+00:00</name>
  </author>
  <author>
    <name>Jeremy 2020-06-21 22:17:39+00:00</name>
  </author>
  <author>
    <name>Jeremy 2020-06-20 23:13:40+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2020-06-18 08:40:45+00:00</name>
  </author>
  <author>
    <name>Ren√© Pickhardt 2020-06-17 10:29:42+00:00</name>
  </author>
  <link href="lightning-dev/June_2020/002756_Disclosure-of-a-fee-blackmail-attack-that-can-make-a-victim-loose-almost-all-funds-of-a-non-Wumbo-channel-and-potential-fixes.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002755_Disclosure-of-a-fee-blackmail-attack-that-can-make-a-victim-loose-almost-all-funds-of-a-non-Wumbo-channel-and-potential-fixes.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002751_Disclosure-of-a-fee-blackmail-attack-that-can-make-a-victim-loose-almost-all-funds-of-a-non-Wumbo-channel-and-potential-fixes.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002750_Disclosure-of-a-fee-blackmail-attack-that-can-make-a-victim-loose-almost-all-funds-of-a-non-Wumbo-channel-and-potential-fixes.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002748_Disclosure-of-a-fee-blackmail-attack-that-can-make-a-victim-loose-almost-all-funds-of-a-non-Wumbo-channel-and-potential-fixes.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002745_Disclosure-of-a-fee-blackmail-attack-that-can-make-a-victim-loose-almost-all-funds-of-a-non-Wumbo-channel-and-potential-fixes.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002738_Disclosure-of-a-fee-blackmail-attack-that-can-make-a-victim-loose-almost-all-funds-of-a-non-Wumbo-channel-and-potential-fixes.xml" rel="alternate"/>
  <link href="lightning-dev/June_2020/002735_Disclosure-of-a-fee-blackmail-attack-that-can-make-a-victim-loose-almost-all-funds-of-a-non-Wumbo-channel-and-potential-fixes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Disclosure of a fee blackmail attack that can make a victim loose almost all funds of a non Wumbo channel and potential fixes</title>
    <updated>2023-07-31T22:57:23.628961+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-June/002735.html" rel="alternate"/>
    <summary>The Lightning Network, a protocol for faster and cheaper Bitcoin transactions, has been found to have vulnerabilities. One vulnerability is a blackmail attack that exploits the update_fee mechanism and unbounded commitment transaction size inflation. To mitigate this issue, one solution is to cap commitment size and limit HTLC exposure. Another solution is BIP-119 Congestion Control trees, which bucket a tree based on HTLC size. Additionally, a technique called "coupe commitments" adds a layer of indirection to how HTLCs are manifested within commitment transactions.In an email thread, Dave explains how an attacker can force a victim to pay for numerous P2WSH outputs, causing significant costs. Lowering the max number of HTLCs in-flight is suggested as a solution, but some believe it makes it easier to jam a channel. Anchor commitments allow for second-level HTLC aggregation, saving on fees. The attacker can route a payment through the victim's channels, forcing the victim to pay on-chain fees to recover funds.Laolu suggests adding a layer of indirection to mitigate up-front costs. This involves adding an HTLC indirect block to commitment transactions, spent by a transaction that creates HTLC outputs. Jeremy Rubin suggests BIP-119 Congestion Control trees to bucket HTLCs and prevent interference. Antoine Riard discusses capping commitment size, dynamic dust limits, encoding all HTLCs in a Taproot tree, and other potential solutions.The discussion also touches on fee futures, hinting at where and how to disclose attacks and vulnerabilities. The vulnerabilities highlight the need for ongoing development of second-layer solutions for Bitcoin transactions. The attack involves flooding the network with large transactions, freezing channels, and demanding blackmail payments. Several fixes have been proposed, including not using the maximum value of HTLCs, implementing bitcoin core PR #15681, and finding ways to aggregate HTLCs.Overall, the Lightning Network vulnerability emphasizes the importance of addressing security issues and improving second-layer solutions for Bitcoin transactions.</summary>
    <published>2020-06-22T19:18:08+00:00</published>
  </entry>
</feed>
