<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [RFC] Lightning gossip alternative</title>
  <updated>2023-08-01T00:06:55.831495+00:00</updated>
  <author>
    <name>Rusty Russell 2022-03-23 23:50:00+00:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2022-03-23 01:38:40+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2022-02-20 23:02:20+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2022-02-18 02:33:08+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2022-02-16 02:35:16+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2022-02-15 13:45:48+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2022-02-14 01:41:06+00:00</name>
  </author>
  <link href="lightning-dev/March_2022/003530_-RFC-Lightning-gossip-alternative.xml" rel="alternate"/>
  <link href="lightning-dev/March_2022/003527_-RFC-Lightning-gossip-alternative.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2022/003496_-RFC-Lightning-gossip-alternative.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2022/003478_-RFC-Lightning-gossip-alternative.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2022/003474_-RFC-Lightning-gossip-alternative.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2022/003471_-RFC-Lightning-gossip-alternative.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2022/003470_-RFC-Lightning-gossip-alternative.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [RFC] Lightning gossip alternative</title>
    <updated>2023-08-01T00:06:55.831495+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2022-February/003470.html" rel="alternate"/>
    <summary>The Lightning Network, a second layer payment protocol built on top of blockchain networks like Bitcoin, may soon be upgraded. The proposed upgrade aims to simplify gossip and reduce UTXO validation requirements from per-channel to per-node. It introduces node_announcement_v2 and channel_update_v2 messages, replacing timestamps with block heights. Nodes will send out weekly node_announcement_v2 to prove they own some UTXOs, entitling them to broadcast channels using channel_update_v2. If both peers receive a channel_update_v2, it confirms the existence of the channel. Nodes do not need to monitor UTXOs after an initial check, as they will automatically prune them after a week. Taproot proofs are introduced for v1 outputs, while legacy proofs remain the same.The proposed upgrade allows for the "leasing" of UTXOs, where someone can pay to sign their UTXO for another node's announcement. This introduces a level of trust, as the UTXO could be spent or used for multiple node_announcements. The preference is given to the first-seen. Overall, the upgrade simplifies gossip, reduces validation requirements, and introduces new features such as leasing of UTXOs and taproot_utxo_delegated_proof.In another conversation, the idea of preparing for published channels backed by channel factories is proposed. This would maximize the expected fee return of all published nodes. However, without the ability to gossip channel factories, they can only be used for unpublished channels. Despite this limitation, having more of the public network backed by fewer UTXOs is seen as beneficial.In a conversation between Rusty and Joost Jager, questions are raised regarding the proposed upgrade. One question pertains to a static value used to determine the total proved utxo value. Another concern is the meaning of capacity in the context of a channel and its relationship with the maximum htlc amount that nodes want to route. Rusty suggests a minimum cost to discourage spammers from opening channels. He further discusses the details of his proposal and addresses Jager's questions for each component.The proposed update considers a channel to exist only when both peers have sent a channel_update_v2 message and at least one of them sets the claim flag. The available announcable_channel_capacity is allocated to nodes based on their lower channel_ids if there is insufficient capacity. However, an important question arises regarding the claim of new channels between nodes, which requires further consideration and clarification.</summary>
    <published>2022-03-23T23:50:00+00:00</published>
  </entry>
</feed>
