<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Proof-of-payments</title>
  <updated>2023-07-31T21:27:04.025559+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-02-14 04:07:53+00:00</name>
  </author>
  <author>
    <name>Joao Joyce 2019-02-13 11:53:30+00:00</name>
  </author>
  <link href="lightning-dev/Feb_2019/001870_Proof-of-payments.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2019/001869_Proof-of-payments.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Proof-of-payments</title>
    <updated>2023-07-31T21:27:04.025559+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-February/001869.html" rel="alternate"/>
    <summary>In a recent discussion, it was concluded that identifying users across multiple payments is not advisable. However, an alternative solution was proposed by ZmnSCPxj. Instead of user identification, services could request the preimage of an invoice that has already been paid in order to verify payment. This method could be particularly useful for scenarios such as redownloading previously purchased documents.Jo√£o Joyce raised an interesting question regarding standardizing payment invoices to include information that would signal wallets to bypass the payment process if they can provide a preimage for a previous payment related to a specific item. This standardized approach could have various use cases beyond simple downloads, such as paying for a 30-day service and accessing it by scanning the Lightning Network (LN) invoice.C-Lightning, a software implementation of the Lightning Network protocol, already incorporates this feature. If provided with an invoice for a payment hash it already knows, C-Lightning silently succeeds and returns the preimage without transferring any funds. This functionality should extend to any wallets built on top of C-Lightning, although it remains uncertain how other implementations handle this scenario.While the discussion primarily focused on the potential benefits of using the preimage to prove payment, the involvement of intermediate nodes in storing the preimage was not the main focus. Further exploration may be required to fully understand the implications and considerations associated with this aspect.</summary>
    <published>2019-02-14T04:07:53+00:00</published>
  </entry>
</feed>
