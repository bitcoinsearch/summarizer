<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - INTEROPERABILITY</title>
  <updated>2023-07-31T23:55:07.675263+00:00</updated>
  <author>
    <name>x raid 2021-11-24 16:15:12+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-11-24 13:16:57+00:00</name>
  </author>
  <author>
    <name>x raid 2021-11-24 07:48:26+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-11-23 23:14:27+00:00</name>
  </author>
  <author>
    <name>Pierre 2021-11-23 16:56:05+00:00</name>
  </author>
  <author>
    <name>x raid 2021-11-23 16:50:36+00:00</name>
  </author>
  <author>
    <name>x raid 2021-11-23 16:31:43+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-11-23 12:44:28+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2021-11-23 11:55:15+00:00</name>
  </author>
  <author>
    <name>x raid 2021-11-23 11:52:12+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-11-23 10:35:46+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-11-23 10:27:50+00:00</name>
  </author>
  <author>
    <name>x raid 2021-11-23 09:15:30+00:00</name>
  </author>
  <link href="lightning-dev/Nov_2021/003366_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003365_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003364_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003363_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003362_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003361_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003360_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003359_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003358_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003357_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003356_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003355_INTEROPERABILITY.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2021/003354_INTEROPERABILITY.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - INTEROPERABILITY</title>
    <updated>2023-07-31T23:55:07.675263+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-November/003354.html" rel="alternate"/>
    <summary>The email conversation revolves around the need for interoperability among different implementations of the Lightning Network and version management. It is suggested to have a HTML web service user interface with side-by-side windows representing an implementation instance version and a query for download files of range unix.ts per instance. The discussion emphasizes the importance of conducting extra testing live on mainnet with liquidity in channels towards other implementation versions to catch unforeseen glitches that tests in isolation cannot detect.ZmnSCPxj, responsible for signing stable version releases, clarifies that developers are already running nodes connected to other implementations on mainnet 24/7 and have large release windows before making a final release to catch bugs that are not easily visible in isolation but require real data on the network. In response to xraid's request for assistance, ZmnSCPxj suggests that xraid put up hardware and coins himself if he really wants this to happen. He offers to install C-Lightning and CLBOSS on xraid's hardware using an SSH key and provides addresses of the C-Lightning node so that xraid can provide coins for CLBOSS to manage.The conversation also discusses the concept of "eating their own dog food," where Lightning Network node operators like Acinq experience force closes before their users do. It is suggested that node operators conduct live tests in their continuous integration efforts to ensure stable releases of chosen implementations. The idea of different implementation maintainers testing live on the mainnet with liquidity in channels towards other implementation versions is proposed to catch unforeseen glitches that individual tests cannot detect.There is a strong emphasis on the need for the Lightning Network to mature as a financial network system class in preparation for onboarding one billion users by 2026. It is suggested that different implementation maintainers should conduct extra tests live on the mainnet with liquidity in channels towards other implementation versions before sign off a stable release. This will help ensure the smooth transition into the envisioned mass adoption.The proposal also highlights the importance of having a collection point where loglines from instances taking part in the interoperability assurance test can be fetched. This will help assert that a new release of an implementation is interoperable and can be recommended for installation as the latest stable release version. The conversation raises concerns about the leakage of sensitive information through logs, and suggestions are made to redact sensitive information and ensure automated redaction if log messages are changed to prevent leaks.The conversation further delves into the open-source model and the contributions required from individuals with skill and/or money. It is proposed that those with skill but not money can contribute directly to the project, while those with money but not skill can contribute by hiring developers to work on the project they want. The challenge lies in aggregating the will of a group of people without risking centralization and ensuring that resources are allocated in ways that align with the group's objectives.In terms of testing before a public release, it is suggested that running tests on the mainnet is more likely to catch complex issues compared to local tests. Release candidates, nightly builds, and lnprototest are recommended for thorough testing. Spec compliance and compatibility of extensions are highlighted as essential for the continued growth and development of the Lightning Network.The need for liquidity on mainnet for testing before a public release is discussed, along with the challenges faced by teams in providing hardware, internet connection, and significant liquidity. The conversation raises questions about where to set proper caps in time for collections and suggests outsourcing the running of boxes with channels on mainnet while managing the analysis of the team's own implementation. Concerns about information leakage through logs and the need for sensitive redaction and automated redaction are also addressed.Overall, the email conversation covers a wide range of topics related to interoperability, version management, testing, contributions, and resource allocation in the context of the Lightning Network. The focus is on ensuring the stability, maturity, and growth of the network to support its future mass adoption.</summary>
    <published>2021-11-24T16:15:12+00:00</published>
  </entry>
</feed>
