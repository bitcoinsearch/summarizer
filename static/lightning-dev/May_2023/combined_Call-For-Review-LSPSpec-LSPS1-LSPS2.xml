<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Call For Review - LSPSpec LSPS1 LSPS2</title>
  <updated>2023-08-01T01:12:16.449938+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-05-07 22:35:06+00:00</name>
  </author>
  <author>
    <name>Severin BÃ¼hler 2023-05-05 05:02:19+00:00</name>
  </author>
  <link href="lightning-dev/May_2023/003930_Call-For-Review-LSPSpec-LSPS1-LSPS2.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003926_Call-For-Review-LSPSpec-LSPS1-LSPS2.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Call For Review - LSPSpec LSPS1 LSPS2</title>
    <updated>2023-08-01T01:12:16.449938+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-May/003926.html" rel="alternate"/>
    <summary>Lightning Service Providers (LSPs) have been criticized for their tendency to lock in customers and retain ownership of their data. However, a solution to this issue may lie in the implementation of a common open specification for LSPs, which would enable users to switch between different providers. It is recommended that wallet implementors examine the LSPS specifications and begin planning to incorporate the client-side interfaces.By using multiple LSPs simultaneously, clients can distribute their information across various providers, thereby reducing the risk of data leaks if one LSP were to misuse or sell the data. LSPS0 serves as a key component in this process, utilizing a single BOLT8 message ID, 37913, for all client and intercommunication requests within the LSPS network. However, the JSON object contained within the LSPS0 37913 message has received criticism from engineers due to its complexity and controversial nature among LSPS participants.The design philosophy behind LSPS0 requires some understanding of information theory. While binary encoding is essentially a compressed form of a human-readable format, the addition of compression does not significantly improve latency. Therefore, LSPS0 was developed as a JSON text inside a BOLT8 message, ensuring that all LSPS API calls share the same single BOLT8 message.To foster interoperability between Lightning wallets and LSPs, the LSPSpec group has been working on developing standardized communication through the creation of specifications for LSPs. Two mature specifications, LSPS1 - Channel Request and LSPS2 - JIT Channels, have been announced by the group and are available for review on their GitHub repository. The LSPS1 API enables the purchase of channels from an LSP, while the LSPS2 API facilitates the opening of Just-In-Time Channels for immediate use upon payment arrival.The LSPSpec group also holds biweekly calls every Wednesday at 11:00 am UTC to discuss the progress of the specifications. The next call is scheduled for May 17th, and those interested in participating can join the Telegram group and send their email address to Pav to receive a calendar invite for the upcoming call.</summary>
    <published>2023-05-07T22:35:06+00:00</published>
  </entry>
</feed>
