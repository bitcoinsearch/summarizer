<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A new Bitcoin implementation integrated with Core Lightning</title>
  <updated>2023-08-01T00:58:39.851094+00:00</updated>
  <author>
    <name>Matt Corallo 2023-05-06 05:58:55+00:00</name>
  </author>
  <author>
    <name>Jorge Tim√≥n 2023-05-02 13:34:58+00:00</name>
  </author>
  <author>
    <name>Vincenzo Palazzo 2023-04-30 15:22:01+00:00</name>
  </author>
  <author>
    <name>niftynei 2023-04-24 16:06:59+00:00</name>
  </author>
  <author>
    <name>Michael Folkson 2023-04-19 10:54:10+00:00</name>
  </author>
  <author>
    <name>Kostas Karasavvas 2023-04-19 09:05:10+00:00</name>
  </author>
  <author>
    <name>Michael Folkson 2023-04-18 17:06:14+00:00</name>
  </author>
  <author>
    <name>Michael Folkson 2023-01-14 20:45:38+00:00</name>
  </author>
  <author>
    <name>Fabian 2023-01-14 20:34:38+00:00</name>
  </author>
  <author>
    <name>Michael Folkson 2023-01-14 20:26:07+00:00</name>
  </author>
  <link href="lightning-dev/May_2023/003929_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003924_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/April_2023/003921_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/April_2023/003914_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/April_2023/003912_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/April_2023/003911_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/April_2023/003909_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2023/003826_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2023/003825_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2023/003824_A-new-Bitcoin-implementation-integrated-with-Core-Lightning.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A new Bitcoin implementation integrated with Core Lightning</title>
    <updated>2023-08-01T00:58:39.851094+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-January/003824.html" rel="alternate"/>
    <summary>In November 2022, Michael Folkson expressed his belief on Twitter that Bitcoin Knots and consensus-compatible forks of Bitcoin Core are the future. He pointed out issues such as btcd bugs and analysis paralysis on a Replace-By-Fee (RBF) policy option in Core. Michael has a long-term idea of creating a bare bones Knots-style Bitcoin implementation integrated with Core Lightning. The dysfunction in the Bitcoin Core project has made him take this idea more seriously, as he feels that the current management of the project does not align with how an open-source project should be managed.While Core Lightning is effectively managed in the open, it lacks the usage and visibility that Bitcoin Core has. Michael envisions a codebase that integrates both Bitcoin and Lightning implementations. He believes that the accumulation of unnecessary complexity over time in the Bitcoin Core codebase is problematic. The ultra-conservatism required when dealing with potential consensus code has seeped into parts of the codebase that are not being utilized and should be removed.Although the libbitcoinkernel project aimed to extract the consensus engine from Bitcoin Core, Michael finds consensus to be a slippery concept. This is why Knots-style consensus-compatible forks of Bitcoin Core still seem like the most suitable model. However, it remains uncertain how much unnecessary code can be safely removed while effectively maintaining a less complex fork of Bitcoin Core. There is also a debate regarding whether it makes sense to mix C and C++ code, as different individuals have varying opinions on the matter.Michael is seeking input from individuals who possess comprehensive knowledge of both the Bitcoin Core and Core Lightning codebases to explore the feasibility of his idea. He acknowledges that this would be an ambitious long-term project but believes that focusing on ambitious endeavors during a period of relative calm in soft fork activation chaos would be beneficial. If anyone wants to reach out to Michael, they can do so via email at michaelfolkson@protonmail.com, on Keybase at michaelfolkson, and his PGP key is provided.</summary>
    <published>2023-05-06T05:58:55+00:00</published>
  </entry>
</feed>
