<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Hold fees: 402 Payment Required for Lightning itself</title>
  <updated>2023-07-31T23:07:14.595309+00:00</updated>
  <author>
    <name>ZmnSCPxj 2020-11-02 23:10:39+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-11-02 14:33:48+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-10-28 01:13:29+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2020-10-24 08:58:32+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-10-23 15:26:57+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-10-23 13:06:45+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-10-23 10:50:12+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2020-10-23 10:28:34+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-10-23 09:15:10+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2020-10-23 05:58:11+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-10-22 17:56:12+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-10-22 09:47:20+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-10-21 03:21:11+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2020-10-20 07:15:55+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2020-10-19 15:38:59+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2020-10-18 07:24:40+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2020-10-15 13:39:37+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-10-15 01:49:33+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-10-13 12:57:43+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2020-10-13 12:19:20+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2020-10-13 12:05:19+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2020-10-13 11:57:07+00:00</name>
  </author>
  <author>
    <name>Christian Decker 2020-10-13 11:41:56+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-10-13 10:36:36+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2020-10-13 07:46:27+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2020-10-13 03:05:39+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2020-10-12 15:28:49+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-10-12 15:11:46+00:00</name>
  </author>
  <author>
    <name>Joost Jager 2020-10-12 11:03:49+00:00</name>
  </author>
  <link href="lightning-dev/Nov_2020/002875_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2020/002873_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002872_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002870_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002869_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002868_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002867_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002866_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002865_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002864_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002863_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002862_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002861_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002854_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002852_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002851_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002849_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002847_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002840_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002839_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002838_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002836_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002835_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002834_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002833_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002832_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002828_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002827_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2020/002826_Hold-fees-402-Payment-Required-for-Lightning-itself.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Hold fees: 402 Payment Required for Lightning itself</title>
    <updated>2023-07-31T23:07:14.595309+00:00</updated>
    <link href="https://gnusha.org/url/https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-October/002826.html" rel="alternate"/>
    <summary>In a recent discussion, the issue of bidirectional upfront/hold fees for trustless offchain-to-onchain swaps was brought up. The problem arises because claiming the offchain side is dependent on claiming the onchain side, which can be slow and forces the swap service to pay the hold fees.One suggestion is for the swap service to collect fees from the user to cover these costs. However, another suggestion is for the user to exploit the system by timing out the onchain HTLC, causing the swap service to pay for both the onchain HTLC and the hold fee.This issue has been addressed in Boltz by implementing a separate mining-fee invoice that must be paid before the creation of the onchain HTLC. It is suggested to include the hold fee in the mining-fee invoice as well.The proposal introduces certain properties of an HTLC received by a routing node, such as the amount, forward up-front payment, backward up-front payment, and grace period. The routing node forwards the HTLC to the next hop with lower amounts and payments but higher backward up-front payment and shorter grace period.However, there is an issue related to trustless offchain-to-onchain swaps where the swap service is forced to pay the hold fees since the claiming of the offchain side depends on the onchain side, which is slow. To address this, a combined mining-fee+hold-fee invoice would need to be issued alongside the "real" swap invoice.In a different conversation, concerns were raised about the possibility of amounts being too high for honest users or certain uses in proposed changes to Bitcoin's Lightning Network. The proposal includes an upfront payment made by the sender to combat uncontrolled spam attacks. However, it was noted that if an attacker is on the other end of the uncontrolled spam payment, they could still collect forward payments. To address this, penalization measures may need to be implemented. The proposal also includes properties such as HTLC amount, forward up-front payment, backward up-front payment, and grace periods. Routing nodes would forward payments with lower forward up-front payments and higher backward up-front payments to deter attackers.In another discussion about delaying refunds in Lightning Network transactions, the issue of C unfairly delaying D's refund by delaying its own commitment_signed was brought up. It was suggested to extend the commitment_signed with a TLV field indicating "I refunded myself for HTLC N" to help C compute the same commit tx and verify signatures. However, it was noted that the potential loss of a viable channel and on-chain fees might outweigh the benefits of taking the hold fee at this point. The discussion also touched upon interoperability issues caused by rules involving "SHOULD/MUST fail the channel," as seen in the mass channel closures between C-Lightning and lnd nodes due to sudden on-chain fee movements.The process of revoking and acknowledging a channel in case of a griefing attack was explained in a technical discussion. The `revoke_and_ack` function drops the channel on-chain with the HTLC instantiated. Concerns were raised about the possibility of amounts being too high for honest users or certain uses in a proposal for backwards upfront payments in Lightning Network. The proposal allows for refunds within a grace period and penalizes nodes if they exceed the grace period. Potential controlled spam attacks were also discussed, and it was noted that penalization could be possible by decrementing the forward fee at each hop.In a conversation about delaying refunds in Lightning Network transactions, it was explained that if the final recipient delays settling the HTLC before the grace period ends, it is fair for them to pay the intermediary node C for this. However, C can only safely propagate its own upstream update_fail_htlc once it receives revoke_and_ack from D. The grace period between C and D should be measured from C sending update_add_htlc to C receiving revoke_and_ack from D in case the HTLC fails. For a successful case of update_fulfill_htlc, C can immediately propagate this back to its upstream. The start point of the grace period is C-&gt;commitment_signed-&gt;D containing the HTLC. The D grace period has two smaller grace periods that protect against C-side griefing.In a discussion about payment channels and spam attacks, it was noted that forward and backward payments are relatively independent of each other. The proposal includes an upfront payment made by the sender to fight uncontrolled spam and a backward payment to fight controlled spam. Concerns were raised about the amounts required to thwart attacks being too high for honest users or certain uses. Calculations were done to determine the appropriate fees, taking into account the annual return needed and the "damage" caused by uncontrolled spam. The discussion also touched upon potential weaknesses and the need to collectively figure out implementation details.The participants in an email thread discussed the implementation of upfront payments for offering and receiving hash time-locked contracts (HTLCs) in the Lightning Network. A fixed forward payment of</summary>
    <published>2020-11-02T23:10:39+00:00</published>
  </entry>
</feed>
