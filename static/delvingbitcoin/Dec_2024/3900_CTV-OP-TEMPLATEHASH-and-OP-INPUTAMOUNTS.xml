<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CTV++ OP_TEMPLATEHASH and OP_INPUTAMOUNTS</title>
  <updated>2024-12-31T02:19:01.565210+00:00</updated>
  <author>
    <name>moonsettler 2024-12-30 22:16:52.664000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CTV++ OP_TEMPLATEHASH and OP_INPUTAMOUNTS</title>
    <updated>2024-12-31T02:19:01.565241+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ctv-op-templatehash-and-op-inputamounts/1344/3" rel="alternate"/>
    <summary>The discussion highlights the significant difference in capability and potential between simply being able to introspect inputs or parent transactions and the broader, more flexible programmability achievable within certain technical confines. By focusing on what can be accomplished within the specific fields that `CTV` commits to, it is demonstrated that a high level of utility and flexibility is attainable without crossing predefined threshold boundaries. This approach contrasts with the limited functionality derived from using `TXHASH` in isolation. The conversation underscores the importance of exploring these capabilities to understand the full range of possibilities offered by such technologies. Additionally, an edit introduces a resource for further reading on optimistic zk-verification, which can be found at [Delving into Bitcoin](https://delvingbitcoin.org/t/optimistic-zk-verification-using-matt/1050/1), providing an avenue for deeper exploration into the subject matter discussed.</summary>
    <published>2024-12-30T22:16:52.664000+00:00</published>
  </entry>
</feed>
