<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Radpool: Decentralised Mining Pool With Futures Contracts For Payouts</title>
  <updated>2024-12-04T02:38:55.359259+00:00</updated>
  <author>
    <name>jungly 2024-12-03 07:19:56.893000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Radpool: Decentralised Mining Pool With Futures Contracts For Payouts</title>
    <updated>2024-12-04T02:38:55.359291+00:00</updated>
    <link href="https://delvingbitcoin.org/t/radpool-decentralised-mining-pool-with-futures-contracts-for-payouts/1262/11" rel="alternate"/>
    <summary>In the exploration of blockchain protocols, the concept of Byzantine Fault Tolerance (BFT) broadcast emerges as a critical component in achieving consistency within a network of known group membership. The foundational principle here is that through BFT broadcast, every participant in the network maintains a consistent view, allowing for a deterministic algorithm to lead all parties to a unanimous agreement. This approach underpins the Radpool strategy, which capitalizes on the simplicity of requiring syndicate membership without necessitating the construction of an initial consensus protocol. Radpool's methodology signifies an intentional halt at the broadcast phase, refraining from developing unnecessary complexities.

Contrastingly, Braidpool embarks on a more intricate journey by initiating its process with a consensus protocol. The challenge it addresses is the Nakamoto consensus, characterized by an open membership where any new participant can potentially become a block generator. This openness introduces additional complexities, as Braidpool must accommodate a diverse and unpredictable set of participants. Unlike Radpool, where entry into the syndicate is conditioned upon specific contributions such as Proof of Work (PoW) for a predefined number of blocks and other hashrate-related criteria, Braidpool navigates the intricacies of forming a consensus without predetermined group membership.

A pivotal element in both Radpool and Braidpool's operations is the FROST Distributed Key Generation (DKG), which necessitates an echo broadcast mechanism within a point-to-point network model. Radpool efficiently utilizes an already developed [echo broadcast system](https://github.com/pool2win/frost-federation/tree/e44431e4c8cd2f5f42f61a5715c644c183c12b3a/src/node/echo_broadcast), simplifying its implementation process. This system suffices for Radpool's needs by supporting its syndicate structure and membership agreement. On the other hand, Braidpool faces the task of constructing not only a peer-to-peer (P2P) broadcast protocol but also a separate P2P Nakamoto consensus framework while integrating FROST DKG, marking a significantly complex endeavor compared to Radpool's straightforward approach. The comparison between these two models highlights the nuanced complexities and strategic decisions inherent in blockchain protocol development, emphasizing the importance of tailored solutions for varying network configurations and objectives.</summary>
    <published>2024-12-03T07:19:56.893000+00:00</published>
  </entry>
</feed>
