<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Libbitcoin for Core people</title>
  <updated>2024-12-02T02:40:31.865607+00:00</updated>
  <author>
    <name>evoskuil 2024-12-01 14:40:35.174000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Libbitcoin for Core people</title>
    <updated>2024-12-02T02:40:31.865641+00:00</updated>
    <link href="https://delvingbitcoin.org/t/libbitcoin-for-core-people/1222/21" rel="alternate"/>
    <summary>Libbitcoin's significant performance edge stems from its implementation of massive parallelism. This contrasts with the common misunderstanding that its efficiency is due to other factors. Both Libbitcoin and Core utilize a concept that, while named differently—Libbitcoin as "milestone" and Core with "assume valid"—fundamentally serves the same purpose from both a logical and security perspective. However, Libbitcoin distinguishes itself by eschewing unnecessary checks when operating under its milestone system. 

In contrast, Bitcoin Core's approach necessitates the construction of a UTXO (Unspent Transaction Output) store even when operating under the "assume valid" mode. This process requires a specific order for building the UTXO set, which inherently limits the potential for parallel processing. Moreover, during this process, Bitcoin Core conducts spend checks that are obligatory due to the architecture of the UTXO set, despite these checks being deemed unnecessary in certain contexts. This requirement not only imposes additional computational overhead but also significantly restricts the ability to leverage parallelism to enhance performance.</summary>
    <published>2024-12-01T14:40:35.174000+00:00</published>
  </entry>
</feed>
