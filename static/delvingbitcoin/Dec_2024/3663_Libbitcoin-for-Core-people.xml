<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Libbitcoin for Core people</title>
  <updated>2024-12-02T02:40:20.187996+00:00</updated>
  <author>
    <name>evoskuil 2024-12-01 14:52:52.345000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Libbitcoin for Core people</title>
    <updated>2024-12-02T02:40:20.188029+00:00</updated>
    <link href="https://delvingbitcoin.org/t/libbitcoin-for-core-people/1222/22" rel="alternate"/>
    <summary>Libbitcoin's architecture is designed to efficiently handle block serialization, which ensures that the process of composing outgoing blocks does not hinder response times. This efficiency stems from the fact that both storage and composition operations are executed much faster than network transmission rates and consume minimal CPU resources. To put this into perspective, the procedure for downloading involves deserializing a block from the network, hashing all transactions (with an additional hashing step for segwit transactions), performing merkle hashing (again, with an extra step for segwit transactions), executing block checks, and then serializing the block for storage, including full indexation. Despite the complexity of these operations, when they are conducted concurrently across 64 threads without the use of specialized hardware acceleration (SHANI), the storage system's performance still surpasses the capabilities of a 2.3Gbps network connection. The entire process can be completed in under an hour, effectively demonstrating that deserialization of blocks poses no significant bottleneck to the system.</summary>
    <published>2024-12-01T14:52:52.345000+00:00</published>
  </entry>
</feed>
