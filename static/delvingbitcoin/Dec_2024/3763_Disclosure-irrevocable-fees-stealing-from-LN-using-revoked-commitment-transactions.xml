<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Disclosure: irrevocable fees---stealing from LN using revoked commitment transactions</title>
  <updated>2024-12-13T02:38:22.991404+00:00</updated>
  <author>
    <name>ariard 2024-12-12 06:42:46.666000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Disclosure: irrevocable fees---stealing from LN using revoked commitment transactions</title>
    <updated>2024-12-13T02:38:22.991436+00:00</updated>
    <link href="https://delvingbitcoin.org/t/disclosure-irrevocable-fees-stealing-from-ln-using-revoked-commitment-transactions/1314/2" rel="alternate"/>
    <summary>The discussion revolves around the introduction and implications of an upper limit on accepted feerate in the Lightning Development Kit (LDK), highlighting specific versions where these limits were applicable. The initial implementation was aimed at mitigating vulnerabilities related to "irrevocable fees" by introducing a cap on the feerate from a channel counterparty. This strategy was part of broader efforts in 2021 to address issues arising from excessive trimmed HTLCs and dust HTLC exposure, facilitating easier calculation of the msat denominated worst-case scenarios for dust HTLCs exposure through various considered scenarios. Notably, this feature was embedded into the system following a [commit](https://github.com/lightningdevkit/rust-lightning/commit/d3af49e9f07fc28d104f1f1dbcf8e216b65e9f89), marking a significant development in LDK's approach to enhancing security and operational efficiency.

Furthermore, the conversation extends to the Validating Lightning Signer (VLS) and its role in reinforcing security against fee-related vulnerabilities. Since its pre-production release and notably as of a certain commit, VLS incorporated a `validate_fee()` function, which scrutinizes the counterpartyâ€™s proposed feerate against a predefined maximum feerate per kiloweight unit (`max_feerate_per_kw`). This mechanism was specifically designed to thwart "miner-fee-siphoning attacks," a type of vulnerability discussed within the context of VLS since early 2023. The set value for `max_feerate_per_kw` typically stands at 100 satoshi per virtual byte, albeit with provisions for adjustment by operators to suit their operational requirements. This aspect underscores the proactive measures taken by developers to safeguard transactions against evolving threats by implementing configurable limits that adapt to the network's dynamics.</summary>
    <published>2024-12-12T06:42:46.666000+00:00</published>
  </entry>
</feed>
