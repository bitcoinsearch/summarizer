<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Libbitcoin for Core people</title>
  <updated>2024-12-03T02:37:20.986095+00:00</updated>
  <author>
    <name>andrewtoth 2024-12-02 20:17:59.379000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Libbitcoin for Core people</title>
    <updated>2024-12-03T02:37:20.986120+00:00</updated>
    <link href="https://delvingbitcoin.org/t/libbitcoin-for-core-people/1222/32" rel="alternate"/>
    <summary>The process of validation for input scripts is contingent upon the existence of the prevout. Failure in this context occurs when the prevout is non-existent, highlighting a critical dependency in the validation mechanism. During the execution phase, specifically within block.connect, a query is initiated for the output. This particular operation is characterized by its lack of sequential order and is executed concurrently across multiple blocks. Despite the concurrent nature of this operation, concerns are raised regarding the necessity of having a predefined order. The crux of this issue lies in the temporal aspect of transaction storage; if the transaction containing the prevout has not yet been recorded in the system at the time of the check, the verification process will result in failure, regardless of the actual existence of the prevout. This scenario underscores a potential flaw or oversight in the current validation strategy, suggesting a need for revisiting the sequence and timing with which transactions, and specifically prevouts, are stored and verified within the system.</summary>
    <published>2024-12-02T20:17:59.379000+00:00</published>
  </entry>
</feed>
