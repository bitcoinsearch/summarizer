<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Antoine Poinsot on Bitcoin Core's Priorities</title>
  <updated>2025-02-22T02:19:41.993259+00:00</updated>
  <author>
    <name>ajtowns 2025-02-21 20:00:22.524000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Antoine Poinsot on Bitcoin Core's Priorities</title>
    <updated>2025-02-22T02:19:41.993289+00:00</updated>
    <link href="https://delvingbitcoin.org/t/antoine-poinsot-on-bitcoin-cores-priorities/1470/3" rel="alternate"/>
    <summary>The discussion raises critical points about the development and structuring of Bitcoin software, particularly focusing on the balance between security, usability, and development efficiency. The debate on whether multiprocess architecture is suitable for splitting core components of Bitcoin software is highlighted, with an acknowledgment that such a structure might lead to tightly coupled components. This tight coupling could complicate coordination and synchronization across different repositories, making the development process cumbersome. However, it's suggested that multiprocess/capnproto could be more beneficial for security purposes rather than for developmental separation.

Furthermore, the concept of making all wallet features accessible via a library or command-line tool, such as bitcoin-tx or bitcoin-wallet, is proposed as a significant advantage. This approach would allow users to interact with wallet functionalities without initiating a bitcoind, thereby simplifying access to the RPC interface. Such a change is perceived as beneficial, independent of other considerations.

The discourse also introduces [ketan's NodeBox](https://shop.ministryofnodes.com/shop/bitcoin-nodebox/), which offers an innovative split of the Bitcoin software into two distinct parts: one part focusing on the node, index, and blockchain explorer without retaining any personally identifiable information (PII), and the other on wallet software that handles PII. This segregation aligns with a broader perspective on separating core functionalities from user-related data to enhance privacy and security. Notably, this setup includes electrs for transaction indexing, which supports both the mempool.space explorer and enables quick syncing for wallets that are mostly offline. The discussion acknowledges that while Bitcoin Core has traditionally resisted integrating indexes for quick syncing, such functionality could significantly improve the user interface, especially for those looking to separate their PII from their node software.

Lastly, the personal view expressed favors the overarching goal of Bitcoin Core to offer comprehensive software that facilitates Bitcoin usability, emphasizing the importance of a GUI and a functioning wallet. Despite acknowledging that Bitcoin Core may not currently meet all these needs, particularly in mining components, the utility of having wallet functionality for functional testing and broader experimentation with Bitcoin, such as on signet, is underscored.</summary>
    <published>2025-02-21T20:00:22.524000+00:00</published>
  </entry>
</feed>
