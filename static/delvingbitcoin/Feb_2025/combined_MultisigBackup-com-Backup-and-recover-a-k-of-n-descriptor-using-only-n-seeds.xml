<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - MultisigBackup.com: Backup and recover a k-of-n descriptor using only n seeds</title>
  <updated>2025-02-11T02:25:36.742815+00:00</updated>
  <author>
    <name>josh 2025-02-10 20:10:35.564000+00:00</name>
  </author>
  <author>
    <name>jsarenik  . 2025-02-09 07:55:29.492000+00:00</name>
  </author>
  <author>
    <name>josh  . 2025-02-07 17:55:37.798000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2025-02-07 14:32:39.832000+00:00</name>
  </author>
  <author>
    <name>jsarenik  . 2025-02-07 08:26:07.472000+00:00</name>
  </author>
  <author>
    <name>josh  . 2025-02-06 19:56:35.929000+00:00</name>
  </author>
  <link href="delvingbitcoin/Feb_2025/4267_MultisigBackup-com-Backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2025/4227_MultisigBackup-com-Backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2025/4222_MultisigBackup-com-Backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2025/4218_MultisigBackup-com-Backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2025/4216_MultisigBackup-com-Backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2025/4209_MultisigBackup-com-Backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - MultisigBackup.com: Backup and recover a k-of-n descriptor using only n seeds</title>
    <updated>2025-02-11T02:25:36.742874+00:00</updated>
    <link href="https://delvingbitcoin.org/t/multisigbackup-com-backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds/1430" rel="alternate"/>
    <summary>The innovative tool designed to avoid the creation of new Unspent Transaction Outputs (UTXOs) in Bitcoin transactions has been developed with the intention of minimizing blockchain bloat and reducing transaction costs. By generating a specific address that reveals an inscription when spent, and which can be spent by anyone, this tool leverages [mempool.space](https://mempool.space) webhook for listening to payments directed to this address. It then crafts a transaction featuring a single `OP_RETURN` output, along with four dummy bytes to meet the standard transaction size criteria. This process ensures that payments intended for inscribing descriptors are entirely forwarded as miner fees, eliminating the generation of new UTXOs and thereby mitigating the potential for UTXO bloat. Detailed workings of this system are accessible through its GitHub page, available at https://github.com/joshdoman/btc-scribe.

The discourse surrounding the storage of unspent transaction outputs (UTXOs) tied to multi-signature backup inscriptions raises significant concerns within the cryptocurrency sphere, particularly regarding their impact on the Bitcoin network's storage requirements and overall chainstate bloat. Despite these UTXOs holding minimal value, their permanence on the blockchain is seen as contributing to space pollution. This phenomenon has sparked a debate that juxtaposes the tangible increase in storage demands against the subjective educational value derived from resources like [multisigbackup.com](https://multisigbackup.com), which aims to deepen the communityâ€™s understanding of multi-signature transactions and security practices. Data reflecting the growth in UTXO count and the accompanying rise in storage needs underscore the pressing challenge of balancing infrastructure costs with the benefits of fostering a secure, informed user base.

The discussion extends into the realm of data backups on blockchain technology, emphasizing the inefficiency of using globally replicated databases for storing information relevant only to individuals. It suggests that integrating small, specific data amounts into backups can achieve both security and plausible deniability, advocating for traditional backup methods over blockchain reliance. The narrative further explores the simplicity and security benefits of multi-signature wallets, specifically 2-of-2 setups, highlighting how they protect against personal errors and ensure secured assets require mutual consent for transactions. This approach underscores Bitcoin's utility in providing a cost-effective, geographically independent security measure devoid of ongoing fees and offering plausible deniability about asset ownership. Moreover, it touches upon the philosophical stance against contributing to war efforts through decentralized finance systems and the practical aspects of managing digital assets securely.

[multisigbackup.com](http://multisigbackup.com/) confronts a prevalent misunderstanding among users regarding the recovery process for 2-of-3 multisig wallets, clarifying the necessity of not only having two seed phrases but also the output descriptor for fund access. It critiques the privacy, cost, and trust compromises involved in using custody services for descriptor management, proposing an alternative through durable physical backups like steel plates. This method promises several advantages, including cost-effectiveness, enhanced data durability, privacy preservation, simplified recovery processes, and an improved user experience. Future plans for the project include integrating support for advanced features such as Taproot multisig and Miniscript, along with optimizations and wallet integrations. Further insights and the project's source code are made available at [https://github.com/joshdoman/multisig-backup](https://github.com/joshdoman/multisig-backup), presenting an innovative direction for secure, private, and efficient cryptocurrency management.</summary>
    <published>2025-02-10T20:10:35.564000+00:00</published>
  </entry>
</feed>
