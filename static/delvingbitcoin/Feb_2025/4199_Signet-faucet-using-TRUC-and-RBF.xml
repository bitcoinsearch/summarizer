<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Signet faucet using TRUC and RBF</title>
  <updated>2025-02-07T02:26:46.331219+00:00</updated>
  <author>
    <name>jsarenik 2025-02-06 16:08:22.286000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Signet faucet using TRUC and RBF</title>
    <updated>2025-02-07T02:26:46.331251+00:00</updated>
    <link href="https://delvingbitcoin.org/t/signet-faucet-using-truc-and-rbf/1426" rel="alternate"/>
    <summary>The information provided highlights the availability and functionality of a particular Bitcoin faucet, which can be accessed through multiple URLs: [https://alt.signetfaucet.com](https://alt.signetfaucet.com), [https://signetfaucet.bublina.eu.org](https://signetfaucet.bublina.eu.org), and [https://signet25.bublina.eu.org](https://signet25.bublina.eu.org). This faucet predominantly dispenses the smallest amount of satoshis (sats) per transaction size (vsize), with occasional payouts that appear on Mempool.space as having a fee-rate slightly higher than previous ones by 0.9 sat/vB. The TRUC mechanism utilized ensures transactions are included in a block cleanly, preventing any potential reduction in the overall fee-rate through a process akin to CPFP (Child Pays For Parent), humorously referred to as "CSFP" (Child Steals From Parent) due to its unique operational model.

The system is designed to handle a specific number of requests without overloading; if it receives more than 230 requests or depending on the transaction output lengths of the scripts/addresses used, it will not replace the current TRUC payout transaction. These requests are stored as small files containing transaction output script details, exemplified by a given LN anchor address for testing purposes, which imposes a limit of one request per block. This open accessibility also implies that funds sent to this address can be easily spent by anyone, highlighting an aspect of simplicity and openness in testing environments for Bitcoin-related developments.

The underlying infrastructure of this faucet was developed with reliability and efficiency in mind, employing static HTML files to avoid common server errors such as 502 Bad Gateway, served by a Caddy2 webserver and enhanced by Cloudflare's proxying capabilities. The entire setup operates on a minimalistic home network powered by a 50/10 Mbps fiber optic connection and utilizes Linux across all devices, including a main OpenWRT router and a recycled Mac Book Pro from 2012, demonstrating a cost-effective and environmentally friendly approach to running Bitcoin nodes and supporting services. The operations are further optimized by using `tmpfs` for temporary file storage directly in RAM, ensuring a high level of performance for the faucet's functionalities.

Additionally, the post mentions running three Bitcoin nodes across different devices, each synchronized with the current mempool and capable of producing a distinct wooden block sound upon the verification of a new block on the mainnet, linking to an external source for the sound effect. This personal touch adds to the uniqueness of the project, reflecting the creator's dedication and passion towards Bitcoin and its community, acknowledging contributions and inspirations from peers within the space.</summary>
    <published>2025-02-06T16:08:22.286000+00:00</published>
  </entry>
</feed>
