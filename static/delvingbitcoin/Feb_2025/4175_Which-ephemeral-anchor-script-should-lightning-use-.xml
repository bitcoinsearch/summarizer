<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Which ephemeral anchor script should lightning use?</title>
  <updated>2025-02-05T02:22:10.914238+00:00</updated>
  <author>
    <name>harding 2025-02-04 15:12:03.917000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Which ephemeral anchor script should lightning use?</title>
    <updated>2025-02-05T02:22:10.914264+00:00</updated>
    <link href="https://delvingbitcoin.org/t/which-ephemeral-anchor-script-should-lightning-use/1412/7" rel="alternate"/>
    <summary>The discussion revolves around the intricacies of handling HTLC (Hash Time Locked Contracts) delays within the realm of blockchain and cryptocurrency, specifically focusing on ensuring that such delays are sufficiently long to negate the risks associated with reorganizations (reorgs) of the blockchain. The argument put forward suggests that a conservative approach towards these delays could prevent a situation where a counterparty might leverage funds paid to them for creating transactions with a higher likelihood of not persisting through a reorg. This perspective highlights a preference for a network design that errs on the side of caution, catering to both expert and non-expert users by minimizing potential safety trade-offs that favor nodes which rarely experience downtime.

A specific point of contention is the assumption that larger, more serious nodes can sustain minimal downtime, thus mitigating risk, in contrast to smaller nodes which might be more vulnerable due to frequent offline periods. The narrative challenges this assumption by presenting a probabilistic risk scenario wherein an attacker could exploit even brief periods of downtime. If an attacker accurately predicts a downtime window as short as one minute, there exists a roughly 10% chance that they could execute transactions without contestation during a node's offline period. 

Furthermore, the economic feasibility of such an attack is analyzed, revealing that with current transaction and closing costs, an attacker could break even if they manage to predict a node's downtime with precise timingâ€”down to six seconds. This analysis takes into account the opening and closing costs of a single-funded channel and juxtaposes these against the default dust tolerance levels, illustrating a scenario where the economics might favor an attacker under very specific conditions. This underlines the argument for designing network protocols and practices that prioritize safety and inclusivity over optimizations that favor nodes with less perceived vulnerability to downtime and reorgs.</summary>
    <published>2025-02-04T15:12:03.917000+00:00</published>
  </entry>
</feed>
