<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Great Consensus Cleanup Revival</title>
  <updated>2025-02-28T02:23:33.422203+00:00</updated>
  <author>
    <name>garlonicon 2025-02-27 14:16:59.858000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Great Consensus Cleanup Revival</title>
    <updated>2025-02-28T02:23:33.422236+00:00</updated>
    <link href="https://delvingbitcoin.org/t/great-consensus-cleanup-revival/710/74" rel="alternate"/>
    <summary>When engaging in transactions between Segwit and Anchor addresses, or from one Anchor address to another, it's crucial to include a dummy OP_RETURN output. This requirement stems from the need to ensure transaction validity, addressing a specific scenario where omitting this would result in a 64-byte transaction that may not be processed as intended. The significance of this practice is highlighted by a specific transaction example, identifiable through its hash: f1572558fed009ab9d247da85be221e3d8f98c80b66ce9c2ada3a25cba0d797a. For more detailed examination of this transaction, interested parties can refer to its record on the testnet4 blockchain via [mempool.space](https://mempool.space/testnet4/tx/f1572558fed009ab9d247da85be221e3d8f98c80b66ce9c2ada3a25cba0d797a). This inclusion of an OP_RETURN output serves not only as a functional element to facilitate these types of transactions but also carries a message explaining its utility, thereby shedding light on a nuanced aspect of transaction construction within these specific contexts.</summary>
    <published>2025-02-27T14:16:59.858000+00:00</published>
  </entry>
</feed>
