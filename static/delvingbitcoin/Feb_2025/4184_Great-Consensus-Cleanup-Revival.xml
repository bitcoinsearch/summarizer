<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Great Consensus Cleanup Revival</title>
  <updated>2025-02-06T02:17:35.160830+00:00</updated>
  <author>
    <name>AntoineP 2025-02-05 15:30:36.296000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Great Consensus Cleanup Revival</title>
    <updated>2025-02-06T02:17:35.160870+00:00</updated>
    <link href="https://delvingbitcoin.org/t/great-consensus-cleanup-revival/710/68" rel="alternate"/>
    <summary>The discussion revolves around the specifics of signature operations (sigops) counting in relation to `OP_CHECKMULTISIG` (CMS) within different Bitcoin script contexts. The current practice for calculating sigops in bare scripts, which is primarily applied to output scripts, attributes 20 sigops to each CMS instance. However, this accounting method changes when considering Pay-to-Script-Hash (P2SH) redeem scripts. In these cases, the number of sigops is determined by the CMS parameter that specifies the number of public keys involved in the operation. For example, a CMS configured as `2 3 OP_CMS` would be counted as three sigops, corresponding to the three public keys it checks.

Further details clarify the intended approach for sigop accounting aligns with the methodologies used for P2SH and Segregated Witness (Segwit) transactions. Specifically, the count of sigops in a CMS operation will match the number of keys involved, provided this number does not exceed 16. If the number of keys exceeds 16, the sigop count defaults to 20. This standard applies irrespective of the script type, ensuring consistency across both P2SH and Segwit transactions.

Additionally, there's a mention of a transaction limit related to CHECK*SIG operations, particularly when dealing with bare previous output (prevout) scripts. The email confirms that spending an output from a Pay-to-PubKey (P2PK) transaction counts as a single sigop against a cumulative transaction limit of 2,500 sigops. This includes consideration for the scriptpubkey, the scriptsig, and any relevant redeem script if the transaction utilizes P2SH. This comprehensive approach to sigop accounting is aimed at maintaining transaction integrity and mitigating potential abuse, aligning with broader efforts to ensure scalability and security within the network.</summary>
    <published>2025-02-05T15:30:36.296000+00:00</published>
  </entry>
</feed>
