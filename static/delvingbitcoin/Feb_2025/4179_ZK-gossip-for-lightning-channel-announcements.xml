<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>ZK-gossip for lightning channel announcements</title>
  <updated>2025-02-05T02:20:40.591227+00:00</updated>
  <author>
    <name>Davidson 2025-02-05 00:35:23.038000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>ZK-gossip for lightning channel announcements</title>
    <updated>2025-02-05T02:20:40.591253+00:00</updated>
    <link href="https://delvingbitcoin.org/t/zk-gossip-for-lightning-channel-announcements/1407/21" rel="alternate"/>
    <summary>In an email exchange emphasizing the advancements in zk prover technology, the sender praises Halseth's contributions to the development of a zk prover. They express curiosity about whether the system has been tested with an algebraic hash function, highlighting that since October of the previous year, `rustreexo` has introduced the option to customize hash functions. The use of algebraic hashes, according to the sender, significantly reduces the computational load during proof generation within a prover environment.

Further discussion reveals that the current setup for proof generation utilizes a bridge node developed by the sender, which supports Poseidon 2 as a hash function. This choice of hash function facilitates the conversion of data into a JSON format, specifically designed to cater to the needs of provers. This development was initially intended to assist StarkWare in creating a Bitcoin zk prover. To enable this feature, one simply needs to activate the `shinigami` feature, although it is noted that this action will not construct the API. 

The dialogue underscores the collaborative efforts and technical intricacies involved in enhancing zk prover technologies, including the exploration of more efficient hash functions and the integration of specialized features to support proof generation.</summary>
    <published>2025-02-05T00:35:23.038000+00:00</published>
  </entry>
</feed>
