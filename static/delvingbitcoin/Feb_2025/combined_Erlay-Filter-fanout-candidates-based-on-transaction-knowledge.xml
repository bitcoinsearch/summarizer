<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Erlay: Filter fanout candidates based on transaction knowledge</title>
  <updated>2025-02-05T02:24:59.888984+00:00</updated>
  <author>
    <name>sr-gi 2025-02-04 15:33:09.601000+00:00</name>
  </author>
  <author>
    <name>harding 2025-02-04 12:57:14.965000+00:00</name>
  </author>
  <author>
    <name>srgi  . 2025-01-31 21:19:46.159000+00:00</name>
  </author>
  <link href="delvingbitcoin/Feb_2025/4176_Erlay-Filter-fanout-candidates-based-on-transaction-knowledge.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2025/4165_Erlay-Filter-fanout-candidates-based-on-transaction-knowledge.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2025/4134_Erlay-Filter-fanout-candidates-based-on-transaction-knowledge.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Erlay: Filter fanout candidates based on transaction knowledge</title>
    <updated>2025-02-05T02:24:59.889028+00:00</updated>
    <link href="https://delvingbitcoin.org/t/erlay-filter-fanout-candidates-based-on-transaction-knowledge/1416" rel="alternate"/>
    <summary>The discussion revolves around an essential aspect of the Bitcoin network, particularly focusing on the strategy for propagating transactions among peers. At the heart of this exploration is the Erlay protocol and its implications for network efficiency. A specific scenario is presented where Alice's node has a transaction, and Bob's node, having already validated a copy of the transaction, sends Alice an `inv` or a sketch with the wtxid. This raises a critical question: should Alice send Bob an `inv` for the transaction, even though Bob already knows about it? The underlying query probes into whether peers aware of a transaction should be included in the fanout process for disseminating that transaction.

The intuitive approach suggests excluding peers already informed about a transaction to ensure a high rate of dissemination to uninformed nodes, especially during the early stages of transaction propagation. Such a method assumes that as more nodes become aware of the transaction, the selection pool will naturally decrease, leading to a gradual reduction in the fanout rate. However, this assumption was put to the test through simulations within a network model consisting of 110,000 nodes. Counterintuitively, the results revealed that there was no significant difference in propagation dynamics between filtering out informed peers and including them in the dissemination process.

These findings prompt a deeper examination of transaction propagation mechanics within the Bitcoin network, highlighting the distinct roles played by reachable and unreachable nodes. Unreachable nodes, primarily relying on outbound connections for transaction announcements, contrast with reachable nodes that have a wider range of transaction awareness due to their higher connectivity. Further investigation into the `GETDATA` request delay parameters revealed how these settings impact the network's transaction spread. The timing before a node receives a transaction and schedules its announcement is crucial for understanding how information about transactions permeates through the network.

In conclusion, despite initial expectations, opting to filter peers based on their prior knowledge of transactions does not significantly affect the overall efficiency of transaction propagation. This insight emphasizes the need to consider the unique characteristics of the Bitcoin network when developing strategies for optimizing transaction dissemination, showcasing the intricate balance between network topology, node behavior, and propagation tactics.</summary>
    <published>2025-02-04T15:33:09.601000+00:00</published>
  </entry>
</feed>
