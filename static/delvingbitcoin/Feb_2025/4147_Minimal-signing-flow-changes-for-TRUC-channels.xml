<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Minimal signing flow changes for TRUC channels</title>
  <updated>2025-02-03T02:20:43.656739+00:00</updated>
  <author>
    <name>ajtowns 2025-02-02 04:36:56.859000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Minimal signing flow changes for TRUC channels</title>
    <updated>2025-02-03T02:20:43.656770+00:00</updated>
    <link href="https://delvingbitcoin.org/t/minimal-signing-flow-changes-for-truc-channels/1414/5" rel="alternate"/>
    <summary>In the realm of blockchain technology and cryptocurrency transactions, particularly within the framework of Lightning Network's operation, a novel approach to managing Hashed Time-Locked Contracts (HTLCs) has been outlined. This method enhances the efficiency and security of conditional payments between parties, which is crucial for the seamless operation of instant, low-fee transactions on the Lightning Network. The proposed solution involves the modification of the commitment transaction structure to accommodate additional HTLCs without compromising the balance or integrity of the contractual agreement between the involved parties.

The process begins with an existing commitment that includes balances for two parties, Alice and Bob, alongside existing HTLCs. To introduce a new HTLC into this commitment, a restructured commitment is signed by both parties. This restructuring not only adjusts Alice's balance to account for the new HTLC but also integrates the HTLC into the commitment itself. Consequently, if Alice were to close the channel prematurely, Bob would retain the ability to claim the HTLC through Alice's adjusted balance. Conversely, should Bob decide to close the channel with the old commitment, the new HTLC would be automatically refunded to Alice, ensuring her funds are not unjustly encumbered.

This mechanism hinges on a critical update method known as [option-simplified-update](https://github.com/lightning/bolts/pull/867), which facilitates the seamless adjustment of commitments to include new HTLCs. This approach addresses potential issues arising from concurrent updates in flight, safeguarding against scenarios where an HTLC might otherwise become unclaimable due to timing discrepancies between commitment closure and HTLC resolution.

This strategy was discussed in detail in October 2021, highlighting its potential to significantly streamline the operation of the Lightning Network by making the process of adding and resolving HTLCs more efficient and secure. Further details and discussions on this topic can be explored through the archived communication available at [Oct 2021](https://web.archive.org/web/20231114193842/https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003278.html), providing valuable insights into the ongoing developments in Lightning Network's protocol enhancements.</summary>
    <published>2025-02-02T04:36:56.859000+00:00</published>
  </entry>
</feed>
