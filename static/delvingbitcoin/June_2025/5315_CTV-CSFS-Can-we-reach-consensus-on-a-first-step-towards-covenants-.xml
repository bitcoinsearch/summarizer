<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CTV+CSFS: Can we reach consensus on a first step towards covenants?</title>
  <updated>2025-07-01T04:59:44.505370+00:00</updated>
  <author>
    <name>jamesob 2025-06-18 02:54:18.813000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CTV+CSFS: Can we reach consensus on a first step towards covenants?</title>
    <updated>2025-07-01T04:59:44.505401+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ctv-csfs-can-we-reach-consensus-on-a-first-step-towards-covenants/1509/78" rel="alternate"/>
    <summary>In the ongoing discussions about BIP-119 and its future direction, there's an openness to modifying the proposal to better align with community feedback and technical requirements. The modification under consideration includes removing support for legacy scripts while retaining support for witness version 0. This change is seen as a compromise that maintains the utility of CTV (CHECKTEMPLATEVERIFY) without necessitating legacy script compatibility, which was initially thought to be necessary for certain technical tricks like the BitVM "sibling input requirement." However, it has been clarified that this is not the case, thereby opening up the possibility for this adjustment.

Furthermore, there is a suggestion to introduce a new operation, `OP_TEMPLATEHASH`, specifically tailored for tapscript. This operation would push the CTV digest onto the stack, representing a low-effort and low-risk enhancement to the protocol. This proposition aims at enriching the functionality and flexibility of CTV within the Bitcoin scripting environment, especially in the context of newer script types.

The discourse also touches upon the potential for consensus around several key points: the modification of BIP-119 to exclude legacy script support, the definition of a "witness v2" as outlined in a patch by instagibbs, and the inclusion of a tapscript-exclusive `OP_TEMPLATEHASH`. These changes are positioned as reasonable advancements that could garner broad support within the stakeholder community. For those interested in the technical specifics of the proposed "witness v2," more information can be found through the provided [link](https://github.com/instagibbs/bitcoin/commit/9b5ae77d97222efc2328c1916f790c7f67cf10b3), showcasing the detailed implementation aspects discussed.</summary>
    <published>2025-06-18T02:54:18.813000+00:00</published>
  </entry>
</feed>
