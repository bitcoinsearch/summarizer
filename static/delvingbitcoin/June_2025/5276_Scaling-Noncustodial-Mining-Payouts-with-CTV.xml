<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Scaling Noncustodial Mining Payouts with CTV</title>
  <updated>2025-07-01T05:21:35.615667+00:00</updated>
  <author>
    <name>marathon-gary 2025-06-10 22:49:48.448000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Scaling Noncustodial Mining Payouts with CTV</title>
    <updated>2025-07-01T05:21:35.615698+00:00</updated>
    <link href="https://delvingbitcoin.org/t/scaling-noncustodial-mining-payouts-with-ctv/1753/13" rel="alternate"/>
    <summary>The discussion revolves around the nuanced differences between Lightning Network (LN) channels and CheckTemplateVerify (CTV) trees within the context of blockchain technology, particularly focusing on their roles in transaction deferment. LN channels are highlighted for deferring an unknown final state within the channel's capacity limits, contrasting with CTV trees that defer a known final state. This distinction is crucial for understanding how each method handles transaction settlements differently. CTV trees, however, are noted for their flexibility, as they can incorporate batch channels, allowing them to manage both known and unknown states of deferred transactions.

An insightful example provided is the use of a coinbase CTV tree by mining pools, which could be optimistically updated with every block win, predicated on the active participation and interactivity among participants. This is akin to the interactive assumption made by LN but tailored to the mining process's binary natureâ€”miners are either actively mining or not. The conversation then delves into the technical feasibility of such updates through MuSig for the CTV tree's nodes, emphasizing the potential for real-time adjustments without exiting the framework, provided all parties are online and cooperative.

Moreover, it is pointed out that miners, due to their capability to create block templates, possess the unique advantage of including zero-fee transactions to pay themselves from the CTV tree in any discovered block. This method contrasts with traditional custodial pool payouts, which defer payout costs to future blocks through fanout transactions. The proposed design shifts the trust model, suggesting a more proactive and participant-engaged approach to handling payouts and transaction states within the blockchain ecosystem. Further reading on the intricacies of batch channels within this framework is available through the provided [link](https://utxos.org/uses/batch-channels/), offering a deeper dive into the subject matter for those interested.</summary>
    <published>2025-06-10T22:49:48.448000+00:00</published>
  </entry>
</feed>
