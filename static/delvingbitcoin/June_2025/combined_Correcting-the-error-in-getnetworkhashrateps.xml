<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Correcting the error in getnetworkhashrateps</title>
  <updated>2025-07-01T04:27:55.984661+00:00</updated>
  <author>
    <name>zawy 2025-06-30 20:57:19.615000+00:00</name>
  </author>
  <author>
    <name>sipa 2025-06-30 17:03:02.352000+00:00</name>
  </author>
  <author>
    <name>zawy 2025-06-30 15:56:54.666000+00:00</name>
  </author>
  <author>
    <name>sipa 2025-06-30 14:04:44.124000+00:00</name>
  </author>
  <author>
    <name>zawy 2025-06-30 13:16:54.956000+00:00</name>
  </author>
  <author>
    <name>zawy 2025-06-30 12:45:13.061000+00:00</name>
  </author>
  <author>
    <name>zawy 2025-06-29 14:43:12.845000+00:00</name>
  </author>
  <author>
    <name>sipa 2025-06-28 12:18:04.434000+00:00</name>
  </author>
  <author>
    <name>zawy 2025-06-28 07:49:41.937000+00:00</name>
  </author>
  <author>
    <name>sipa 2025-06-27 22:25:19.851000+00:00</name>
  </author>
  <author>
    <name>sipa 2025-06-27 18:57:42.941000+00:00</name>
  </author>
  <author>
    <name>zawy 2025-06-27 18:43:30.287000+00:00</name>
  </author>
  <author>
    <name>zawy 2025-06-02 10:53:31.141000+00:00</name>
  </author>
  <link href="delvingbitcoin/June_2025/5381_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5378_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5377_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5376_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5375_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5370_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5362_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5364_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5359_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5358_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5354_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5355_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2025/5190_Correcting-the-error-in-getnetworkhashrateps.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Correcting the error in getnetworkhashrateps</title>
    <updated>2025-07-01T04:27:55.984759+00:00</updated>
    <link href="https://delvingbitcoin.org/t/correcting-the-error-in-getnetworkhashrateps/1745" rel="alternate"/>
    <summary>The discussion revolves around the intricacies of estimating hashrate and work within the context of Proof of Work (PoW) protocols, specifically addressing the disparities between expected and observed values due to the statistical nature of mining. The primary focus is on understanding how hashrates are estimated, the role of difficulty in these calculations, and the implications for security models reliant on non-repurposable equipment. The conversation delves into a hypothetical scenario where miners select different difficulties during a partition, leading to discrepancies in block discovery times despite equal total work, highlighting the statistical challenges in accurately estimating hashrate based on observed outcomes.

The correspondence further explores the mathematical underpinnings of hashrate estimation, emphasizing the necessity of assuming a constant hashrate for simplification, despite it being an approximation. It critiques the conventional method of multiplying estimated hashrate by observed timespan to calculate total work, pointing out potential inaccuracies in this approach. The dialogue underscores the precision of work as a metric, directly proportional to difficulty and inversely proportional to target, proposing a sum of work per block as a more reliable estimator of hashes performed.

A significant portion of the exchange scrutinizes the methodology for calculating hashrate and work, particularly in scenarios where both difficulty and hashrate vary. It suggests adjustments to traditional calculations (e.g., multiplying the sum of difficulties by (N-1)/N) to avoid errors that could impact consensus decisions or be exploited in attacks such as selfish mining. This adjustment is posited as crucial for making accurate PoW consensus decisions and for ordering in Directed Acyclic Graphs (DAGs), with implications for preventing delays in reaching consensus due to strategic behavior by attackers.

Further elaboration is provided on the technical aspects of estimating hashrate, including a critique of using time-weighted targets and proposing an unbiased estimator for hashrate that compensates for the overestimation inherent in current methods. The discussion introduces a corrected formula for a more accurate and unbiased hashrate estimate, which could potentially address long-standing issues in network hashrate estimation.

Lastly, the conversation touches upon practical applications and improvements in hashrate estimation techniques, advocating for a fixed time window approach to mitigate minor timestamp errors and provide more timely estimates. It also revisits the concept of using Erlang distribution for more accurate adjustment calculations, contrasting it with the Poisson distribution to reflect on how best to account for the dynamic nature of block discovery times and difficulty adjustments. This nuanced analysis aims to refine the accuracy of hashrate estimations, which are critical for the security and efficiency of blockchain networks.</summary>
    <published>2025-06-30T20:57:19.615000+00:00</published>
  </entry>
</feed>
