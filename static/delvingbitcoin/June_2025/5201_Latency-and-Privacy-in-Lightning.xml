<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Latency and Privacy in Lightning</title>
  <updated>2025-07-01T05:12:18.159713+00:00</updated>
  <author>
    <name>t-bast 2025-06-03 10:05:02.063000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Latency and Privacy in Lightning</title>
    <updated>2025-07-01T05:12:18.159739+00:00</updated>
    <link href="https://delvingbitcoin.org/t/latency-and-privacy-in-lightning/1723/22" rel="alternate"/>
    <summary>In the recent specification meeting, several proposals were evaluated concerning how to report hold times in attributable failures, each with its unique set of advantages and disadvantages. The discussion revolved around three primary options aimed at optimizing the reporting process.

The first option on the table was to maintain the status quo by not altering the current system, which reports hold times with millisecond precision. This approach ensures that no immediate changes are required in the system's infrastructure or reporting mechanisms. However, it may not address potential concerns related to the granularity of time measurement and its impact on data analysis or system performance.

Alternatively, a significant modification was considered: changing the encoding of hold times in attributable failures to a specified granularity, denoted as X milliseconds. This adjustment would standardize time reporting and could potentially simplify data processing and analysis. Yet, determining the optimal value for X poses a challenge, as it necessitates a balance between sufficient detail for analysis and avoiding unnecessary complexity in data handling. Moreover, this change would require updates to the system's architecture, possibly involving considerable effort in implementation and adaptation.

The third proposal introduces a nuanced approach by retaining millisecond granularity but incorporating a hard-coded threshold value from which nodes would subtract when reporting hold times. This method aims to preserve detailed timing information while mitigating certain issues associated with very short or negligible hold times. Various iterations of this idea were discussed, indicating a range of possible implementations. Each variation presents its own set of technical implications, including the potential for added complexity in node operation and the necessity for careful calibration of the threshold value to ensure it effectively addresses the identified issues without introducing new problems.

In summary, the meeting deliberated on three distinct strategies for enhancing the reporting of hold times in attributable failures. Each option comes with its inherent benefits and challenges, ranging from maintaining the existing system for simplicity, adjusting granularity for uniformity, or subtracting a threshold value for refined accuracy. The decision on which path to pursue requires further analysis and consideration of the trade-offs involved in terms of system compatibility, data utility, and implementation feasibility.</summary>
    <published>2025-06-03T10:05:02.063000+00:00</published>
  </entry>
</feed>
