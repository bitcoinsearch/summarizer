<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fingerprinting nodes via addr requests</title>
  <updated>2025-07-01T03:58:39.370312+00:00</updated>
  <author>
    <name>naiyoma 2025-06-26 20:31:54.086000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fingerprinting nodes via addr requests</title>
    <updated>2025-07-01T03:58:39.370344+00:00</updated>
    <link href="https://delvingbitcoin.org/t/fingerprinting-nodes-via-addr-requests/1786/10" rel="alternate"/>
    <summary>In the realm of network communication within certain systems, timestamps serve as a crucial mechanism for controlling the spread of node announcements via gossip relay. This technique is distinct from the GETADDR method and aims to ensure that announcements are disseminated sufficiently across the network without causing an overload or flooding. The strategy involves forwarding received addresses from packages that are equal to or less than 10 in size to one or two peers. Moreover, there is a specific timeframe set for the forwarding process, which is limited to 10 minutes following the original address submission. This limitation necessitates the use of timestamps to monitor the timing of each address's propagation.

A proposed area for further exploration and potentially enhancing the system's efficiency is the examination of replacing the current timestamp usage (nTime) with alternative metrics such as m_last_try or m_last_success. By conducting experiments to observe the outcomes of such replacements, insights could be gained regarding the significance of the existing timestamp check. Even if the replacement of nTime does not ultimately occur, this investigative process could reveal valuable information about the current system's performance and areas for improvement.</summary>
    <published>2025-06-26T20:31:54.086000+00:00</published>
  </entry>
</feed>
