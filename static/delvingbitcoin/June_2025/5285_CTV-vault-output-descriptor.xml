<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CTV vault output descriptor</title>
  <updated>2025-07-01T05:26:18.122793+00:00</updated>
  <author>
    <name>sjors 2025-06-12 07:07:37.257000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CTV vault output descriptor</title>
    <updated>2025-07-01T05:26:18.122824+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ctv-vault-output-descriptor/1766/5" rel="alternate"/>
    <summary>The discussion centers around the integration and effectiveness of output descriptors in Bitcoin Core, particularly in relation to their role and potential limitations. Over six years have passed since the proposal of output descriptors for Bitcoin Core, and only recently has there been progress toward supporting MuSig2, a protocol enhancement. This slow advancement underscores a consideration: adopting an entirely new paradigm could significantly delay the implementation of critical features like working vaults in Bitcoin Core, possibly by another decade. This concern hints at the nuances and complexities involved in evolving Bitcoin's infrastructure, where even with more developers, significant changes require substantial time.

Output descriptors are crucial as they encapsulate all necessary information for spending an output, suggesting a stringent requirement that may need flexibility. For instance, the possibility of allowing the retrieval of certain information from the blockchain itself could introduce some leeway. Currently, Bitcoin Core implements a caching mechanism for descriptors, simplifying the storage of derived keys and other relevant data. This system facilitates the identification of coins associated with a primary descriptor and the detection of spends utilizing specific branches, such as `ctv()`, by reconstructing the required elements for the CTV hash. This process implies the necessity for predefined defaults, like matching `nlocktime` values or incorporating optional arguments to accommodate variations.

A paramount aspect of usability is the assurance that descriptors need only be backed up once during a wallet's lifespan. The design allows for the generation of additional descriptors, such as `ctv_tx()`, provided these can be recreated from the initial backup and any blockchain data. This feature emphasizes the importance of a balance between security, convenience, and the forward compatibility of Bitcoin Core's wallet architecture. Essential to this discussion is the implication that while current practices aim to solidify the foundation of Bitcoin transactions, there remains room for refinement and innovation, especially in making the system more adaptable and user-friendly without compromising on security or functionality.</summary>
    <published>2025-06-12T07:07:37.257000+00:00</published>
  </entry>
</feed>
