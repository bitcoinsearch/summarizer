<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CTV vault output descriptor</title>
  <updated>2025-07-01T05:25:37.619687+00:00</updated>
  <author>
    <name>sanket1729 2025-06-20 01:50:09.128000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CTV vault output descriptor</title>
    <updated>2025-07-01T05:25:37.619719+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ctv-vault-output-descriptor/1766/9" rel="alternate"/>
    <summary>In the revised approach to constructing CTV (CheckTemplateVerify) vaults, a significant modification has been introduced to enhance the security and efficiency of fund deposits. Instead of directly depositing funds into CTV vaults, which has been identified as error-prone and potentially leading to the loss of funds, the process now involves an initial deposit into a regular BIP380 `in_desc`. This step is crucial for mitigating risks associated with direct deposits into CTV addresses.

Following the initial deposit, the funds are then transferred to a CTV address through a separate transaction. This address operates under a ctv vault-like policy, ensuring a higher level of governance over the deposited funds. One notable aspect of this method is that the deposit first moves into a hot wallet before being securely moved into the CTV vault. This additional step is intended to further safeguard the process and reduce the likelihood of errors or losses.

The proposed structure for integrating ctv vaults employs a distinct format: `ctv(in_desc, out_desc)`. In this format, `in_desc` refers to a BIP380 descriptor used to index deposits, facilitating the immediate movement of funds to the vault via a standard CTV transaction. On the other hand, `out_desc` denotes the first output of a BIP380 descriptor, matching the input amount, along with a second output that acts as an anchor for transaction fees. This setup might include a fixed DUST output with a predetermined fee rate (e.g., 1 sat/vb), among other practical defaults such as nlocktime and sequence values. 

This innovative approach not only simplifies the implementation process—given that most wallets, including Bitcoin Core, would require minimal to no complex logic to support it—but also addresses the issue of potentially incorrect deposit amounts in CTV vaults. The discussion underscores the importance of using software to identify wallets during deposits, leveraging the descriptor for tracing all funds for backup purposes, thereby enhancing the reliability and traceability of transactions within the ecosystem.</summary>
    <published>2025-06-20T01:50:09.128000+00:00</published>
  </entry>
</feed>
