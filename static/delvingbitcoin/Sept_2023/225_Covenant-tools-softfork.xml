<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Covenant tools softfork</title>
  <updated>2024-09-10T03:13:19.622386+00:00</updated>
  <author>
    <name>jamesob 2023-09-30 12:15:35.093000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Covenant tools softfork</title>
    <updated>2024-09-10T03:13:19.622411+00:00</updated>
    <link href="https://delvingbitcoin.org/t/covenant-tools-softfork/98/13" rel="alternate"/>
    <summary>The recent discussions around the potential next soft fork for Bitcoin have highlighted several key points and considerations. The primary focus is not on the activation methods themselves but rather on establishing a clear target feature set for future updates. This includes acknowledging that while a draft PR exists as a reference point, it is not necessarily in its final form to be merged. There are known updates needed for BIP 118 that are deemed likely desirable, indicating that neither BIP 118 nor BIP 119 have undergone thorough scrutiny. Furthermore, BIP 345 has yet to be officially published, suggesting a need for tempered expectations regarding immediate readiness for these changes.

The dialogue reflects an understanding that, despite the lengthy public awareness of proposals like APO and CTV, a continuous cycle of waiting for further experiments and testing can impede progress. The notion presented is that at some stage, a decision must be made to move forward with features that are broadly considered both desirable and safe. This is juxtaposed against the tendency to delay action in favor of developing more demonstrations and tools, a strategy that has seen limited success over recent years due to the disproportionate balance between Bitcoin's human capital and the challenges faced.

Moreover, there are specific technical aspects under consideration, such as the need to address package relay and fees within ln-symmetry through ephemeral transactions and strategies to prevent pinning. These issues highlight the complexity of making consensus changes, which often involve multiple dependent components. However, it's argued that not all dependencies need to be resolved in unison before progress can be made on individual elements, suggesting a more modular approach to problem-solving.

The overarching proposal is not to rush into merging code but to collectively agree on a desirable feature set for the next script update, thereby focusing efforts towards resolving specific details. This approach aims to shift from an open-ended and somewhat aimless exploration of possibilities to a more goal-oriented process. By doing so, it is hoped that the community can overcome paralysis by analysis and begin to make tangible strides towards implementing these eagerly anticipated updates.</summary>
    <published>2023-09-30T12:15:35.093000+00:00</published>
  </entry>
</feed>
