<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Covenant tools softfork</title>
  <updated>2024-09-10T03:15:32.428641+00:00</updated>
  <author>
    <name>sjors 2023-09-29 09:46:38.270000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Covenant tools softfork</title>
    <updated>2024-09-10T03:15:32.428672+00:00</updated>
    <link href="https://delvingbitcoin.org/t/covenant-tools-softfork/98/3" rel="alternate"/>
    <summary>The discussion navigates through the complexities and strategic considerations involved in deploying updates to the Bitcoin protocol, specifically focusing on proposals like `ANYPREVOUT`, `OP_VAULT`, and `CTV`. The conversation reminisces about the Taproot update, highlighting its strategy of bundling multiple improvements into a single fork to simplify the implementation process and avoid additional complexity. This approach contrasts with the current situation where `ANYPREVOUT`, `OP_VAULT`, and `CTV` are deemed more suitable for independent deployment due to their varying maturity levels and the absence of interdependencies that necessitate a bundled release.

The email outlines a suggestion to utilize BIP9's capability for parallel activation of multiple forks, proposing the allocation of one bit per proposal. This method allows for flexible activation strategies, including the potential bundling of proposals during the activation phase, which may be advantageous for rallying miner support. However, the author expresses a preference for the scenario where proposals are activated independently based on their readiness and community consensus, rather than delaying all proposals due to the slower progress of one.

There is an acknowledgment of the practical challenges in managing the codebase as these proposals are developed and tested. The inclusion of unactivated soft fork code in the main Bitcoin Core codebase is recognized as a risk that needs careful consideration, given the potential for bugs. The balance between having code that is almost ready for activation and ensuring the highest standards of quality and security before activation is highlighted as a critical area of focus. The email suggests a pragmatic approach to activation flags, recommending setting flags for proposals like `ANYPREVOUT`, `CTV`, and `OP_VAULT` based on their respective states of review and testing, with the possibility of deferring some activations in favor of those that have undergone extensive vetting.</summary>
    <published>2023-09-29T09:46:38.270000+00:00</published>
  </entry>
</feed>
