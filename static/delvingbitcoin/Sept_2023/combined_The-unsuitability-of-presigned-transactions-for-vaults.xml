<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - The unsuitability of presigned transactions for vaults</title>
  <updated>2024-09-27T03:17:53.137002+00:00</updated>
  <author>
    <name>jamesob 2023-10-02 14:22:18.651000+00:00</name>
  </author>
  <author>
    <name>jamesob 2023-10-02 14:14:20.131000+00:00</name>
  </author>
  <author>
    <name>AntoineP 2023-10-01 18:56:45.507000+00:00</name>
  </author>
  <author>
    <name>David Harding 2023-09-30 17:53:01.009000+00:00</name>
  </author>
  <author>
    <name>David Harding 2023-09-30 17:39:14.427000+00:00</name>
  </author>
  <author>
    <name>jamesob 2023-09-30 11:54:55.817000+00:00</name>
  </author>
  <link href="delvingbitcoin/Oct_2023/263_The-unsuitability-of-presigned-transactions-for-vaults.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2023/261_The-unsuitability-of-presigned-transactions-for-vaults.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2023/241_The-unsuitability-of-presigned-transactions-for-vaults.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2023/232_The-unsuitability-of-presigned-transactions-for-vaults.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2023/231_The-unsuitability-of-presigned-transactions-for-vaults.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2023/222_The-unsuitability-of-presigned-transactions-for-vaults.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - The unsuitability of presigned transactions for vaults</title>
    <updated>2024-09-27T03:17:53.137059+00:00</updated>
    <link href="https://delvingbitcoin.org/t/the-unsuitability-of-presigned-transactions-for-vaults/113" rel="alternate"/>
    <summary>The discourse begins by addressing the misconception that Liana seeks to emulate a vault, clarifying that while it does not directly mimic a vault, it would likely utilize `OP_VAULT` if available due to its general applicability and efficiency in handling cases similar to Liana's. This distinction highlights the broader conversation on the use of opcodes like `OP_VAULT` in simplifying complex operations such as timelock rolling and key management, which are inherent to the concept of a vault in cryptocurrency transactions. The discussion further delves into the differentiation between Revault and ephemeral-key approaches versus covenant emulation through trusted oracles, emphasizing the potential security weaknesses of relying solely on an oracle for transaction validity enforcement. This critique underscores the nuanced distinctions between various methods of achieving vault-like security measures without the need for script upgrades, pointing towards the inherent trade-offs and security considerations each method entails.

In an exploration of the technical nuances between ephemeral keys and nonces, the conversation shifts to the practical limitations of hardware wallet support for general PSBTs and the challenges associated with generating secure ephemeral keys. The debate touches upon the potential advantages of presigned vault transactions over `OP_VAULT`, particularly in terms of efficiency and recovery mechanisms. However, it also acknowledges the significant overhead and complexity introduced by presigned schemes, especially in managing multiple UTXOs and transactions for each vaulted deposit. This complexity is highlighted through a comparison of the transactional flows and script requirements between presigned and `OP_VAULT` setups, illustrating the practical challenges in implementing efficient and secure vault solutions.

Further examination reveals a critical analysis of current efforts to implement or emulate vaults using existing scripting capabilities, such as Revault, Liana, and Bryan Bishopâ€™s prototype code. The discussion critiques these attempts from various angles, including the reliance on ephemeral keys, the risks associated with address reuse and burnt coins, the operational burden of UTXO management, and the inefficiencies in chain usage and fee management inherent to presigned transaction vaults. These criticisms underscore the limitations and security concerns of current vault implementations, suggesting a need for more sophisticated and user-friendly solutions like `OP_VAULT`.

The narrative then transitions into a broader reflection on the desirability and feasibility of vaults within the Bitcoin ecosystem. It presents an argument against the notion that the absence of widespread vault implementations signifies a lack of demand, proposing instead that the technical and operational hurdles of current approaches have hindered broader adoption. The discussion advocates for the potential of `OP_VAULT` to overcome these challenges, offering a more accessible and efficient framework for implementing vaults. Through this lens, the conversation invites a reevaluation of vaults' value proposition, emphasizing the importance of ongoing innovation and development in expanding the usability and security of cryptocurrency storage solutions.</summary>
    <published>2023-10-02T14:22:18.651000+00:00</published>
  </entry>
</feed>
