<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Confidential Script: Emulate soft forks using stateless TEEs</title>
  <updated>2025-08-31T02:40:56.100520+00:00</updated>
  <author>
    <name>josh 2025-08-30 20:26:41.735000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Confidential Script: Emulate soft forks using stateless TEEs</title>
    <updated>2025-08-31T02:40:56.100554+00:00</updated>
    <link href="https://delvingbitcoin.org/t/confidential-script-emulate-soft-forks-using-stateless-tees/1918/6" rel="alternate"/>
    <summary>The discussion begins with an acknowledgment of the creation of a public crate that incorporates specific opcodes, highlighting its significance and the suggestion to integrate it into the Inquisition repository, which is known for its peer-reviewed process. This integration is deemed beneficial as it aligns with the aim of employing such technology in environments where real money is at stake. The conversation then shifts to a request directed at @ajtowns, inquiring about the possibility of adding kernel support to Inquisition. Although this request might diverge from the original intent of Inquisition, it is presented as a logical extension given Inquisition's role in reviewing soft fork proposals.

Further into the dialogue, @JeremyRubin's contributions are acknowledged, with a commitment made to reference his work within the project repository. There's a notable interest in incorporating BitVM for adding integrity checks, yet there's a concern regarding potential unnecessary complications. The overarching goal for the project is articulated clearly: to develop a system that is not only secure, thanks to its simple and publicly audited code but also user-friendly. This dual focus aims to facilitate developers in creating programs that are ready for deployment upon the adoption of the soft fork, while also allowing users to effortlessly and without permission, engage with a shared emulator. This would enable them to independently exit from transactions involving unspent transaction outputs (UTXOs) shared by multiple users, an aspect exemplified by ShieldedCSV.</summary>
    <published>2025-08-30T20:26:41.735000+00:00</published>
  </entry>
</feed>
