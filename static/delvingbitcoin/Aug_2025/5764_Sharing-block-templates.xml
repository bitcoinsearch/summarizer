<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Sharing block templates</title>
  <updated>2025-08-27T02:33:04.940567+00:00</updated>
  <author>
    <name>gmaxwell 2025-08-22 11:34:53.287000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Sharing block templates</title>
    <updated>2025-08-27T02:33:04.940602+00:00</updated>
    <link href="https://delvingbitcoin.org/t/sharing-block-templates/1906/16" rel="alternate"/>
    <summary>In the realm of data transmission and encoding, the utilization of minisketches presents an intriguing method for verifying the accuracy of decoded data, surpassing the binary limitations of traditional hash functions by enabling a more nuanced error identification. This capability is particularly beneficial in scenarios involving short-id collisions, which are predominantly affected by one or two mismatches. Given that these collisions do not significantly impact the failure rate unless the short-id utilized is exceedingly small, the ability to discern and correct such minimal discrepancies becomes invaluable. The computational cost associated with generating minisketches is minimal, allowing for their values to be easily calculated and compared through simple operations like XOR, irrespective of whether this process occurs on the sender’s or receiver’s end.

The choice of minisketch size is critical, with a suggestion of using a size 8 as an arbitrary benchmark to mitigate the risk of false decodes, which becomes cryptographically negligible at this scale for 64-bit hashes. This threshold might even be lower, potentially at size 4, though this necessitates further verification through available library functions. Moreover, the theoretical potential for decoding minisketches beyond their apparent size limits exists, provided there is access to a set of likely differential elements, such as a personal mempool or known collision list. However, the lack of a decoder capable of exploiting this information without resorting to exponential complexity remains a significant hurdle.

Despite these advancements, the practicality of employing sophisticated decoding techniques, especially in contexts where the receiver can easily manage salt selection and caching for short ids, may not justify the complexity. The effectiveness and efficiency of minisketch decoding, therefore, hinge on balancing the computational ease against the potential for enhanced error correction, a consideration that must navigate the current constraints of decoder technology while anticipating future innovations.</summary>
    <published>2025-08-22T11:34:53.287000+00:00</published>
  </entry>
</feed>
