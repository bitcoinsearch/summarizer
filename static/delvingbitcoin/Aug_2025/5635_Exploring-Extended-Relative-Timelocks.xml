<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Exploring Extended Relative Timelocks</title>
  <updated>2025-08-05T03:08:07.604909+00:00</updated>
  <author>
    <name>AntoineP 2025-08-04 16:05:38.162000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Exploring Extended Relative Timelocks</title>
    <updated>2025-08-05T03:08:07.604946+00:00</updated>
    <link href="https://delvingbitcoin.org/t/exploring-extended-relative-timelocks/1818/23" rel="alternate"/>
    <summary>The discussion focuses on the intricacies of utilizing specific bits within Bitcoin's Lightning Network for extending relative timelocks. A significant point raised is the current usage of these bits by Lightning to store obfuscated commitment transaction numbers, which essentially means that the bits with no consensus meaning might not be available as an upgrade hook for further developments. This highlights a limitation in leveraging the existing structure for enhancements without interfering with current functionalities.

Further exploration suggests that for anyone looking to work on extending relative timelocks, an alternative approach would be to utilize the Taproot annex. The proposal extends beyond just enhancing relative timelocks; it also encompasses integrating per-input absolute timelocks into a unified "improved timelocks" proposal. This approach not only addresses the technical challenge of extending timelocks but also suggests a cohesive strategy for broadening the scope of timelock functionalities within Bitcoin's framework, potentially leading to a more versatile and robust system.</summary>
    <published>2025-08-04T16:05:38.162000+00:00</published>
  </entry>
</feed>
