<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Changing the minimum relay feerate</title>
  <updated>2025-08-13T02:53:20.986539+00:00</updated>
  <author>
    <name>garlonicon 2025-08-12 16:53:22.750000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Changing the minimum relay feerate</title>
    <updated>2025-08-13T02:53:20.986577+00:00</updated>
    <link href="https://delvingbitcoin.org/t/changing-the-minimum-relay-feerate/1886/11" rel="alternate"/>
    <summary>The dynamics of Bitcoin's mempool and block size play a crucial role in transaction processing and fee determination. The default size of the mempool is set at 300 MB, which acts as a holding area for unconfirmed transactions. When this mempool is full, transactions with lower fee rates are automatically dropped to prioritize those with higher fees. This mechanism ensures that even if free transactions are permitted, the maximum block size of 4 MB is a hard limit that cannot be exceeded. This limit is enforced to maintain network integrity, regardless of the fee attached to any transaction.

The prioritization of transactions based on fee rate means that, typically, miners still collect significant fees most of the time. This is due to the fact that blocks rarely are empty and transactions compete to be included in the next block by offering higher fees. However, it is important to note that miners have the flexibility to accept any fee rate they choose, even as low as one satoshi per transaction. This opens up possibilities for miners to support low-fee transactions through batching services. Batching involves grouping several transactions into one, thereby reducing the fee per transaction. This method not only makes it feasible to relay low-fee transactions but also enhances efficiency through a process that simplifies the chain of signatures. By compressing multiple transactions into a single one with the same final outputs, the effective fee rate of the batched transaction can be increased.

Innovative techniques such as using different signature hashes (sighashes) other than the standard SIGHASH_ALL, or allocating more than one user per Unspent Transaction Output (UTXO), can further optimize transaction processing. These strategies allow for greater flexibility and efficiency in handling transactions, especially in scenarios where minimizing transaction fees is desirable.</summary>
    <published>2025-08-12T16:53:22.750000+00:00</published>
  </entry>
</feed>
