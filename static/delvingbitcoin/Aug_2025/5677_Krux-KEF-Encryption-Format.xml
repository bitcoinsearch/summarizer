<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Krux: KEF Encryption Format</title>
  <updated>2025-08-09T02:54:24.822466+00:00</updated>
  <author>
    <name>jdlcdl 2025-08-08 16:55:50.371000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Krux: KEF Encryption Format</title>
    <updated>2025-08-09T02:54:24.822499+00:00</updated>
    <link href="https://delvingbitcoin.org/t/krux-kef-encryption-format/1912" rel="alternate"/>
    <summary>The recent email from the Project Krux team highlights significant advancements in the KEF Encryption Format, specifically tailored for the encryption of bip39 mnemonics. This initiative, sparked during preparations for the krux release 23.09.0, aims to offer a robust solution for securely storing mnemonic phrases across various mediums such as SPI-flash, sd cards, and QR codes. The proposed encrypted-mnemonic QR format has been designed to be both extensible and lightweight, ensuring ease of use and broad appreciation among users.

The development of this specification, along with its implementation and testing suite, is the culmination of extensive research dedicated to enhancing and broadening the original encryption format, now known as KEF. With the introduction of ten new versions, the updated KEF extends its application beyond mnemonics to accommodate variable-length strings, including moderately sized PSBTs. It also introduces the flexibility to choose from four AES modes of operation, with options for compression, and optimizations aimed at reducing the envelope size. This expansion not only increases the utility of the KEF but also emphasizes user freedom by avoiding lock-in with specific projects during secret recovery processes.

Furthermore, the communication underscores the importance of community feedback in refining the KEF specifications. Open invitations have been extended to propose additional versions that could introduce beneficial features for users while remaining within the system's intended scope. It is crucial that any future amendments maintain backward compatibility to ensure seamless decryption of existing KEF envelopes. Additionally, thereâ€™s an emphasis on clarity and precision from adopting projects regarding the supported KEF versions, whether for decryption only or both encryption and decryption purposes. This approach aims to foster a transparent ecosystem where users can confidently recover their secrets across different implementations.

For more information, interested individuals are encouraged to review the detailed [krux release 23.09.0](https://github.com/selfcustody/krux/releases/tag/v23.09.0) and explore the comprehensive [krux documentation](https://selfcustody.github.io/krux/getting-started/features/encrypted-mnemonics/encrypted-qr-codes-data-and-parsing).</summary>
    <published>2025-08-08T16:55:50.371000+00:00</published>
  </entry>
</feed>
