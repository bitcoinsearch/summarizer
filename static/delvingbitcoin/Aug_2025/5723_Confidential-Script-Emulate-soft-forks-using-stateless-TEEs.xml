<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Confidential Script: Emulate soft forks using stateless TEEs</title>
  <updated>2025-08-27T02:35:08.054370+00:00</updated>
  <author>
    <name>josh 2025-08-16 02:51:53.063000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Confidential Script: Emulate soft forks using stateless TEEs</title>
    <updated>2025-08-27T02:35:08.054402+00:00</updated>
    <link href="https://delvingbitcoin.org/t/confidential-script-emulate-soft-forks-using-stateless-tees/1918/3" rel="alternate"/>
    <summary>The discussion centers around the deployment of a particular library within a Trusted Execution Environment (TEE). The author acknowledges not having deployed the library in a TEE yet but expresses eagerness to pursue this direction. Furthermore, there's an openness to collaborations or attempts by others to integrate this library into a TEE, highlighting the potential for varied deployments given the diverse expertise others might bring to the table.

Additionally, there's a suggestion to enhance the `rust-bitcoinkernel` repository by incorporating support for various soft forks such as `OP_CAT`, `OP_CTV`, `OP_CCV`, and Simplicity among others. This proposed enhancement is driven by the rationale that embedding all desired functionalities into a single kernel could streamline the deployment process. Specifically, it would enable the use of one TEE to support multiple functionalities, as opposed to maintaining separate deployments for each functionality. This approach suggests a strategic consolidation of resources and efforts to achieve efficiency and scalability in deploying these technologies within TEEs.</summary>
    <published>2025-08-16T02:51:53.063000+00:00</published>
  </entry>
</feed>
