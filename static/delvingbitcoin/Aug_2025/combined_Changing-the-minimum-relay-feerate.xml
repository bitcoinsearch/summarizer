<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Changing the minimum relay feerate</title>
  <updated>2025-08-03T03:13:27.366415+00:00</updated>
  <author>
    <name>1440000bytes 2025-08-02 19:24:55.469000+00:00</name>
  </author>
  <author>
    <name>garlonicon  . 2025-08-01 06:27:52.381000+00:00</name>
  </author>
  <author>
    <name>glozow  . 2025-07-31 20:07:11.135000+00:00</name>
  </author>
  <link href="delvingbitcoin/Aug_2025/5623_Changing-the-minimum-relay-feerate.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2025/5610_Changing-the-minimum-relay-feerate.xml" rel="alternate"/>
  <link href="delvingbitcoin/July_2025/5601_Changing-the-minimum-relay-feerate.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Changing the minimum relay feerate</title>
    <updated>2025-08-03T03:13:27.366461+00:00</updated>
    <link href="https://delvingbitcoin.org/t/changing-the-minimum-relay-feerate/1886" rel="alternate"/>
    <summary>The discourse on blockchain transactions, especially within the Bitcoin network, explores the complex dynamics of transaction standardness and its broader implications. The discussion begins with an examination of how miners might confirm fee-less transactions and utilize future Segwit versions to embed random data up to 4 MB per transaction. Such practices challenge the existing constraints of the network's protocol, potentially altering the network's integrity and efficiency. This conversation extends into the realm of incorporating Proof of Work (PoW) within transactions as a nuanced method to enhance legitimacy and scalability. By analyzing DER signatures' sizes within the Script, it is suggested that transactions could support batching, allowing for multiple low-fee transactions to be aggregated. This process facilitates their propagation across the peer-to-peer network and enables nodes to batch and re-batch transactions until they meet the criteria for block inclusion at a minimal fee rate. This strategy raises questions about blockchain scalability, the economic models of transaction fees, and the necessity for second-layer solutions if the blockchain can accommodate all transactions directly on-chain at minimal costs.

Additionally, there is a proposal to adjust Bitcoin Core's minimum relay feerate from 1000 satoshi per kilobyte to 100 satoshi per virtual byte, as evidenced by a pull request on GitHub. This adjustment is motivated by observations of transactions with fees below 1 sat/vB being successfully relayed and mined. The motivation behind these adjustments includes concerns over blocks filled with many sub-1sat/vB transactions experiencing slower propagation due to nodes that had previously rejected or not received information about these transactions. There's an emphasis on maintaining a balanced approach to avoid block relay issues while preventing potential attackers from exploiting low transaction costs to overwhelm the network. The minimum relay feerate acts as a deterrent against denial-of-service attacks by establishing a cost for bandwidth consumption. The concept of incremental relay feerate is introduced, emphasizing its role in ensuring replacement transactions contribute additional fees and in setting dynamic mempool minimum feerates. Furthermore, the discussion reflects on how transaction fees correlate with real-world resources, suggesting that fluctuations in Bitcoin's price could influence determinations of appropriate feerates. This complex dialogue invites further exploration on the utilization of minimum feerates, their ideal determination, and the implications for wallets and applications within the ecosystem, underscoring an ongoing dialogue within the blockchain community about balancing innovation, network stability, and the decentralized ethos of cryptocurrency technologies.</summary>
    <published>2025-08-02T19:24:55.469000+00:00</published>
  </entry>
</feed>
