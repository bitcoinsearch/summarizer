<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Sharing block templates</title>
  <updated>2025-08-27T02:34:23.592902+00:00</updated>
  <author>
    <name>sipa 2025-08-18 00:41:33.343000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Sharing block templates</title>
    <updated>2025-08-27T02:34:23.592934+00:00</updated>
    <link href="https://delvingbitcoin.org/t/sharing-block-templates/1906/9" rel="alternate"/>
    <summary>In the exploration of optimizing bandwidth usage for blockchain transactions, an interesting approach is presented that revolves around the ordering of transactions. It's noted that the sequence in which transactions are listed within a template doesn't significantly impact the system until certain block relay protocols that could leverage pre-established orderings are introduced. This revelation opens the door to potential bandwidth savings by employing a more efficient method of transmitting transaction identifiers.

A technique suggested involves sorting the set of all transaction short identifiers, which are interpreted as 48-bit integers, and then communicating only the differences between these sorted IDs. This method takes advantage of Golomb-Rice coding, similar to the strategy used in BIP158, a Bitcoin Improvement Proposal aimed at creating compact block filters. The mathematics behind this approach indicate a substantial reduction in the amount of data required per element; specifically, it reduces the need from 48 bits to approximately 37.8 bits for each of the 4000 entries typically found in a block. This represents a significant improvement in efficiency and bandwidth utilization.

Furthermore, the idea of applying an edit encoding relative to the previous template is discussed as offering even greater potential for bandwidth savings. However, this concept also benefits from a canonical encoding of transactions, such as using the sorted short IDs mentioned earlier. Importantly, it is highlighted that the transactions don't need to maintain any specific topological order, allowing for this method to be feasibly implemented without compromising the integrity or functionality of the blockchain. The detailed mathematical justification and further explanation of these concepts can be explored through the provided [mathematical breakdown](https://github.com/sipa/writeups/tree/main/minimizing-golomb-filters). This approach not only suggests an innovative way to reduce the bandwidth demands of blockchain transaction processing but also emphasizes the practicality of rethinking traditional methods to achieve greater efficiency.</summary>
    <published>2025-08-18T00:41:33.343000+00:00</published>
  </entry>
</feed>
