<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A simple backup scheme for wallet accounts</title>
  <updated>2025-04-17T02:41:04.652582+00:00</updated>
  <author>
    <name>josh 2025-04-16 15:57:46.287000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A simple backup scheme for wallet accounts</title>
    <updated>2025-04-17T02:41:04.652612+00:00</updated>
    <link href="https://delvingbitcoin.org/t/a-simple-backup-scheme-for-wallet-accounts/1607/3" rel="alternate"/>
    <summary>The discussion highlights a critical area in cryptocurrency security, particularly focusing on the backup schemes for multisig wallets. The initial proposal points towards a simple yet potentially effective scheme relying on SHA256 as a secure Key Derivation Function (KDF). This method, however, raises concerns about privacy and security if an encrypted descriptor is stored publicly or on a server that might be compromised. The risk here is that gaining access to a single secret could reveal the presence of a multisig setup to an attacker, which is not desirable especially for users who wish to maintain a decoy single-sig wallet for additional protection.

In response, an alternative scheme was introduced that addresses this vulnerability by implementing a strategic change in how secrets are handled within a $k$-of-$n$ multisig descriptor setup. By leveraging shamir secret sharing, the secret $s$ is divided into $n$ shares, with $k$ shares being necessary to reconstruct the original secret. This method enhances security by encrypting each share with one xpub, requiring $k$ xpubs for decryption, thereby obfuscating the number of participants in the multisig from potential attackers. Another distinctive aspect of this approach is the decision to keep derivation paths in plaintext. This allows users to easily derive their xpubs while ensuring that only the critical information, such as the xpubs and master fingerprints, are encrypted for safety.

This innovative scheme has been documented and shared for public access and collaboration. The resources include a [GitHub repository](https://github.com/joshdoman/multisig-backup) where the tool and its code are available, alongside a detailed post on [Delving Bitcoin](https://delvingbitcoin.org/t/multisigbackup-com-backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds/1430/4) discussing the operational intricacies and benefits of the backup scheme. Additionally, presentation slides from BitDevs ATL offer further insights into the project's scope and future directions, including aspirations to extend support to more advanced multisig configurations such as decaying and non-decaying P2TR multisigs. These resources provide valuable knowledge for both developers interested in enhancing multisig security and users seeking to safeguard their cryptocurrency assets effectively.</summary>
    <published>2025-04-16T15:57:46.287000+00:00</published>
  </entry>
</feed>
