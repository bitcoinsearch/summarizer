<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A simple backup scheme for wallet accounts</title>
  <updated>2025-04-17T02:41:26.651288+00:00</updated>
  <author>
    <name>salvatoshi 2025-04-16 17:47:43.736000+00:00</name>
  </author>
  <author>
    <name>salvatoshi 2025-04-16 17:28:51.370000+00:00</name>
  </author>
  <author>
    <name>salvatoshi 2025-04-16 17:27:45.999000+00:00</name>
  </author>
  <author>
    <name>1440000bytes 2025-04-16 16:00:46.661000+00:00</name>
  </author>
  <author>
    <name>josh 2025-04-16 15:57:46.287000+00:00</name>
  </author>
  <author>
    <name>reardencode 2025-04-16 13:52:53.883000+00:00</name>
  </author>
  <link href="delvingbitcoin/April_2025/4811_A-simple-backup-scheme-for-wallet-accounts.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4810_A-simple-backup-scheme-for-wallet-accounts.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4802_A-simple-backup-scheme-for-wallet-accounts.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4809_A-simple-backup-scheme-for-wallet-accounts.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4808_A-simple-backup-scheme-for-wallet-accounts.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4805_A-simple-backup-scheme-for-wallet-accounts.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A simple backup scheme for wallet accounts</title>
    <updated>2025-04-17T02:41:26.651347+00:00</updated>
    <link href="https://delvingbitcoin.org/t/a-simple-backup-scheme-for-wallet-accounts/1607/2" rel="alternate"/>
    <summary>The discussion centers on the intricacies of backup schemes for cryptocurrency wallets, particularly focusing on multisig (multiple signature) wallets. The main concern is how to securely back up wallet descriptors without compromising the privacy or security of the wallet itself. A wallet descriptor provides information on how to derive public keys from the master seed, crucial for transaction signing in a multisig setup. The challenge lies in securing these descriptors from unauthorized access while ensuring they are recoverable by the wallet owner or authorized parties.

One proposed solution involves using Shamir's Secret Sharing to split a secret into multiple shares, with each share encrypted using an extended public key (xpub). This method requires a certain number of shares (k out of n) to decrypt the secret, aligning with the multisig requirement where multiple signatures are needed for transactions. This approach adds a layer of security by encrypting sensitive data like xpubs and master fingerprints, leaving only derivation paths in plaintext to aid users in deriving their xpubs.

Another aspect of the conversation touches upon the encryption scheme for wallet backups. It suggests a deterministic encryption method that combines the benefits of symmetric and asymmetric encryption techniques, optimizing for both security and practicality. By encrypting the payload with a symmetric secret generated from the public keys involved in the wallet, this method aims to provide a secure yet easy-to-implement solution for digital backups. This includes considerations for accessibility by authorized parties, determinism in backup outcomes, and vendor independence to support a wide array of hardware signing devices.

Security concerns are highlighted, distinguishing between the concepts of secrecy versus privacy in the context of seeds and descriptors. While seeds (which allow fund spending) must be kept secret due to their high value to attackers, descriptors (that only allow fund observation) are considered private. The risk associated with replicating seeds is emphasized as significantly higher than that of distributing descriptors, which can have multiple copies without substantially increasing the risk of fund loss.

Collaboration and standardization efforts are suggested to address these challenges, with references to existing works and tools developed by participants in the discussion. This includes links to GitHub repositories and external posts detailing specific backup schemes [GitHub repo](https://github.com/joshdoman/multisig-backup) and a [Delving post](https://delvingbitcoin.org/t/multisigbackup-com-backup-and-recover-a-k-of-n-descriptor-using-only-n-seeds/1430/4), showcasing the community's effort towards more secure and user-friendly wallet backup solutions.</summary>
    <published>2025-04-16T17:47:43.736000+00:00</published>
  </entry>
</feed>
