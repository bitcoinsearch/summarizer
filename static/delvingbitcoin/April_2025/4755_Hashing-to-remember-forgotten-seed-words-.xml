<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Hashing to remember forgotten seed words?</title>
  <updated>2025-04-14T02:42:14.232225+00:00</updated>
  <author>
    <name>zawy 2025-04-13 10:31:56.367000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Hashing to remember forgotten seed words?</title>
    <updated>2025-04-14T02:42:14.232265+00:00</updated>
    <link href="https://delvingbitcoin.org/t/hashing-to-remember-forgotten-seed-words/1597" rel="alternate"/>
    <summary>The inquiry revolves around a unique method of safeguarding cryptocurrency seed words by utilizing mining techniques to reduce the number of seed words one needs to remember. This approach involves splitting a nonce into two parts: the first half containing the 12 seed words (equating to 132 bits of information) and the second half comprising a random seed (124 bits). This random seed is made highly public to ensure it cannot be forgotten, operating under the principle that widespread knowledge equals personal remembrance.

The technical strategy outlined suggests setting the mining difficulty to match the entropy of the seed words potentially forgotten. For example, to allow for the forgetting of 6 seed words, one would need to execute 2^66 hash computations. The feasibility of this task is exemplified by estimating that a 100 TH/s miner could complete it within 8 days at an approximate expense of $50. The proposed target hash value for this operation is calculated as (2^256-1)/2^66.

The security premise behind this method rests on the significant disparity in effort between the legitimate user and a potential attacker. While the user knows half of the nonce (the 12 seed words), an attacker starting from scratch faces a vastly larger search space of 2^132. Consequently, for the attacker, each incorrect guess out of the possible 2^65 carries a cost of $50, theoretically imposing a prohibitive financial barrier to unauthorized access.

This concept hinges on the assumption that an attacker cannot hash more than ten times as efficiently as a standard home setup, aiming to leverage computational work as a defensive mechanism against unauthorized seed word discovery.</summary>
    <published>2025-04-13T10:31:56.367000+00:00</published>
  </entry>
</feed>
