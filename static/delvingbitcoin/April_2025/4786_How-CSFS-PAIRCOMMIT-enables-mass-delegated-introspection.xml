<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>How CSFS+PAIRCOMMIT enables mass delegated introspection</title>
  <updated>2025-04-16T02:45:37.105701+00:00</updated>
  <author>
    <name>redundant 2025-04-15 12:36:22.185000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>How CSFS+PAIRCOMMIT enables mass delegated introspection</title>
    <updated>2025-04-16T02:45:37.105731+00:00</updated>
    <link href="https://delvingbitcoin.org/t/how-csfs-paircommit-enables-mass-delegated-introspection/1599/2" rel="alternate"/>
    <summary>The email discusses the challenges and possibilities involved in utilizing a merkle root with varying sighashes within the scriptPubKey, highlighting a fundamental circular dependency issue. This arises from the necessity of having the inputs to compute the sighash, which in turn depend on the finalized scriptPubKey. The sender speculates that elements from the witness stack might offer some solutions, suggesting an exploration into innovative applications using MuSig2 and presigned transactions. Furthermore, the potential integration of the 'Schnorr trick' with MuSig2 keys is pointed out as a promising avenue for achieving noteworthy outcomes. The sender also expresses an intention to revisit a previous post regarding a bidding problem, indicating it might provide insights or relate to the current discussion on cryptographic techniques and their application in securing digital transactions.</summary>
    <published>2025-04-15T12:36:22.185000+00:00</published>
  </entry>
</feed>
