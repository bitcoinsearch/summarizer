<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Avoiding xpub+derivation reuse across wallets, in a UX-friendly manner</title>
  <updated>2025-04-30T02:44:23.098717+00:00</updated>
  <author>
    <name>kloaec 2025-04-29 17:58:30.063000+00:00</name>
  </author>
  <author>
    <name>kloaec 2025-04-29 17:54:43.553000+00:00</name>
  </author>
  <link href="delvingbitcoin/April_2025/4897_Avoiding-xpub-derivation-reuse-across-wallets-in-a-UX-friendly-manner.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4896_Avoiding-xpub-derivation-reuse-across-wallets-in-a-UX-friendly-manner.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Avoiding xpub+derivation reuse across wallets, in a UX-friendly manner</title>
    <updated>2025-04-30T02:44:23.098755+00:00</updated>
    <link href="https://delvingbitcoin.org/t/avoiding-xpub-derivation-reuse-across-wallets-in-a-ux-friendly-manner/1644" rel="alternate"/>
    <summary>In the realm of cryptocurrency security, the concept of air-gapped wallets introduces a nuanced discussion on the management of extended public keys (xpubs) and derivation paths, particularly when considering the reuse of signing devices across multiple wallets. The core issue revolves around maintaining privacy and security without complicating the user experience. As developers explore solutions to this issue within projects like Liana, there's a push towards developing standards or methods that mitigate the risk of key reuse while supporting seamless wallet transitions and rotations.

The underlying concern is that reusing xpubs and derivation paths across different wallets can compromise privacy. This is especially pertinent when users employ the same hardware for various purposes, such as multisig setups or timelocked wallets, without changing the underlying keys. Traditional approaches to address this involve prompting users to select account numbers or relying on software to track the last account used, both of which have significant drawbacks in terms of usability and privacy.

To enhance user experience and privacy, the proposal includes exploring alternatives to standard BIP derivation paths through innovative use of output descriptors. These descriptors offer a more dynamic way to manage keys by potentially randomizing paths or utilizing deterministic paths based on factors like UNIX time. Such methods promise to ensure that even if the same hardware device is reused across different software wallets, the generated xpubs will be distinct, thus avoiding privacy risks associated with key reuse.

Three main ideas are proposed to avoid xpub reuse: employing a randomized path, creating a deterministic path using a timestamp, or maintaining a stateful approach where each xpub request increments a counter. Each of these options has its benefits and challenges, from simplicity and robustness against rapid xpub generation to potential issues with hardware compatibility and privacy concerns linked to state synchronization over servers.

Furthermore, the transition away from traditional single-signature wallets poses its own set of challenges, as many users are accustomed to the simplicity of mnemonic-based key recovery. The shift towards more sophisticated methods, like those involving output descriptors, necessitates a balance between enhancing privacy and maintaining ease of use.

In addressing these challenges, other considerations include ensuring cross-vendor compatibility and avoiding reliance on external synchronization for state management. The objective is to foster an ecosystem where wallets can seamlessly generate unique xpubs without imposing undue burdens on the user, thereby preserving privacy and security across diverse wallet applications.</summary>
    <published>2025-04-29T17:58:30.063000+00:00</published>
  </entry>
</feed>
