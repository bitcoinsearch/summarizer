<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - How CTV+CSFS improves BitVM bridges</title>
  <updated>2025-04-12T02:27:24.550890+00:00</updated>
  <author>
    <name>RobinLinus 2025-04-11 17:37:20.466000+00:00</name>
  </author>
  <author>
    <name>ekrembal  . 2025-04-10 16:09:12.124000+00:00</name>
  </author>
  <author>
    <name>Cyimon  . 2025-04-10 14:28:23.711000+00:00</name>
  </author>
  <link href="delvingbitcoin/April_2025/4749_How-CTV-CSFS-improves-BitVM-bridges.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4747_How-CTV-CSFS-improves-BitVM-bridges.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4746_How-CTV-CSFS-improves-BitVM-bridges.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - How CTV+CSFS improves BitVM bridges</title>
    <updated>2025-04-12T02:27:24.550952+00:00</updated>
    <link href="https://delvingbitcoin.org/t/how-ctv-csfs-improves-bitvm-bridges/1591/4" rel="alternate"/>
    <summary>The correction to an earlier point clarifies the correct usage of sighash types for presigning a signature, specifically stating that `ANYONECANPAY|NONE` should be used instead of `SINGLE|NONE`. This revision is crucial for accurately understanding the technical mechanisms involved.

The system discussed aims to enhance collateral utilization by operators through a detailed transaction graph mechanism. Operators are required to provide signatures at the deposit phase, which correspond to specific directives illustrated by red arrows in a diagram. The progression towards issuing a "ready-to-reimburse transaction" is contingent upon each kickoff event reaching a state of finalization. This finalization can occur via two distinct routes: a "challenge timeout transaction" or a "disprove timeout transaction." An advantage of this system is its ability to manage multiple kickoff events simultaneously, allowing for the processing of numerous withdrawals at once with a single source of collateral. However, this efficiency comes with a caveat; any successful disproof of a kickoff attempt immediately ceases all reimbursement processes.

The system's implementation faces significant challenges that hinder its optimization. One major challenge is the requirement for a Bitcoin light client, which is necessary for verifying the inclusion of payout transactions and the current state of the sidesystem. Although efforts are underway to develop this component, it introduces trust-minimized assumptions critical for the system's safety. Moreover, the need to publish all operators' signatures for data availability presents another challenge. Given the Bitcoin network's limited block space, this requirement underscores the need for alternative solutions to ensure the system operates efficiently and securely, suggesting areas where further development and innovation are needed.</summary>
    <published>2025-04-11T17:37:20.466000+00:00</published>
  </entry>
</feed>
