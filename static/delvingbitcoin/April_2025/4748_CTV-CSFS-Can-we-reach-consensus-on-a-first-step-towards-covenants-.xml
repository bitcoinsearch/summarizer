<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CTV+CSFS: Can we reach consensus on a first step towards covenants?</title>
  <updated>2025-04-12T02:26:21.208146+00:00</updated>
  <author>
    <name>instagibbs 2025-04-11 14:08:36.566000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CTV+CSFS: Can we reach consensus on a first step towards covenants?</title>
    <updated>2025-04-12T02:26:21.208182+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ctv-csfs-can-we-reach-consensus-on-a-first-step-towards-covenants/1509/58" rel="alternate"/>
    <summary>The recent modifications to the Bitcoin codebase, as discussed, introduce a more efficient and streamlined approach towards implementing CheckTemplateVerify (CTV) within the ecosystem. A minimal set of changes has been made, ensuring that CTV is now fully integrated as a first-class citizen in the context of the Bitcoin scripting language. This integration has been achieved without altering the existing hash digest formula for BIP119, thereby preserving the integrity of previous unit tests and ensuring backward compatibility. The adjustments have also been designed to enhance the cost-effectiveness of using CTV, particularly when applied alongside CSFS within any floating signature scheme. For those interested in reviewing the specific alterations made to the code, they can be found in the commit hosted on GitHub, accessible via this [link](https://github.com/instagibbs/bitcoin/commit/9b5ae77d97222efc2328c1916f790c7f67cf10b3).

Furthermore, an alternative approach was explored where the implementation of bare CTV would precisely follow the current format. However, this method would only necessitate a soft fork for the OP_NOP template, thereby limiting the extent of soft forking behavior required. This was aimed at simplifying the soft fork process by focusing solely on the bare CTV case, excluding additional bare scripts from consideration. Despite the potential benefits, this alternative was ultimately deemed too complicated and not pursued further. The primary focus remained on ensuring a seamless integration of CTV into the Bitcoin protocol, emphasizing simplicity, efficiency, and minimal disruption to the existing framework.</summary>
    <published>2025-04-11T14:08:36.566000+00:00</published>
  </entry>
</feed>
