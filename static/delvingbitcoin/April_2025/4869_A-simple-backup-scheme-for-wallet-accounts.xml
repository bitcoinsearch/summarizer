<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A simple backup scheme for wallet accounts</title>
  <updated>2025-04-25T02:42:55.449733+00:00</updated>
  <author>
    <name>salvatoshi 2025-04-24 08:31:45.420000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A simple backup scheme for wallet accounts</title>
    <updated>2025-04-25T02:42:55.449758+00:00</updated>
    <link href="https://delvingbitcoin.org/t/a-simple-backup-scheme-for-wallet-accounts/1607/8" rel="alternate"/>
    <summary>The discussion revolves around enhancing security and access control in cryptographic systems through the selective generation of component keys, referred to as *c*i. This approach allows for a more controlled access to encrypted backups by requiring all devices involved in the setup to provide their secondary key. This method contrasts with simpler schemes where an encrypted backup can be created by any participant without such restrictions. The primary advantage highlighted is the reduction of potential search paths for recovery, thereby increasing security. However, concerns are raised regarding the practicality of this approach. It introduces significant dependencies, such as the need for the backup scheme to access the hardware signers, which can be complex and requires the physical device to be present at the time of backup creation. This limitation makes it impossible for certain types of wallets, like watch-only wallets that only receive a descriptor, to participate in creating the encrypted backup.

Furthermore, there's a consideration for implementing an error correction mechanism to ensure the reliability of backup files, especially since these backups might not be replicated extensively. The suggestion is made in the context of disaster recovery or inheritance, where a single, easily accessible copy of the backup is crucial. Despite the initial hesitation towards sending such data to the blockchain, various alternatives for creating multiple copies of the backup are proposed. These include saving to cloud storage services like Google Drive, sending via email or direct messages, or posting on social media platforms and decentralized networks like Nostr. Additionally, the possibility of collaborative custody services or self-custody service providers storing encrypted backups for customers is mentioned. This could significantly enhance user experience by making backup processes transparent and minimizing additional user actions required for backup security.</summary>
    <published>2025-04-24T08:31:45.420000+00:00</published>
  </entry>
</feed>
