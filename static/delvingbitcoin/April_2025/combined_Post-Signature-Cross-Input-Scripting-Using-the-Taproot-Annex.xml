<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Post-Signature Cross-Input Scripting Using the Taproot Annex</title>
  <updated>2025-04-03T02:28:08.014471+00:00</updated>
  <author>
    <name>harding 2025-04-02 08:05:02.199000+00:00</name>
  </author>
  <author>
    <name>josh  . 2025-03-13 23:03:37.796000+00:00</name>
  </author>
  <link href="delvingbitcoin/April_2025/4677_Post-Signature-Cross-Input-Scripting-Using-the-Taproot-Annex.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4524_Post-Signature-Cross-Input-Scripting-Using-the-Taproot-Annex.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Post-Signature Cross-Input Scripting Using the Taproot Annex</title>
    <updated>2025-04-03T02:28:08.014509+00:00</updated>
    <link href="https://delvingbitcoin.org/t/post-signature-cross-input-scripting-using-the-taproot-annex/1520" rel="alternate"/>
    <summary>The discussion at hand introduces a novel concept aimed at enhancing Bitcoin's scripting capabilities through the inclusion of cross-input scripting. This innovation allows users to embed additional spending criteria into transactions after they have been signed. Such criteria could include, but are not limited to, timelocks, signatures from other participants, or specific conditions defined by CTV templates. The foundational mechanism for this advanced functionality leverages the taproot annex. This component is proposed to host optional script commitments, referred to as subscripts, which can be evaluated post-signature. These subscripts are designed to introduce a range of programmable features like delegated signatures, conditional timelocks post-signature, and the templating of transactions which could pave the way for sophisticated future covenants.

The detailed structure proposed for subscripts emphasizes a protocol tag and TLV (Type-Length-Value) encoding. This approach is intended to clearly distinguish among different types of subscripts: those intended for public use, those meant for redemption, and those that contain uninterpreted data. A crucial aspect of this proposal is that the evaluation of these subscripts would only proceed if the transaction's regular script execution concludes successfully. This design choice is pivotal for ensuring that the new functionalities do not disrupt the backward compatibility with the existing Bitcoin script system. 

The proposition also contemplates a soft fork in the Bitcoin network to integrate this feature effectively. The author openly seeks community feedback on multiple dimensions: the perceived value of this added functionality, the community's willingness to amend consensus rules to include meanings within the taproot annex, potential security concerns, and suggestions for improving the structural design of the proposed system. This request for commentary highlights the proposal's nascent stage and underlines the significance of community engagement in refining and potentially realizing this innovative scripting capability in Bitcoin.</summary>
    <published>2025-04-02T08:05:02.199000+00:00</published>
  </entry>
</feed>
