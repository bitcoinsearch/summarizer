<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Stats on compact block reconstructions</title>
  <updated>2025-04-09T02:37:12.785345+00:00</updated>
  <author>
    <name>andrewtoth 2025-04-08 16:43:45.487000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Stats on compact block reconstructions</title>
    <updated>2025-04-09T02:37:12.785377+00:00</updated>
    <link href="https://delvingbitcoin.org/t/stats-on-compact-block-reconstructions/1052/27" rel="alternate"/>
    <summary>In the intricacies of blockchain transactions, particularly concerning Bitcoin's mempool mechanics, the concept of an "extra pool" emerges as a notable aspect. This extra pool is essentially a limited storage area, accommodating merely 100 transactions by default. Its main purpose is to contain transactions that are not immediately relayed across the network, distinguishing itself from the primary mempool where transactions await confirmation by miners.

One key feature of this system is the handling of transactions replaced via the Replace-By-Fee (RBF) protocol. When a transaction is superseded by another with a higher fee, the original transaction is relegated to the extra pool, while the new, replacing transaction continues to be broadcasted normally. This ensures that even though some transactions are put aside in the extra pool, there remains a pathway for updated transactions to be propagated and potentially confirmed by miners.

However, the utility of the extra pool faces challenges due to its reliance on the interconnectedness of peers within the network. Since each peer maintains its own version of the extra pool, differences arise based on the transactions each peer receives and rejects. For instance, if one node receives numerous unwanted transactions from a specific peer, those transactions populate its extra pool, creating a divergence in the contents of extra pools across the network. This variability raises questions about the likelihood of transactions in the extra pool being included in a block by miners, considering these transactions are not actively relayed further than their initial reception.

Moreover, a suggestion to optimize the system involves reevaluating the necessity of placing orphan transactions—those missing a parent transaction in the chain—into the extra pool. Given that the process already includes searching for such orphans, it might be more efficient to exclude them from the extra pool altogether. This adjustment could streamline the operation of the extra pool, focusing its capacity on handling RBF transactions more effectively.</summary>
    <published>2025-04-08T16:43:45.487000+00:00</published>
  </entry>
</feed>
