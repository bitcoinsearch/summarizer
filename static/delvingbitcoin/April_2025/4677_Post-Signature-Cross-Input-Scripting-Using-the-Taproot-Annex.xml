<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Post-Signature Cross-Input Scripting Using the Taproot Annex</title>
  <updated>2025-04-03T02:27:55.260734+00:00</updated>
  <author>
    <name>harding 2025-04-02 08:05:02.199000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Post-Signature Cross-Input Scripting Using the Taproot Annex</title>
    <updated>2025-04-03T02:27:55.260771+00:00</updated>
    <link href="https://delvingbitcoin.org/t/post-signature-cross-input-scripting-using-the-taproot-annex/1520/2" rel="alternate"/>
    <summary>The post in question delves into two distinct proposals concerning cryptocurrency script operations. The first proposal discusses the idea of a signer who not only meets the existing script conditions but also introduces new conditions that future signers must satisfy. This concept aligns with features observed in delegation mechanisms such as OP_CSFS, graftroot/g'root, and BitVM-style Script-based Lamport signatures. The discussion suggests that incorporating additional script operations directly into the annex rather than the regular witness stack may not offer distinct advantages.

In contrast, the second proposal focuses on the introduction of additional introspection opcodes, which represent a more debated area. The unique aspect of this proposal seems to be the restriction of certain types of introspection solely to the phase of delegation, as opposed to during the original creation of the script. This nuance raises questions about the practical applications and benefits of such a limitation, especially without clear examples demonstrating its utility. The mention of an example regarding the permanent encumbrance of resulting outputs lacks clarity, thereby complicating the understanding of how these proposed introspection modifications could be beneficial or implemented effectively. 

Overall, the post attempts to navigate through complex ideas related to enhancing script capabilities within cryptocurrency transactions, yet it calls for further clarification and concrete examples to fully grasp the potential implications and advantages of the proposed changes.</summary>
    <published>2025-04-02T08:05:02.199000+00:00</published>
  </entry>
</feed>
