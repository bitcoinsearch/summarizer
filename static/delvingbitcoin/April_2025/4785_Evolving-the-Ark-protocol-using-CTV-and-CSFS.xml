<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Evolving the Ark protocol using CTV and CSFS</title>
  <updated>2025-04-16T02:46:47.744575+00:00</updated>
  <author>
    <name>stevenroose 2025-04-15 11:54:40.401000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Evolving the Ark protocol using CTV and CSFS</title>
    <updated>2025-04-16T02:46:47.744606+00:00</updated>
    <link href="https://delvingbitcoin.org/t/evolving-the-ark-protocol-using-ctv-and-csfs/1602" rel="alternate"/>
    <summary>The recent presentation at OP_NEXT introduced an innovative variation of the Ark protocol, named Erk, alongside another variant called hArk, both of which aim to streamline and improve the process by utilizing Bitcoin's `OP_CHECKTEMPLATEVERIFY` (CTV) and `OP_CHECKSIGFROMSTACK` (CSFS). These enhancements are designed to reduce or eliminate the need for user interaction during rounds, a significant step forward in making these protocols more user-friendly and efficient.

Erk eliminates the necessity for user interactivity in transaction rounds, allowing for offline refreshes by the server on behalf of the user. This can be done perpetually, meaning the server has the capability to keep refreshing for a user indefinitely. The Erk model is optimized for transactions with a single input and output but requires both CTV and CSFS to function. On the other hand, hArk also removes the need for user interaction during rounds and is highly efficient for transactions involving multiple inputs. However, unlike Erk, hArk does not support offline refreshes and only necessitates CTV for its operation.

Both Erk and hArk build upon the basic principles of the Ark protocol, which facilitates sharing an onchain UTXO among users through a transaction tree. This setup allows for unilateral exits by users to claim their funds, provided they have the necessary transaction and witness data. The protocol incorporates mechanisms for refreshing vtxos to extend their expiry times, with the ultimate goal of ensuring that funds can be swept by the Ark server after certain conditions are met.

The introduction of "arkoor txs" represents a crucial innovation within these protocols, enabling one user to transfer their vtxo to another off-chain, thus creating a new vtxo for the recipient. This process relies on specific output policies tailored to different stages of the transaction tree, ensuring the continuity of the protocol's operation and the safeguarding of user funds.

Further elaboration on Erk reveals its reliance on rebindable signatures, allowing for a more flexible transaction process by not committing to input UTXOs. This enables a novel approach where users pre-sign refund transactions, giving the server the ability to refresh vtxos without direct user involvement. Such a mechanism significantly enhances the protocol's efficiency, particularly for scenarios where continuous online presence of the user is challenging.

hArk distinguishes itself by incorporating a secret-sharing aspect into the refresh process, requiring a secret known only to the server for accessing refreshed vtxos. This method ensures that refreshed vtxos remain secure until the completion of a round, at which point the necessary secrets are disclosed to users. This variant offers an additional layer of security and operational efficiency, especially in complex multi-input transactions.

In conclusion, the advancements presented in Erk and hArk contribute significantly to the Ark protocol's development, offering solutions that enhance user experience, reduce the necessity for active participation, and ensure the secure and efficient management of vtxos. The incorporation of CTV and CSFS technologies into these variants opens new avenues for protocol design in cryptocurrency systems, promising greater flexibility and functionality for users and servers alike.</summary>
    <published>2025-04-15T11:54:40.401000+00:00</published>
  </entry>
</feed>
