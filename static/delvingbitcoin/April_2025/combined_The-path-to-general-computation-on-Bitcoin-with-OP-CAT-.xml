<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - The path to general computation on Bitcoin (with OP_CAT)</title>
  <updated>2025-04-16T02:43:45.708554+00:00</updated>
  <author>
    <name>moonsettler 2025-04-15 08:55:58.168000+00:00</name>
  </author>
  <author>
    <name>Lazmv  . 2025-04-06 08:26:53.575000+00:00</name>
  </author>
  <author>
    <name>victorkstarkware  . 2024-08-29 11:21:23.206000+00:00</name>
  </author>
  <link href="delvingbitcoin/April_2025/4784_The-path-to-general-computation-on-Bitcoin-with-OP-CAT-.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4714_The-path-to-general-computation-on-Bitcoin-with-OP-CAT-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3081_The-path-to-general-computation-on-Bitcoin-with-OP-CAT-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - The path to general computation on Bitcoin (with OP_CAT)</title>
    <updated>2025-04-16T02:43:45.708601+00:00</updated>
    <link href="https://delvingbitcoin.org/t/the-path-to-general-computation-on-bitcoin-with-op-cat/1106" rel="alternate"/>
    <summary>The discussion revolves around the potential and challenges of expanding Bitcoin's capabilities through advanced scripting and computation, specifically focusing on the concepts of covenants and STARK proofs. The introduction of OP_CAT, a simple yet disabled opcode in Bitcoin's scripting language, plays a pivotal role in this expansion. This opcode enables the concatenation of elements on the stack, which is essential for implementing both covenants and STARK proofs on Bitcoin. Covenants, as highlighted by Andrew Poelstra and Robin Linus, can significantly enhance Bitcoin's utility by enforcing specific conditions on transactions, thereby allowing for more complex contract-like functionalities within the Bitcoin network.

STARK proofs represent another frontier in Bitcoin's evolution, offering a methodology for verifying off-chain computations on-chain with increased scalability and security. This is particularly noteworthy in the context of Bitcoin, where the script's inherent limitations have traditionally restricted its computational capabilities. The ability to perform such operations could lead to significant advancements in how Bitcoin handles complex applications, ranging from financial instruments to decentralized applications that require elements of statefulness and more sophisticated logic than previously possible.

The critique presented in the email underscores a few critical areas needing clarification and improvement in the original post's discussion on these topics. It calls into question the necessity and implementation specifics of covenants versus smart contracts in Bitcoin, suggesting a need for a more precise definition and understanding of these terms within the blockchain's context. Additionally, the critique points out the lack of detailed exploration into how Bitcoin's script system could evolve to directly store state information or integrate covenant trackers, which would be crucial for realizing the full potential of stateful contracts on the platform.

Furthermore, the email addresses the technical aspects and practical implications of introducing OP_CAT for concatenation purposes, challenging its absolute necessity by proposing alternative methods like using Pay2WitnessScriptHash (P2WSH) for state storage. Questions regarding the Schnorr trick, address tweaking, and state tracking at the node level are also raised, signaling a need for deeper technical elucidation and justification of the proposed methodologies.

A specific implementation of a Circle-STARK verifier is provided as an example of practical application, showcasing a working demonstration of STARK proof verification related to Fibonacci numbers on Bitcoin's signet. This serves not only as a proof of concept but also highlights the ongoing efforts and developments within the community towards achieving general computation on Bitcoin.

In conclusion, the conversation encapsulates the ongoing dialogue within the Bitcoin development community regarding the expansion of the blockchain's computational and functional capabilities. By addressing the highlighted critiques and questions, there is an opportunity to refine and advance the discourse surrounding Bitcoin's scripting potential, covenant implementation, and the integration of advanced cryptographic proofs like STARKs into the ecosystem. These developments promise to broaden Bitcoin's application horizon, potentially transforming it into a more versatile platform for decentralized applications and beyond.</summary>
    <published>2025-04-15T08:55:58.168000+00:00</published>
  </entry>
</feed>
