<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Evolving the Ark protocol using CTV and CSFS</title>
  <updated>2025-04-16T02:47:07.250965+00:00</updated>
  <author>
    <name>roasbeef 2025-04-15 23:26:53.820000+00:00</name>
  </author>
  <author>
    <name>instagibbs 2025-04-15 14:46:45.805000+00:00</name>
  </author>
  <author>
    <name>stevenroose 2025-04-15 11:54:40.401000+00:00</name>
  </author>
  <link href="delvingbitcoin/April_2025/4795_Evolving-the-Ark-protocol-using-CTV-and-CSFS.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4788_Evolving-the-Ark-protocol-using-CTV-and-CSFS.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4785_Evolving-the-Ark-protocol-using-CTV-and-CSFS.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Evolving the Ark protocol using CTV and CSFS</title>
    <updated>2025-04-16T02:47:07.251010+00:00</updated>
    <link href="https://delvingbitcoin.org/t/evolving-the-ark-protocol-using-ctv-and-csfs/1602" rel="alternate"/>
    <summary>The discussion revolves around the development and enhancement of Ark, a protocol designed to enable off-chain cryptocurrency transactions with notable features such as non-interactive rounds and offline refresh capabilities. Ark uses a transaction tree structure that allows users to share an onchain UTXO (Unspent Transaction Output), facilitating unilateral exits by broadcasting specific branches of this tree to claim funds. This setup ensures that only the funding transaction is confirmed on-chain in the typical scenario, enhancing efficiency and privacy.

Two significant improvements to the Ark protocol are introduced: Erk and hArk. Erk eliminates the need for user interaction during rounds, allowing for both immediate and perpetual offline refreshes by the server. It relies on CTV (Check Template Verify) and CSFS (CheckSigFromStack) to implement rebindable signatures, which do not commit to the input UTXOs, thus enabling their use across different outputs containing the same public key. This feature simplifies the refresh process, making it safer and more convenient for users by reducing the necessity for active participation.

hArk, on the other hand, is designed to efficiently handle multiple inputs without requiring user interaction for each round. It distinguishes itself by utilizing a secret known only to the server during the creation of new vtxos, ensuring that users can access their refreshed vtxos only after the server reveals the secret. This mechanism adds an extra layer of security and control for the server while maintaining simplicity and minimalism in the protocol's execution.

Both Erk and hArk represent advancements in designing protocols that prioritize user convenience, security, and reduced necessity for active participation. By allowing for asynchronous sign-ups and processing by the server, these protocols offer a more streamlined and user-friendly approach to managing cryptocurrency transactions off-chain. The incorporation of technologies like CTV and CSFS further enhances the flexibility and safety of these transactions, promising significant improvements to the user experience and the overall viability of the Ark protocol, especially in mobile settings.</summary>
    <published>2025-04-15T23:26:53.820000+00:00</published>
  </entry>
</feed>
