<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Evolving the Ark protocol using CTV and CSFS</title>
  <updated>2025-04-16T02:46:16.836102+00:00</updated>
  <author>
    <name>roasbeef 2025-04-15 23:26:53.820000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Evolving the Ark protocol using CTV and CSFS</title>
    <updated>2025-04-16T02:46:16.836134+00:00</updated>
    <link href="https://delvingbitcoin.org/t/evolving-the-ark-protocol-using-ctv-and-csfs/1602/3" rel="alternate"/>
    <summary>The email discusses the intricacies and potential issues surrounding the implementation of rebindable signatures within the Ark design, specifically using CTV+CSFS. It raises concerns regarding the security and practicality of message signing processes, highlighting the risk of replay attacks if messages are not constructed with care. The necessity for user interaction during transactions is questioned, outlining the steps required for users to complete a transaction, such as obtaining new public keys, acquiring updated VTXO+connector trees, and securing a signature on the new VTXO from the receiver. There's speculation about whether these processes rely too heavily on a trusted server to manage information transmission or if they operate under the assumption that the statechains' security model suffices for all transactions.

Further examination is given to the technical challenges of implementing CTV, particularly in relation to constructing rounds and the "root" CTV hash's unknown status until all participants have provided their parameters. This leads to a discussion on the necessity for users to remain online throughout this process to ensure their ability to exit by signing their leaf. Questions are raised about the feasibility of signing for a new exit transaction when its existence and details depend on yet-to-be-determined participant contributions.

The conversation also delves into the specifics of NO_INPUT/APO capabilities, contrasting them with the proposed model by noting the absence of a dependency on the outpoint, which allows for more flexibility in the signing process. Concerns are presented regarding how users can pre-sign exit transactions without definitive knowledge of the deducted fees or the details of new transactions, especially in scenarios where `SIGHASH_ALL` is assumed, further complicating the refund transaction process due to uncertainties about the new second input. These points underscore the complexities and potential logistical hurdles involved in the proposed use of CTV+CSFS within the context of statechain security models and transaction protocols.</summary>
    <published>2025-04-15T23:26:53.820000+00:00</published>
  </entry>
</feed>
