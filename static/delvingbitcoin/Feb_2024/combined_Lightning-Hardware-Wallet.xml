<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning Hardware Wallet</title>
  <updated>2024-02-16T01:56:32.148717+00:00</updated>
  <author>
    <name>salvatoshi 2024-02-15 13:36:35.650000+00:00</name>
  </author>
  <author>
    <name>edouard 2024-02-15 11:23:59.626000+00:00</name>
  </author>
  <author>
    <name>tbast  . 2024-02-14 14:57:01.333000+00:00</name>
  </author>
  <author>
    <name>pgrange  . 2024-02-14 09:23:43.182000+00:00</name>
  </author>
  <author>
    <name>tbast  . 2024-02-13 12:49:23.227000+00:00</name>
  </author>
  <author>
    <name>pgrange  . 2024-02-13 10:50:39.817000+00:00</name>
  </author>
  <link href="delvingbitcoin/Feb_2024/1581_Lightning-Hardware-Wallet.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1579_Lightning-Hardware-Wallet.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1566_Lightning-Hardware-Wallet.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1561_Lightning-Hardware-Wallet.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1530_Lightning-Hardware-Wallet.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1529_Lightning-Hardware-Wallet.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning Hardware Wallet</title>
    <updated>2024-02-16T01:56:32.148777+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lightning-hardware-wallet/555" rel="alternate"/>
    <summary>The Vanadium project, currently in its prototypal and experimental stages, aims to significantly simplify embedded programming by abstracting the complexities and platform-specific quirks of different embedded toolchains and hardware. Targeting a developer-ready stage by Q4, it promises to ease the development process for applications, including low-volume lightning nodes and personal security HSM (Hardware Security Module) solutions. Despite its potential, scaling high-volume routing lightning nodes remains challenging due to hardware limitations rather than those of the virtual machine (VM). The project was showcased at Baltic Honeybadger 2023 through a presentation, the slides of which are available [here](https://docs.google.com/presentation/d/1bMGbM6aHFVk0b03BWd8nmvoWJw1UxhAfbdOUBtoP9iE/edit?usp=drive_link), alongside an earlier blog post that can be found [here](https://www.ledger.com/blog/app-streaming).

Vanadium, envisioned by Salvatore Ingala and Ledger engineers, extends the capabilities of hardware wallets by utilizing a RISC VM to run any application using client memory, thus bypassing the memory constraints traditionally associated with such devices. This approach enables storing states, policies, and other information on the client side, verified through Merkle Tree root commitments and hardware wallet signatures. Unlike the current bitcoin ledger app handling miniscript descriptors, Vanadium proposes a more advanced computing abstraction, potentially supported by the Rust-Lightning SDK and leveraging Rust's growing toolset.

Addressing payment technicalities, especially with hardware device issues during transactions, poses significant challenges. A proposed solution involves asynchronous payments to allow flexible handling of payment timings, as discussed on the Linux Foundation's mailing list ([link](https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003307.html)). This method could alleviate problems arising from automatic failures due to unreachable devices, offering a more adaptable framework compared to the current system reliant on immediate user coordination for invoice sharing and payment.

The dialogue also explores a new methodology for non-custodial mobile wallet transactions, requiring active user participation for transaction verification, diverging from the seamless experience provided by apps like Phoenix. This shift towards requiring hardware ledger connectivity introduces potential delays and complicates user interaction, raising questions about usability and the practical implementation of security measures. Yet, this strategy might offer benefits in scenarios necessitating synchronous payments, suggesting an area for strategic development and user experience optimization.

Moreover, the conversation delves into the technical and user experience implications of integrating Phoenix and Ledger for on-chain operations. The anticipated complexity of implementing a comprehensive lightning channel state machine logic within the hardware device underscores the substantial challenge of this endeavor. It highlights the necessity for a nuanced approach to ensuring secure and autonomous transaction analysis and authorization by the hardware device.

Finally, a new open-source project aims to bolster Bitcoin transactions on the Lightning network through hardware wallet integration for enhanced key management. Focusing on securing larger transactions, the initiative seeks to explore the feasibility and user experience of marrying the functionalities of a Lightning wallet with a hardware wallet. This project, targeting a prototype phase using Phoenix's source code and a Ledger device, underscores the unmet need for hardware-protected Lightning wallets capable of securely managing significant transaction volumes without compromising convenience.</summary>
    <published>2024-02-15T13:36:35.650000+00:00</published>
  </entry>
</feed>
