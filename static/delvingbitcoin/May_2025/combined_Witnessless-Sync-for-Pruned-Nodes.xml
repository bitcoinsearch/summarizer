<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Witnessless Sync for Pruned Nodes</title>
  <updated>2025-09-15T00:53:29.401276+00:00</updated>
  <author>
    <name>gmaxwell 2025-05-31 20:19:40.088000+00:00</name>
  </author>
  <author>
    <name>JoseSK999 2025-05-31 16:19:33.254000+00:00</name>
  </author>
  <link href="delvingbitcoin/May_2025/5181_Witnessless-Sync-for-Pruned-Nodes.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2025/5178_Witnessless-Sync-for-Pruned-Nodes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Witnessless Sync for Pruned Nodes</title>
    <updated>2025-09-15T00:53:29.401674+00:00</updated>
    <link href="https://delvingbitcoin.org/t/witnessless-sync-for-pruned-nodes/1742" rel="alternate"/>
    <summary>The discussion revolves around the concept of Witnessless Sync for pruned nodes in the Bitcoin network, highlighting a significant optimization in terms of bandwidth usage. The idea, originating from the benefits outlined with Segregated Witness (SegWit) and further explored through community questions and pull requests on Bitcoin Core's GitHub, suggests skipping the download of `assumed-valid` witness data during the initial block download (IBD) phase for pruned nodes. This approach could potentially reduce bandwidth requirements by over 40%, representing a substantial saving in network resources.

The analysis delves into the security implications of not downloading witness data, a concern that has been previously raised within the community. The primary argument in favor of Witnessless Sync hinges on the assumption of validity for blocks. If a block is `assumed-valid`, it implicitly confirms the availability and correctness of the witness data at the time of validation. Since the validity of scripts relies on the presence of this data, the successful application of `assume-valid` serves as an indirect verification of witness data availability. Therefore, the need for downloading witness data for these blocks could be seen as redundant, aligning the data-availability model of Witnessless Sync with that of regular pruned nodes. 

Regular pruned nodes perform a one-time data availability check during IBD, without the necessity to repeat this process for data verification in the future. Applying the same logic to Witnessless Sync, the initial `assume-valid` check should suffice, making further witness data downloads an unnecessary duplication of effort. This perspective underscores the belief that the proposed change would maintain the security integrity of pruned nodes while offering significant improvements in bandwidth efficiency.

For those interested in a deeper understanding or looking to contribute thoughts and criticisms, the full write-up of the analysis can be found at [this link](https://gist.github.com/JoseSK999/df0a2a014c7d9b626df1e2b19ccc7fb1). This initiative invites further discussion and feedback from the community on the viability and safety of implementing Witnessless Sync within the Bitcoin network.</summary>
    <published>2025-05-31T20:19:40.088000+00:00</published>
  </entry>
</feed>
