<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Graftleaf: Program Composition and Generic Delegation</title>
  <updated>2025-05-07T02:45:04.388165+00:00</updated>
  <author>
    <name>josh 2025-05-06 15:10:06.012000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Graftleaf: Program Composition and Generic Delegation</title>
    <updated>2025-05-07T02:45:04.388197+00:00</updated>
    <link href="https://delvingbitcoin.org/t/graftleaf-program-composition-and-generic-delegation/1669" rel="alternate"/>
    <summary>Exploring innovative methods to enhance Bitcoin's functionality, a new proposal named Graftleaf introduces the concepts of generalized program composition and coin delegation. This idea stems from the perceived limitations in current proposals like Graftroot and Entroot, which offer delegation capabilities but with restrictions on spending paths and script complexity. Graftleaf aims to overcome these limitations by enabling delegation from any valid spending path to arbitrarily complex compositions of programs and scripts. This approach not only broadens the scope of delegation but also retains the flexibility needed for diverse Bitcoin transactions.

Graftleaf proposes a new Taproot leaf version (0xc2) that utilizes the annex feature for executing delegations. This mechanism allows for the execution of multiple witness programs in sequence, including locking scripts, thereby introducing a significant improvement over existing models. The proposal includes detailed technical specifications such as the composition mechanism, which ensures that each program operates within its designated portion of the witness stack, and the delegation mechanism, which allows users to commit to additional spending conditions at the time of signature. These features are designed to work within the constraints of Bitcoin's resource limits while preventing security issues like replay attacks and witness malleability.

The potential benefits of Graftleaf are manifold. It promises backward compatibility with existing P2TR addresses, enhanced composability for creating complex spending policies, and improved privacy and fungibility. Additionally, the proposal outlines several use cases such as "vault-of-vaults" setups, receiver-paid payments, and flexible market transactions, illustrating the practical applications of this concept.

Graftleaf distinguishes itself from other proposals by offering script path delegation, delegation from a composition of programs and script, and the ability to handle arbitrarily complex compositions on a single leaf without requiring new address types or hash-to-curve schemes. The proposal is presented as a carefully considered solution that respects Bitcoin's resource limitations and security concerns, inviting feedback from the community on the possibility of developing a BIP to formalize this approach.</summary>
    <published>2025-05-06T15:10:06.012000+00:00</published>
  </entry>
</feed>
