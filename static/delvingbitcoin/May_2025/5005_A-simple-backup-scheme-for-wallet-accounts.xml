<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A simple backup scheme for wallet accounts</title>
  <updated>2025-05-15T02:43:27.979067+00:00</updated>
  <author>
    <name>sjors 2025-05-14 12:18:33.194000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A simple backup scheme for wallet accounts</title>
    <updated>2025-05-15T02:43:27.979104+00:00</updated>
    <link href="https://delvingbitcoin.org/t/a-simple-backup-scheme-for-wallet-accounts/1607/10" rel="alternate"/>
    <summary>The approach discussed emphasizes the balance between security and recoverability in the context of cryptographic backups, specifically within the Bitcoin ecosystem. By leveraging a unique strategy where secrecy is conditional upon not possessing a specific descriptor, it introduces a nuanced method for handling critical information such as multisig wallet descriptors or BIP (Bitcoin Improvement Proposal) policies. An interesting facet of this approach is the recovery mechanism that comes into play if one loses access to a signing device due to unforeseen circumstances like a house fire. The method allows for the recovery of information using any remaining signing device, highlighting the resilience of this backup strategy.

The technical process involves utilizing a public key to generate a secret which then aids in decrypting the backup payload. This decryption process is somewhat experimental, requiring attempts with multiple candidate keys or hints to identify the correct decryption key. This process underscores the necessity of choosing an appropriate xpub, such as the one recommended by BIP87, for decryption attempts. Moreover, the discussion points to a preference for using a standard derivation path for these backups to maintain the advantageous property of deriving the backup key directly from a descriptor, which simplifies the backup function into a straightforward transformation of the descriptor into backup data.

Furthermore, the conversation addresses the practical challenges of data storage decay over time, suggesting the incorporation of self-healing mechanisms within the backup itself to ensure longevity and reliability. This proactive measure ensures that backups can be verified against data corruption, enhancing the robustness of the backup solution. Additionally, the possibility of expanding the backup format to include more data types, like BIP329 labels, through a simple JSON structure is considered, allowing for greater flexibility and utility of the backup system.

On the security front, the methodology acknowledges the inherent risk of storing encrypted descriptors publicly or on compromised servers. While this risk exposes the existence of a multisig setup to potential attackers, it is deemed a necessary trade-off for ensuring that users can recover their information in case of loss. The use of Shamir's Secret Sharing and encryption with xpubs adds a layer of complexity to the recovery process, requiring the correct threshold of shares to decrypt, thus adding another layer of security but also complexity.

Lastly, the document touches on the potential vulnerability to attackers becoming aware of a sophisticated wallet setup despite efforts to obfuscate such details through steganographic storage or other means. This acknowledgment underlines a critical aspect of cryptographic securityâ€”balancing the need for secrecy and the practical requirements of recovery and usability.</summary>
    <published>2025-05-14T12:18:33.194000+00:00</published>
  </entry>
</feed>
