<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Sybil resistance in coinjoin implementations</title>
  <updated>2025-05-28T02:49:36.990387+00:00</updated>
  <author>
    <name>1440000bytes 2025-05-27 22:05:11.209000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Sybil resistance in coinjoin implementations</title>
    <updated>2025-05-28T02:49:36.990419+00:00</updated>
    <link href="https://delvingbitcoin.org/t/sybil-resistance-in-coinjoin-implementations/1728" rel="alternate"/>
    <summary>In the realm of cryptocurrency transactions, sybil attacks represent a notable security concern, particularly for coinjoin implementations. These attacks involve an attacker controlling multiple nodes in a network to disrupt or manipulate the transaction process. Various platforms have developed different mechanisms to counteract such vulnerabilities, each with its unique approach and effectiveness.

The Wabisabi protocol, as detailed in Section 7.2.2 of the [Wabisabi paper](https://eprint.iacr.org/2021/206.pdf), acknowledges the threat of sybil attacks but does not provide inherent resistance against them. In the context of Wabisabi, an attacker's success hinges on acquiring sufficient inputs in a coinjoin transaction and managing associated fees. Notably, the absence of coordinator fees in the platform with the highest liquidity further complicates the defense against such attacks. Given Wabisabi's reliance on a centralized coordinator, users are compelled to trust this entity to not correlate inputs and outputs, which introduces additional risk.

Joinmarket, on the other hand, employs [fidelity bonds](https://joinmarket.sgn.space/fidelitybonds) as a robust mechanism for deterring sybil attacks. This strategy requires market makers to lock away a portion of their bitcoin, thereby escalating the cost of conducting an attack and rendering it less appealing. The fidelity bond system effectively increases the financial stakes for potential attackers, leveraging economic disincentives to bolster network security.

Joinstr introduces an innovative approach to sybil resistance, utilizing [aut-ct](https://github.com/AdamISZ/aut-ct) alongside optional fidelity bonds. This model is distinctive in that it allows for greater flexibility and inclusivity. Initiators can specify various conditions for joining a pool, such as proving ownership of a UTXO of a certain value and age, without necessitating the locking up of bitcoin by participants. Instead, a fee is charged prior to joining a pool, which utilizes a paid nostr relay, distinguishing Joinstr from other coinjoin implementations. An example scenario illustrates how participants, including those with existing fidelity bonds like in Joinmarket, can share aut-ct proof to verify ownership of qualifying UTXOs, thereby facilitating a secure and inclusive transaction environment.

In conclusion, while Wabisabi is susceptible to sybil attacks due to its current implementation details, Joinmarket offers substantial resistance through the introduction of economic barriers via fidelity bonds. Joinstr arguably presents the most effective defense among the discussed coinjoin implementations by integrating flexible yet stringent requirements for transaction participation, thus significantly mitigating the risk of sybil attacks.</summary>
    <published>2025-05-27T22:05:11.209000+00:00</published>
  </entry>
</feed>
