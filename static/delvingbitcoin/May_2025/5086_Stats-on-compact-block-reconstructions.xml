<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Stats on compact block reconstructions</title>
  <updated>2025-05-23T02:45:04.078491+00:00</updated>
  <author>
    <name>davidgumberg 2025-05-22 02:56:14.741000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Stats on compact block reconstructions</title>
    <updated>2025-05-23T02:45:04.078526+00:00</updated>
    <link href="https://delvingbitcoin.org/t/stats-on-compact-block-reconstructions/1052/31" rel="alternate"/>
    <summary>The discussion revolves around the optimization of data prefilling in the context of TCP congestion control and its potential benefits for Bitcoin node communication. The premise is that by aligning the prefill amount with the TCP congestion window, it might be possible to avoid additional round trip times (RTTs) that slow down the communication between nodes. This approach is based on the assumption that the operating system's congestion control algorithm can accurately predict the maximum message size that can be sent without causing extra RTTs. It suggests that nodes with slower connections will automatically have smaller windows, thus reducing unnecessary prefill costs. This method could dynamically adjust to various connection speeds, effectively delegating the complexity of managing this adjustment to the expertise of kernel developers and the International Engineering Task Force (IETF).

To empirically assess the viability of this strategy, the author has initiated a branch ([https://github.com/bitcoin/bitcoin/pull/32582](https://github.com/bitcoin/bitcoin/pull/32582)) aimed at measuring the typical sizes of `BLOCKTXN` fulfillments in compact blocks. Furthermore, gathering data on the congestion window sizes across different bitcoin nodes could provide valuable insights. If these windows are uniformly sized, then while compact block reconstruction failures might not be entirely eliminated, their frequency could be reduced through cautious prefilling without significantly increasing the cost. The observation from the author's node indicates that compact block messages typically are around 20kB in size, suggesting that an 800-byte prefill would leave ample overhead, potentially making this practice both efficient and economical.</summary>
    <published>2025-05-22T02:56:14.741000+00:00</published>
  </entry>
</feed>
