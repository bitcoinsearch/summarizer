<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Witnessless Sync for Pruned Nodes</title>
  <updated>2025-09-21T18:39:35.486706+00:00</updated>
  <author>
    <name>JoseSK999 2025-05-31 16:19:33.254000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Witnessless Sync for Pruned Nodes</title>
    <updated>2025-09-21T18:39:35.486738+00:00</updated>
    <link href="https://delvingbitcoin.org/t/witnessless-sync-for-pruned-nodes/1742" rel="alternate"/>
    <summary>The discussion revolves around an analysis of the security implications related to skipping `assumed-valid` witness downloads for pruned nodes in Bitcoin's blockchain. Initially highlighted by the benefits of Segregated Witness (SegWit) in enhancing efficiency by not verifying signatures, the concept of `assume-valid` parameters was not present at that time. It was only after a specific question on Bitcoin Stack Exchange and subsequent opening of a PR in Bitcoin Core two years later that the idea garnered attention. This proposed change aimed at reducing bandwidth usage by more than 40%, translating into significant data savings during the Initial Block Download (IBD) phase, especially when combined with `assume-valid` to alleviate both CPU and bandwidth bottlenecks.

The primary concern with implementing Witnessless Sync is the potential security reduction due to not checking witness data availability during syncing. However, the argument presented is that `assume-valid` inherently implies trust in the validity of scripts, which in turn requires the availability of witness data at some point. Therefore, if scripts are assumed valid, it indirectly confirms that witness data was available, aligning Witnessless Sync with the data-availability model of regular pruned nodes. Pruned nodes conduct a one-time check for data availability during IBD and do not need to re-download blocks to confirm data presence in the future. This rationale supports the assertion that Witnessless Sync would be as secure as operating a traditional long-running pruned node since it relies on the same premise of past data availability.

The full analysis can be explored through a detailed writeup available at [this link](https://gist.github.com/JoseSK999/df0a2a014c7d9b626df1e2b19ccc7fb1), inviting further discussion and critique from the community. The introduction of such changes could potentially revolutionize data handling and synchronization processes in Bitcoin's network, emphasizing efficiency without significantly compromising on security.</summary>
    <published>2025-05-31T16:19:33.254000+00:00</published>
  </entry>
</feed>
