<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Witnessless Sync for Pruned Nodes</title>
  <updated>2025-09-14T21:45:36.569749+00:00</updated>
  <author>
    <name>JoseSK999 2025-05-31 16:19:33.254000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Witnessless Sync for Pruned Nodes</title>
    <updated>2025-09-14T21:45:36.569774+00:00</updated>
    <link href="https://delvingbitcoin.org/t/witnessless-sync-for-pruned-nodes/1742" rel="alternate"/>
    <summary>The recent analysis delves into the security implications of enabling pruned nodes in Bitcoin's blockchain to skip downloading `assumed-valid` witness data, a concept initially highlighted in the context of Segregated Witness (SegWit) benefits. The idea of skipping these downloads aims at significantly reducing bandwidth usage by over 40%, which could save hundreds of gigabytes during the Initial Block Download (IBD) phase. This efficiency is particularly beneficial when combined with the `assume-valid` feature, as it lessens the load not only on CPU resources but also on network bandwidth.

Two years after the potential for this feature was queried on [Bitcoin Stack Exchange](https://bitcoin.stackexchange.com/questions/117057/why-is-witness-data-downloaded-during-ibd-in-prune-mode), a pull request ([PR #27050](https://github.com/bitcoin/bitcoin/pull/27050)) was introduced on Bitcoin Core's GitHub to explore this possibility further. Although concerns were raised regarding whether this approach might compromise security, the analysis argues that such a change would not diminish the security model of pruned nodes. This argument rests on the premise that the use of `assume-valid` blocks inherently trusts that the scripts within those blocks are valid. Consequently, if the scripts are valid, it implies that the witness data must have been available at some point, satisfying the requirement for script validation.

Moreover, the analysis elucidates that since `assume-valid` blocks are trusted not to fail script evaluation due to missing witness data, the process of Witnessless Sync aligns with the existing data availability checks performed by pruned nodes. Typically, pruned nodes conduct a one-time check for data availability during IBD and do not require subsequent downloads of the same blocks to re-verify availability. Therefore, the omission of witness data downloads in the context of `assume-valid` blocks does not necessitate an additional data availability verification, thus maintaining the security integrity of long-running pruned nodes.

For a comprehensive understanding of the technicalities and implications of this analysis, the full writeup is available at [this link](https://gist.github.com/JoseSK999/df0a2a014c7d9b626df1e2b19ccc7fb1). The proposition underscores a significant stride towards optimizing network efficiency without compromising the foundational security principles of the Bitcoin network.</summary>
    <published>2025-05-31T16:19:33.254000+00:00</published>
  </entry>
</feed>
