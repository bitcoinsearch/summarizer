<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Witnessless Sync for Pruned Nodes</title>
  <updated>2025-09-21T20:01:19.597067+00:00</updated>
  <author>
    <name>JoseSK999 2025-05-31 16:19:33.254000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Witnessless Sync for Pruned Nodes</title>
    <updated>2025-09-21T20:01:19.597095+00:00</updated>
    <link href="https://delvingbitcoin.org/t/witnessless-sync-for-pruned-nodes/1742" rel="alternate"/>
    <summary>The discussion revolves around the concept of Witnessless Sync for pruned nodes in the Bitcoin network, a method aimed at significantly reducing bandwidth usage by omitting the download of `assumed-valid` witness data during Initial Block Download (IBD). Initially highlighted in the context of Segregated Witness Benefits, the idea gained traction with a specific Bitcoin Stack Exchange question, which subsequently led to a proposal on Bitcoin Core's GitHub. This proposal sought to assess the feasibility and security implications of such an approach. The primary advantage of this method is the substantial reduction in bandwidth requirements—by over 40% according to estimates—thus offering a more efficient syncing process particularly beneficial for users with limited internet resources.

Despite the efficiency gains, concerns were raised regarding the potential security trade-offs of not verifying witness data availability during the syncing process. However, the analysis posits that the use of `assume-valid` blocks inherently addresses these concerns. The argument is structured around the premise that if a block is marked as `assume-valid`, it implies trust in the validity of its scripts, which in turn suggests that the necessary witness data was available at some point. Therefore, the requirement to download witness data for these blocks could be deemed redundant, as their validity—and by extension, the availability of relevant witness data—has already been established.

This approach aligns with the operational model of pruned nodes, which only perform a one-time check for data availability during IBD and do not re-download blocks for subsequent verification. By applying the same logic, Witnessless Sync is argued to be as secure as the traditional method used by long-running pruned nodes. This perspective underscores the belief that the proposed change does not compromise security but rather optimizes the synchronization process by eliminating unnecessary data transfers.

The author of the analysis welcomes feedback and criticism, indicating a collaborative effort to refine and potentially implement this feature within the Bitcoin ecosystem. For those interested in delving deeper into the technical aspects and rationale behind this proposal, the full write-up is accessible [here](https://gist.github.com/JoseSK999/df0a2a014c7d9b626df1e2b19ccc7fb1).</summary>
    <published>2025-05-31T16:19:33.254000+00:00</published>
  </entry>
</feed>
