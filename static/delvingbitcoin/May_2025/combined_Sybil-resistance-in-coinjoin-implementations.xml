<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Sybil resistance in coinjoin implementations</title>
  <updated>2025-05-29T02:47:53.429155+00:00</updated>
  <author>
    <name>securitybrahh 2025-05-28 10:28:12.033000+00:00</name>
  </author>
  <author>
    <name>bytes  . 2025-05-27 22:05:11.209000+00:00</name>
  </author>
  <link href="delvingbitcoin/May_2025/5144_Sybil-resistance-in-coinjoin-implementations.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2025/5140_Sybil-resistance-in-coinjoin-implementations.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Sybil resistance in coinjoin implementations</title>
    <updated>2025-05-29T02:47:53.429195+00:00</updated>
    <link href="https://delvingbitcoin.org/t/sybil-resistance-in-coinjoin-implementations/1728" rel="alternate"/>
    <summary>Cryptocurrency transactions are increasingly targeted by sybil attacks, where attackers control multiple nodes in a network to interfere with or manipulate transactions. These security breaches are particularly concerning for coinjoin implementations, which aim to enhance user privacy by mixing multiple transactions together, making it harder to trace individual coins. To combat these threats, various platforms have devised unique strategies.

The Wabisabi protocol, despite acknowledging the risk of sybil attacks, lacks inherent mechanisms to prevent them. According to the [Wabisabi paper](https://eprint.iacr.org/2021/206.pdf), an attacker's ability to carry out a successful operation depends on acquiring enough inputs in a coinjoin transaction and handling the associated fees. The lack of coordinator fees on the most liquid platform further exacerbates the challenge of defending against such vulnerabilities. This situation forces users to place trust in a centralized coordinator to not correlate inputs and outputs, introducing an additional layer of risk.

In contrast, Joinmarket has implemented a more robust defense mechanism against sybil attacks through the use of [fidelity bonds](https://joinmarket.sgn.space/fidelitybonds). By requiring market makers to lock away a portion of their bitcoins, this approach significantly raises the cost and lowers the appeal of attempting an attack. Fidelity bonds function as an economic deterrent, leveraging financial disincentives to enhance the security of the network.

Joinstr introduces an even more innovative method for resisting sybil attacks by employing [aut-ct](https://github.com/AdamISZ/aut-ct) in conjunction with optional fidelity bonds. This model offers greater flexibility and inclusivity by allowing participants to join a pool under certain conditions, such as proving ownership of a UTXO of specific value and age, without the need to lock up bitcoins. A fee is charged before joining a pool, utilizing a paid nostr relay, setting Joinstr apart from other coinjoin implementations. This system enables a secure and inclusive transaction environment, where participants can verify ownership of qualifying UTXOs through aut-ct proof, even those with existing fidelity bonds like in Joinmarket.

Overall, while the Wabisabi protocol remains vulnerable to sybil attacks due to its design and operational framework, Joinmarket and Joinstr present effective countermeasures. Joinmarket's economic barriers and Joinstr's flexible requirements significantly mitigate the risk of such attacks, showcasing the evolving landscape of cryptocurrency transaction security.</summary>
    <published>2025-05-28T10:28:12.033000+00:00</published>
  </entry>
</feed>
