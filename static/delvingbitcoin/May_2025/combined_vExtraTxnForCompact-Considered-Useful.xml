<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - vExtraTxnForCompact Considered Useful</title>
  <updated>2025-05-22T02:52:48.349629+00:00</updated>
  <author>
    <name>szarka 2025-05-22 00:17:35.560000+00:00</name>
  </author>
  <author>
    <name>gmaxwell 2025-05-22 00:00:20.683000+00:00</name>
  </author>
  <author>
    <name>szarka 2025-05-21 23:54:02.043000+00:00</name>
  </author>
  <author>
    <name>gmaxwell 2025-05-21 23:08:43.649000+00:00</name>
  </author>
  <author>
    <name>szarka 2025-05-21 22:21:46.376000+00:00</name>
  </author>
  <link href="delvingbitcoin/May_2025/5082_vExtraTxnForCompact-Considered-Useful.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2025/5081_vExtraTxnForCompact-Considered-Useful.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2025/5080_vExtraTxnForCompact-Considered-Useful.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2025/5079_vExtraTxnForCompact-Considered-Useful.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2025/5078_vExtraTxnForCompact-Considered-Useful.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - vExtraTxnForCompact Considered Useful</title>
    <updated>2025-05-22T02:52:48.349682+00:00</updated>
    <link href="https://delvingbitcoin.org/t/vextratxnforcompact-considered-useful/1716" rel="alternate"/>
    <summary>The discussion revolves around the utility and significance of `vExtraTxnForCompact`, commonly abbreviated as `vExtra`, a feature within [Bitcoin Core](https://github.com/bitcoin/bitcoin) that plays a crucial role in compact block reconstruction, particularly for nodes with restrictive spam-filtering policies. This feature, which operates as a temporary storage area for transactions not currently in the mempool due to being replaced, orphaned, or rejected for policy reasons, enables nodes to reconstruct blocks without needing to request these transactions from their peers if they get mined. Despite its potential benefits, it appears that `vExtra` is underutilized and lacks the robust implementation it deserves, with the default configuration only buffering 100 transactions.

There's an ongoing conversation regarding the efficacy of `vExtra` amid scenarios where nodes exhibit heterogeneous policiesâ€”especially with the advent of clients like Bitcoin Knots and Libre Relay that allow for customization beyond Core's defaults. The utility of `vExtra` becomes even more pronounced in these settings, suggesting that increasing its default size could significantly benefit node operators by reducing dependency on peer nodes during block reconstruction. This is especially relevant in light of discussions around the `OP_RETURN` parameter and other spam control mechanisms which, without `vExtra`, might necessitate frequent transaction requests from peers for nodes enforcing stricter data carrier size policies.

A methodical approach was employed to compare the performance of a filtering node against a non-filtering counterpart in terms of their reliance on `vExtra` for compact block reconstruction. This involved running both nodes on identical hardware and network conditions but with different configurations for `blockreconstructionextratxn`, alongside varying policy restrictions. The results underscored `vExtra`'s utility, showing a marked decrease in the number of transactions the filtering node had to request from peers thanks to its augmented `vExtra` capacity. Specifically, the filtering node was able to recover a substantial portion of the filtered transactions directly from `vExtra`, underscoring its value in enhancing node efficiency in compact block reconstructions.

In conclusion, the `blockreconstructionextratxn` setting in Bitcoin Core and similar implementations warrants further attention and optimization. By adjusting this parameter, node operators can significantly improve their block reconstruction process, making it less reliant on external peers, especially in environments characterized by diverse and restrictive policy settings. The findings also suggest avenues for future work, including more granular controls over what gets added to `vExtra` and improvements to its underlying architecture to better serve the needs of the Bitcoin network. Further investigation and community engagement are encouraged, as detailed on the project's [Github page](https://github.com/szarka/vextratest), which hosts more in-depth data and analysis.</summary>
    <published>2025-05-22T00:17:35.560000+00:00</published>
  </entry>
</feed>
