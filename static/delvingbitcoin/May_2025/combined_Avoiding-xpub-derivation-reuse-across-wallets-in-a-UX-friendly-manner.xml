<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Avoiding xpub+derivation reuse across wallets, in a UX-friendly manner</title>
  <updated>2025-05-05T02:47:06.528182+00:00</updated>
  <author>
    <name>benk10 2025-05-04 17:23:24.207000+00:00</name>
  </author>
  <author>
    <name>benk10 2025-05-04 06:43:00.108000+00:00</name>
  </author>
  <author>
    <name>salvatoshi  . 2025-04-30 15:13:39.995000+00:00</name>
  </author>
  <author>
    <name>kloaec  . 2025-04-29 17:58:30.063000+00:00</name>
  </author>
  <author>
    <name>kloaec  . 2025-04-29 17:54:43.553000+00:00</name>
  </author>
  <link href="delvingbitcoin/May_2025/4939_Avoiding-xpub-derivation-reuse-across-wallets-in-a-UX-friendly-manner.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2025/4935_Avoiding-xpub-derivation-reuse-across-wallets-in-a-UX-friendly-manner.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4903_Avoiding-xpub-derivation-reuse-across-wallets-in-a-UX-friendly-manner.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4897_Avoiding-xpub-derivation-reuse-across-wallets-in-a-UX-friendly-manner.xml" rel="alternate"/>
  <link href="delvingbitcoin/April_2025/4896_Avoiding-xpub-derivation-reuse-across-wallets-in-a-UX-friendly-manner.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Avoiding xpub+derivation reuse across wallets, in a UX-friendly manner</title>
    <updated>2025-05-05T02:47:06.528265+00:00</updated>
    <link href="https://delvingbitcoin.org/t/avoiding-xpub-derivation-reuse-across-wallets-in-a-ux-friendly-manner/1644" rel="alternate"/>
    <summary>The discourse around cryptocurrency wallet management, particularly focusing on single-signature and multi-signature setups, unveils significant considerations in terms of privacy, user experience (UX), and security. For single-signature wallets, maintaining a simplified approach that includes purpose, account, and `coin_type` in key derivation paths is suggested, favoring unhardened derivation for ease of backup and compatibility with hardware wallets. This method underscores the importance of minimizing friction for users while ensuring security protocols are upheld, especially when interfacing with hardware devices.

In the realm of multi-signature wallets, the recommendation leans towards backing up descriptors, utilizing Unix time for timestamping but sticking to unhardened derivations to avoid complications with hardware wallets. This acknowledges the practical challenges users face with hardware wallet integration, emphasizing the need to streamline processes without compromising security or privacy. The current standards, such as BIP43, are critiqued for lacking in both privacy and UX, pushing users towards unsafe practices like pubkey reuse and managing multiple xpubs, which leads to a poor user experience.

The discussion extends into the technicality of employing `coin_type` within key hierarchies, highlighting its utility in segregating keys across different networks or coins. This practice, adopted by hardware wallets like Ledger, illustrates the potential benefits of integrating `coin_type` into future Bitcoin Improvement Proposals to enhance organizational security. However, concerns about increasing entropy in descriptors pose risks, such as ransom attacks through malware deceiving users during backup verifications. A proposed solution involves small storage providers for backing up "monotonic" information, offering redundancy and facilitating easier data reconciliation without compromising privacy.

An innovative solution to improve UX in air-gapped wallets is the introduction of an "xpub request" QR code mechanism. This method aims to simplify the transfer of xpub information between wallet software and hardware devices, reducing manual entry errors and enhancing transaction security. This approach reflects a broader trend towards making cryptocurrency storage solutions more accessible and user-friendly without sacrificing security.

Finally, the conversation addresses the challenge of extended public key (xpub) reuse and derivation path standardization in multisig and advanced wallet setups. Traditional methods have fallen short, suggesting output descriptors as a viable alternative for explicitly recording derivation paths and mitigating xpub reuse. Yet, transitioning from mnemonic phrases and standard paths to output descriptors introduces challenges, particularly in wallet rotation, migration, and cross-vendor compatibility. The dialogue emphasizes a multifaceted strategy that balances UX, privacy, and technological advancements, advocating for the exploration of new standards to create a robust framework for cryptocurrency wallet management.</summary>
    <published>2025-05-04T17:23:24.207000+00:00</published>
  </entry>
</feed>
