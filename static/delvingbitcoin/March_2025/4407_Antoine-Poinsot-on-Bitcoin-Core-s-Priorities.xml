<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Antoine Poinsot on Bitcoin Core's Priorities</title>
  <updated>2025-03-04T02:23:11.234938+00:00</updated>
  <author>
    <name>AntoineP 2025-03-03 16:19:05.761000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Antoine Poinsot on Bitcoin Core's Priorities</title>
    <updated>2025-03-04T02:23:11.234975+00:00</updated>
    <link href="https://delvingbitcoin.org/t/antoine-poinsot-on-bitcoin-cores-priorities/1470/18" rel="alternate"/>
    <summary>The discourse presents a detailed examination of the challenges and misconceptions surrounding Bitcoin Core's development, particularly in relation to its node-backed wallet interfaces. It addresses concerns regarding the perceived reluctance of Bitcoin Core contributors to introduce new interfaces or extend existing ones. Contrary to the criticism of an apparent series of rejections for proposed enhancements, such as additional indexes or extended peer-to-peer interfaces, the response suggests that Bitcoin Core has historically been open to adopting new interfaces if they are well-reviewed and considered beneficial. The argument is made that rejections, when they occur, are based on solid reasons, highlighting that proposals deemed as poor ideas have rightfully not been implemented. Examples cited include the successful addition of block filters and coinstats, countering the notion that Bitcoin Core is resistant to change.

Furthermore, the conversation touches upon the future direction of wallet interface development within Bitcoin Core, especially with the advent of multiprocess architecture. This development promises equal access for all wallets to the core wallet's interface, dismissing fears of diminishing support for wallet functionalities in favor of other priorities like verification and relay optimizations. The insistence is on the necessity of a node that supports wallet functions, underlining that any insinuations about pruning wallet-supportive interfaces are unfounded.

Finally, the dialogue explores the practicality and feasibility of embedding nodes within wallet software. The question of whether such integration demands an excessive amount of code due to limited interfaces provided by Bitcoin Core is countered with examples of existing solutions like Sparrow and Liana, which successfully implement full-node backed wallets. Moreover, the shift towards a multiprocess arrangement is anticipated to further ease the integration process by offering enhanced interfaces. This segment also addresses concerns over the realistic usage scenarios of running nodes, particularly in mobile environments, arguing that the diversity in user preferences and setups—ranging from local nodes to remote connections—remains viable and supported.</summary>
    <published>2025-03-03T16:19:05.761000+00:00</published>
  </entry>
</feed>
