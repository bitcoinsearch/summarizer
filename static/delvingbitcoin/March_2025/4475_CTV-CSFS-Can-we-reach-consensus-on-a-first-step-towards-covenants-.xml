<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CTV+CSFS: Can we reach consensus on a first step towards covenants?</title>
  <updated>2025-03-12T02:25:00.538799+00:00</updated>
  <author>
    <name>instagibbs 2025-03-11 18:39:51.216000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CTV+CSFS: Can we reach consensus on a first step towards covenants?</title>
    <updated>2025-03-12T02:25:00.538829+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ctv-csfs-can-we-reach-consensus-on-a-first-step-towards-covenants/1509/10" rel="alternate"/>
    <summary>The argument that the absence of implementations is a valid criticism against protocol upgrades is challenged by highlighting the fact that groundbreaking features like taproot had no implementations at their time of deployment. This draws attention to the unreasonable expectations placed on developers within the ecosystem to invest resources in building upon features that are still under consideration and may never be realized. The financial and time investments required for such speculative development work are significant, with outcomes ranging from shelving the work for years to completely discarding it, depending on the decisions made about the feature's inclusion in future updates.

Furthermore, the discussion touches upon the historical perspective of protocol upgrades, suggesting that criticisms based on the lack of prior implementations might only serve to question the thoroughness of the vetting process, as seen with taproot. However, this standpoint is unlikely to change the consensus on the necessity for rigorous integration testing standards, which have evolved over the years. There is an acknowledgment of the need to bridge the gap between theoretical discussions in blog posts and the realization of fully production-ready integrations. To move forward effectively, the emphasis should be on demonstrating the viability of proposed upgrades through detailed specifications and proof-of-concept (PoC) code, which lies midway between initial proposals and complete integrations. This approach would provide tangible evidence of progress and potential success without requiring full-scale development efforts on features that may not be adopted.</summary>
    <published>2025-03-11T18:39:51.216000+00:00</published>
  </entry>
</feed>
