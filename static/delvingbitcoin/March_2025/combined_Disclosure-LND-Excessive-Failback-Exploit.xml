<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Disclosure: LND Excessive Failback Exploit</title>
  <updated>2025-03-31T02:40:52.556422+00:00</updated>
  <author>
    <name>ariard 2025-03-30 20:35:16.971000+00:00</name>
  </author>
  <author>
    <name>tbast  . 2025-03-24 08:53:01.729000+00:00</name>
  </author>
  <author>
    <name>ariard  . 2025-03-22 00:51:53.089000+00:00</name>
  </author>
  <author>
    <name>morehouse  . 2025-03-20 16:19:31.972000+00:00</name>
  </author>
  <author>
    <name>ariard  . 2025-03-19 22:49:58.530000+00:00</name>
  </author>
  <author>
    <name>morehouse  . 2025-03-05 19:53:02.250000+00:00</name>
  </author>
  <author>
    <name>ariard  . 2025-03-04 19:59:03.208000+00:00</name>
  </author>
  <author>
    <name>morehouse  . 2025-03-04 15:58:58.986000+00:00</name>
  </author>
  <link href="delvingbitcoin/March_2025/4647_Disclosure-LND-Excessive-Failback-Exploit.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4593_Disclosure-LND-Excessive-Failback-Exploit.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4587_Disclosure-LND-Excessive-Failback-Exploit.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4579_Disclosure-LND-Excessive-Failback-Exploit.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4578_Disclosure-LND-Excessive-Failback-Exploit.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4415_Disclosure-LND-Excessive-Failback-Exploit.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4412_Disclosure-LND-Excessive-Failback-Exploit.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4411_Disclosure-LND-Excessive-Failback-Exploit.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Disclosure: LND Excessive Failback Exploit</title>
    <updated>2025-03-31T02:40:52.556491+00:00</updated>
    <link href="https://delvingbitcoin.org/t/disclosure-lnd-excessive-failback-exploit/1493" rel="alternate"/>
    <summary>In the realm of the Lightning Network, particularly under BOLT5 specifications, there is an emphasis on the bidirectional nature of lightning channels, indicating that they are always capable of handling transactions in both directions unless explicitly set otherwise. This clarification becomes pertinent when considering the dynamics of Hashed Time-Locked Contracts (HTLCs), where both offered and received HTLCs can significantly influence the economic landscape of a commitment transaction, especially in terms of fee rate inflation. The discussion rectifies a common misunderstanding regarding the flow of HTLCs between nodes, confirming that the direction of HTLCs in the given example should be from Mallory to Mallet. It further elaborates on the procedural mandate from the BOLTs change, which necessitates the relay of preimages upstream as soon as they are obtained from downstream nodes, thereby underscoring the operational requirement for nodes to manage HTLC resolutions efficiently without necessitating force closures due to unacknowledged `update_fulfill_htlc` messages.

The discourse expands into the technical intricacies involved in managing commitment transactions within the network. It highlights the calculation of the maximum weight unit for commitment transactions, pointing out the significance of this computation in determining the applicable fee rates. The analysis delves into the strategic vulnerabilities that could be exploited by malicious actors, such as inflating the size of a commitment transaction to disproportionately increase the on-chain fee burden for honest nodes. This exploration underscores the potential for exploitative tactics, including the strategic withholding of cooperation, to force transactions on-chain, thus exposing nodes to substantial fee losses. Such scenarios bring to light the nuanced challenges faced by LN nodes in balancing operational integrity with financial viability amidst adversarial conditions.

The conversation also introduces a proposed specification change aimed at refining the handling of HTLCs, suggesting a shift from a discretionary to a more prescriptive guideline concerning the failure of incoming HTLCs once a preimage is disclosed. This proposal emerges against the backdrop of operational and economic considerations, emphasizing the critical role of cooperative behavior among network nodes. Furthermore, it addresses the complexities of implementing on-chain logic for LN state machines, highlighting a specific proposal that seeks to mitigate the risks associated with discrepancies in HTLC output inclusion across commitment transactions. This suggestion points to the broader debate among LN developers regarding the optimal balance between technical precision and economic rationality in channel closure decisions.

A critical examination of a vulnerability identified in the Lightning Network Daemon (LND) version 0.17.5 and below sheds light on the potential for funds misappropriation through the exploitation of the on-chain resolution logic. The "Excessive Failback Bug" reveals how attackers could manipulate transaction processes to double-spend HTLC values. The resolution of this bug in LND version 0.18.0, alongside independent fixes applied by other lightning implementations, illustrates the ongoing challenge of ensuring collective security improvements across decentralized protocols. This incident accentuates the importance of continual software updates and the proactive adoption of security practices by node operators to safeguard against vulnerabilities within the cryptocurrency ecosystem.</summary>
    <published>2025-03-30T20:35:16.971000+00:00</published>
  </entry>
</feed>
