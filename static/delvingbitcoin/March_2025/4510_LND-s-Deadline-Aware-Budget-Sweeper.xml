<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>LND's Deadline-Aware Budget Sweeper</title>
  <updated>2025-03-14T02:27:09.449084+00:00</updated>
  <author>
    <name>ismaelsadeeq 2025-03-13 10:58:51.690000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>LND's Deadline-Aware Budget Sweeper</title>
    <updated>2025-03-14T02:27:09.449122+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lnds-deadline-aware-budget-sweeper/1512/3" rel="alternate"/>
    <summary>The process of managing transaction fees in a blockchain network involves a linear fee function that starts with a minimal fee and escalates to allocate the entire budget for fees as the deadline for confirmation approaches. Initially, a batched transaction is sent out, followed by continuous monitoring through a "fee bumper" which increases the fee with each unconfirmed block based on the predetermined fee function. This mechanism aims to adjust the transaction fee dynamically to ensure timely confirmation.

A common issue arises when nodes use the long-term fee estimator designed for transactions expected to confirm after more than two blocks (`conf_target &gt; 2`) but require the transaction to be confirmed as soon as possible. The `estimateSmartFee` function, when used with a target of `n` blocks, is designed to estimate fees for a confirmation within `n` blocks rather than immediate confirmation in the next block. For transactions needing urgent confirmation before `n` blocks are processed, setting this parameter to 1 could lead to faster confirmation if the subsequent blocks do not confirm the transaction, allowing for an adjustment in the fee rate according to the budget and urgency reflected in the fee curve.

Furthermore, there's an ongoing discussion about improving Bitcoin Core's fee estimation through an API proposal that provides historical mempool data, giving clients insight into past states of the mempool and miner behavior. This enhancement could enable more strategic decisions regarding fee rates and confirmation timelines. The proposal, detailed in a GitHub issue ([see here](https://github.com/bitcoin/bitcoin/issues/30392issuecomment-2717491587)), suggests how such data might improve the accuracy and reliability of fee estimations, potentially benefiting users with time-sensitive transactions.</summary>
    <published>2025-03-13T10:58:51.690000+00:00</published>
  </entry>
</feed>
