<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - LND's Deadline-Aware Budget Sweeper</title>
  <updated>2025-03-14T02:27:25.081462+00:00</updated>
  <author>
    <name>t-bast 2025-03-13 16:41:31.265000+00:00</name>
  </author>
  <author>
    <name>ismaelsadeeq 2025-03-13 16:11:31.211000+00:00</name>
  </author>
  <author>
    <name>morehouse 2025-03-13 15:31:06.716000+00:00</name>
  </author>
  <author>
    <name>ismaelsadeeq 2025-03-13 10:58:51.690000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2025-03-12 18:54:19.443000+00:00</name>
  </author>
  <author>
    <name>morehouse  . 2025-03-11 16:38:50.003000+00:00</name>
  </author>
  <link href="delvingbitcoin/March_2025/4517_LND-s-Deadline-Aware-Budget-Sweeper.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4515_LND-s-Deadline-Aware-Budget-Sweeper.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4514_LND-s-Deadline-Aware-Budget-Sweeper.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4510_LND-s-Deadline-Aware-Budget-Sweeper.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4492_LND-s-Deadline-Aware-Budget-Sweeper.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4472_LND-s-Deadline-Aware-Budget-Sweeper.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - LND's Deadline-Aware Budget Sweeper</title>
    <updated>2025-03-14T02:27:25.081538+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lnds-deadline-aware-budget-sweeper/1512" rel="alternate"/>
    <summary>The discussion revolves around the recent advancements and strategies employed by various Lightning Network implementations, such as eclair and LND (Lightning Network Daemon), to optimize transaction fee management and enhance network security. Eclair has adopted an approach that shifts to exponential fee bumping as transaction deadlines approach, aiming for a more cost-effective way of handling fees when the urgency is less critical. This method contrasts with their previous strategy, indicating a move towards efficiency and economy by introducing a grace period before implementing fee bumps based on a new budget-based fee function.

In tackling the challenges of fee estimation, there's a consensus that calling Bitcoin Core’s `estimateSmartFee` with a high confirmation target (`n`) expecting immediate confirmation is impractical. Instead, it's suggested to use a target of `1` to aim for confirmation within the next 1–2 blocks, adjusting the fee rate accordingly based on the node's budget and a predetermined fee curve. This adjustment is crucial for LN nodes where timely transaction confirmation is essential, highlighting the discrepancy between expected and actual confirmation times as a significant concern. The proposal for an improved fee estimator by Bitcoin Core aims to provide more accurate data for making informed decisions, addressing issues with third-party estimators and unpredictable transaction confirmations due to external factors like mempool congestion or targeted attacks.

LND's introduction of a new sweeper in version 0.18.0 marks a pivotal development in managing transaction fees and enhancing security against specific attack vectors, such as replacement cycling and HTLC expiry bribe attacks. By setting fee budgets proportional to HTLC values, this methodology aims to deter attackers by making such strategies economically unfeasible. The update incorporates a sophisticated fee bumping mechanism that dynamically adjusts fees based on the urgency and economic constraints of each transaction. This system not only addresses vulnerabilities found in previous versions but also introduces a more calculated approach to handling transactions, improving upon reliance on external estimators and simplifying the fee bumping process.

These developments signify a broader effort within the Lightning Network community to refine on-chain logic, prioritize transaction urgency through a structured framework, and secure the network against evolving threats. By integrating budget-aware mechanisms and leveraging detailed analysis of mempool conditions, these improvements represent a step forward in achieving a more reliable, efficient, and secure Lightning Network.</summary>
    <published>2025-03-13T16:41:31.265000+00:00</published>
  </entry>
</feed>
