<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>How to linearize your cluster</title>
  <updated>2025-03-27T02:26:57.075873+00:00</updated>
  <author>
    <name>stefanwouldgo 2025-03-26 11:36:40.066000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>How to linearize your cluster</title>
    <updated>2025-03-27T02:26:57.075902+00:00</updated>
    <link href="https://delvingbitcoin.org/t/how-to-linearize-your-cluster/303/61" rel="alternate"/>
    <summary>The discussion revolves around a proposed method for merging transaction linearizations within a blockchain mempool to enhance efficiency and thwart denial-of-service (DoS) attacks. The suggested rule involves integrating received linearizations with existing ones, ensuring the new combination surpasses the current cluster's quality without violating anti-DoS protocols. This approach, however, raises concerns about potential exploitation by attackers who could append additional transactions to the cluster. These appended transactions, offering significant linearization benefits when combined with new honest transactions, could ostensibly improve the mempool's overall state, albeit at a cost comparable to legitimate transactions.

An attacker's ability to fee-bump transactions – essentially offering higher transaction fees to prioritize their own transactions over others – is highlighted as a potential strategy to make an honest transaction appear less beneficial or not significantly better than the existing pool of transactions. This scenario depicts a form of competition where the attacker, by virtue of arriving first and paying higher fees, can influence the transaction relay process. Despite this, the system is designed to eventually inform the original transaction sender of any such manipulative additions, allowing them to recompute and resubmit their transaction with an improved linearization.

The discourse further delves into the technical feasibility of this approach, contemplating whether the dynamic nature of receiving transactions online simplifies the challenge. Since new transactions can only depend on existing clusters in the mempool and not vice versa, it questions the possibility of encountering linearizations that are superior to those derived by merging new transactions with the current cluster configurations. This speculation rests on the assumption that the inherent structure of transaction dependencies might inherently limit the emergence of more optimal linearizations than those achievable through direct merging strategies.</summary>
    <published>2025-03-26T11:36:40.066000+00:00</published>
  </entry>
</feed>
