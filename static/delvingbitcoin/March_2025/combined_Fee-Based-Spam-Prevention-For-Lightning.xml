<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Fee-Based Spam Prevention For Lightning</title>
  <updated>2025-03-22T02:27:15.064479+00:00</updated>
  <author>
    <name>JohnLaw 2025-03-21 21:08:20.002000+00:00</name>
  </author>
  <author>
    <name>harding  . 2025-03-18 15:11:31.870000+00:00</name>
  </author>
  <author>
    <name>JohnLaw  . 2025-03-14 23:58:49.861000+00:00</name>
  </author>
  <link href="delvingbitcoin/March_2025/4586_Fee-Based-Spam-Prevention-For-Lightning.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4568_Fee-Based-Spam-Prevention-For-Lightning.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2025/4541_Fee-Based-Spam-Prevention-For-Lightning.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Fee-Based Spam Prevention For Lightning</title>
    <updated>2025-03-22T02:27:15.064525+00:00</updated>
    <link href="https://delvingbitcoin.org/t/fee-based-spam-prevention-for-lightning/1524" rel="alternate"/>
    <summary>The discussion highlights a complex issue within the Lightning Network (LN) concerning the management and resolution of Hash Time-Locked Contracts (HTLCs), particularly focusing on the challenges posed by nodes that delay in responding to HTLCs. This delay can force the initiating node into a difficult position, where they must choose between accruing excessive hold fees or initiating an on-chain transaction to close the channel, which also incurs costs and does not guarantee a success fee. A detailed example illustrates a potential exploit involving two nodes controlled by Mallory, creating a financial burden for Bob through upfront fees, inflated hold fees, and the costs associated with a forced channel closure. Additionally, the risk of such manipulations extends to Just-In-Time (JIT) channels, which could see Lightning Service Providers (LSPs) unfairly saddled with hold fees due to fraudulent activities aimed at triggering double spends.

In response to these issues, proposals have been made to refine the LN's fee structure to more accurately reflect the services provided by nodes and to mitigate spam and inefficiencies. Building on initial suggestions by Jager and Teinturier for Upfront Fees and Time-Dependent Reverse Hold Fees, further enhancements include the use of secrets for payment confirmation and burn outputs to prevent fee theft and encourage cooperative behavior among nodes. These revised protocols introduce a fee system comprising Upfront Fees, Hold Fees, and Success Fees, each designed to cover specific costs and incentivize efficient network participation. The innovative use of a burn output within channel transactions aims to ensure fair fee distribution by risking the funds being irretrievably lost unless parties adhere to agreed divisions.

Two distinct methods for calculating Upfront Fees are proposed to balance fee allocation with privacy concerns, employing either hash preimages or discrete logarithms depending on the desired level of confidentiality. Furthermore, the approach to calculating Hold Fees involves staking maximum potential fees against anticipated delays, with the actual fees adjusted based on the length of any delay exceeding a predefined grace period. This system seeks to fairly compensate nodes for delayed capital without penalizing them for delays outside their control. The risk of fund burning is addressed through measures such as protocol adherence, nonvolatile logging, and third-party packet transmission to differentiate failure modes.

Overall, the advanced protocols aim to provide a comprehensive framework for fee assignment within the LN, addressing key objectives such as reducing spam and enhancing network performance. These efforts signify important progress towards realizing a more secure, efficient, and cooperative ecosystem within the Lightning Network.</summary>
    <published>2025-03-21T21:08:20.002000+00:00</published>
  </entry>
</feed>
