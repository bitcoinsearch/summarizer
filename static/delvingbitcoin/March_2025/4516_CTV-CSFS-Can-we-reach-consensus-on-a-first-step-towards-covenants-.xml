<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CTV+CSFS: Can we reach consensus on a first step towards covenants?</title>
  <updated>2025-03-14T02:25:48.277564+00:00</updated>
  <author>
    <name>stevenroose 2025-03-13 16:40:26.673000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CTV+CSFS: Can we reach consensus on a first step towards covenants?</title>
    <updated>2025-03-14T02:25:48.277591+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ctv-csfs-can-we-reach-consensus-on-a-first-step-towards-covenants/1509/31" rel="alternate"/>
    <summary>The discussion revolves around the deployment of taproot and its implications on future consensus upgrades, specifically focusing on Conditional Transaction Outputs (CTV) and CheckTemplateVerify (CTV) alongside CoinSwap Feature Set (CSFS). The concern raised points towards a shift in the criteria for accepting soft fork upgrades from technical merit to practical usage. This shift raises questions about whether the technical merits of CTV and CSFS are overlooked or deemed insufficient without evident practical application. Furthermore, it's highlighted that if a project cannot attract even one dedicated individual willing to invest time into what is considered a "moonshot" project, its feasibility and potential impact might be overestimated.

A significant point of contention mentioned is the portrayal of "covenants" within CTVâ€™s description, particularly the concern around "recursive covenants" which seem to clash with the co-activation of CSFS. It's suggested that a straightforward initial step could be to amend BIP 119 to address these concerns more accurately. However, there's an expressed frustration regarding the focus on the motivational section of the BIP, questioning the constructive nature of such a critique. An alternative proposition involves discarding BIP 119 entirely in favor of a new proposal that could potentially offer a more efficient solution through a simplified TXHASH BIP, although this idea seems to suffer from a lack of feedback and engagement from the community.

The conversation also touches upon the practical limitations of using CTV in specific scenarios, such as Liquid's pegin addresses system. It's argued that while CTV may not suit situations where users need to send varying amounts to a single address, it functions well when transactions are managed by software. This approach could eliminate the need for certain interactions, making fund recovery possible via mnemonic phrases, something currently unachievable due to the necessity of cosignature in transaction exits. Additionally, it's noted that while TXHASH can ensure input and output amounts match in single-input transactions, it falls short in scenarios requiring the sum of multiple inputs to equal the sum of outputs, indicating a possible area for further development or consideration.</summary>
    <published>2025-03-13T16:40:26.673000+00:00</published>
  </entry>
</feed>
