<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>LND's Deadline-Aware Budget Sweeper</title>
  <updated>2025-03-14T02:26:58.753495+00:00</updated>
  <author>
    <name>morehouse 2025-03-13 15:31:06.716000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>LND's Deadline-Aware Budget Sweeper</title>
    <updated>2025-03-14T02:26:58.753545+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lnds-deadline-aware-budget-sweeper/1512/4" rel="alternate"/>
    <summary>In the realm of blockchain transactions, specifically within the context of Lightning Network (LN) nodes, the strategy for determining transaction fees is nuanced. The typical method involves using the `estimateSmartFee` function with a specific confirmation target (`conf_target`) that represents the desired number of blocks within which the transaction should be confirmed. A common misconception is that setting this target to its lowest value (e.g., `1`) will result in the transaction confirming "as soon as possible" (ASAP). However, this approach may not always yield the fastest confirmation times and could lead to unnecessarily high fees.

Lightning Network nodes prioritize both the timeliness of confirmations and the minimization of transaction fees. While instant confirmations are seldom necessary, achieving confirmation within a predetermined number of blocks without exceeding a certain fee threshold is crucial, especially as deadlines approach. This delicate balance underscores the potential disconnect between the intended use of fee estimators and their actual application by LN nodes. It's noteworthy that even when an estimator predicts a transaction will confirm within a specified block count, delays that extend beyond this estimate can have significant implications—both operationally and financially—for LN nodes.

To address these challenges, some nodes adopt more aggressive strategies, such as exponential fee bumping, particularly as deadlines loom closer. This approach contrasts with more passive methods and highlights the limitations of current fee estimation tools under certain conditions, like network congestion or malicious activity aimed at disrupting transaction confirmations.

The ongoing development of Bitcoin Core's fee estimation tool aims to refine its accuracy and utility for LN node operators. By providing insights into historical mempool conditions, the improved estimator offers a more informed basis for decision-making ([Fee Estimation via Fee rate Forecasters tracking issue · Issue 30392 · bitcoin/bitcoin · GitHub](https://github.com/bitcoin/bitcoin/issues/30392issuecomment-2717491587)). Despite these enhancements, reliance on third-party estimators remains prevalent among LN node operators, underscoring the inherent uncertainty and limitations of predicting transaction confirmations. In scenarios where network conditions are volatile or adversarial actions threaten transaction throughput, a simple yet effective budget-based fee bumping strategy might offer a more reliable solution for ensuring timely confirmations within the constraints of available financial resources.</summary>
    <published>2025-03-13T15:31:06.716000+00:00</published>
  </entry>
</feed>
