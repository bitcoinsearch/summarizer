<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Disclosure: LND Excessive Failback Exploit</title>
  <updated>2025-03-31T02:40:32.122132+00:00</updated>
  <author>
    <name>ariard 2025-03-30 20:35:16.971000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Disclosure: LND Excessive Failback Exploit</title>
    <updated>2025-03-31T02:40:32.122170+00:00</updated>
    <link href="https://delvingbitcoin.org/t/disclosure-lnd-excessive-failback-exploit/1493/8" rel="alternate"/>
    <summary>In the discussion regarding BOLT5, it is highlighted that terminology such as "downstream" or "upstream" is not utilized, emphasizing that lightning channels maintain bidirectional functionality at all times unless specifically configured otherwise, for example, by setting `announce_for_forwarding=false` in rust-lightning. This detail underlines the inherent flexibility and adaptability of lightning channels in managing transaction directions and conditions.

A noteworthy point raised concerns the handling of HTLCs (Hashed Time-Locked Contracts), particularly in scenarios where there are both 'offered' and 'received' HTLCs pending. This situation introduces a potential for nodes to manipulate the feerate cost of a commitment transaction. Nonetheless, it was clarified that, in the discussed scenario, HTLCs were intended to flow from Mallory to Mallet, correcting a previous statement.

Furthermore, the conversation touches on the procedural aspects dictated by BOLTs (Basis of Lightning Technology specifications) regarding the relay of preimages. It specifies that once a preimage is obtained (downstream), it must be relayed upstream immediately. This procedure involves extracting preimages downstream and sending `update_fulfill_htlc` upstream without altering the requirements for a node to force-close upstream if its `update_fulfill_htlc` is not acknowledged.

The dialogue also addresses a pre-existing issue, which predates the changes in BOLTs, related to the mandate that nodes must fulfill the corresponding incoming HTLC as soon as the preimage is known. This is required without awaiting a final `revoke_and_ack` from the peer or confirmation that a local or remote commitment transaction has been sufficiently confirmed in the blockchain. This adjustment aims to streamline and secure the process of HTLC fulfillment, ensuring timely and efficient transaction confirmations within the lightning network framework.</summary>
    <published>2025-03-30T20:35:16.971000+00:00</published>
  </entry>
</feed>
