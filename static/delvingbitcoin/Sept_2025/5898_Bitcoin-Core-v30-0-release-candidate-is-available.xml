<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Bitcoin Core v30.0 release candidate is available</title>
  <updated>2025-09-18T02:27:00.957714+00:00</updated>
  <author>
    <name>jsarenik 2025-09-17 14:14:25.123000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Bitcoin Core v30.0 release candidate is available</title>
    <updated>2025-09-18T02:27:00.957743+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bitcoin-core-v30-0-release-candidate-is-available/1980/2" rel="alternate"/>
    <summary>The discussion revolves around the considerable time and resources required to rebuild Coinstatsindex on pruned nodes equipped with low-power CPUs, emphasizing the challenge due to the inherent slow process akin to any Initial Block Download (IBD). This scenario underscores the need for a more efficient solution to update or migrate Coinstatsindex without redoing the entire process from scratch, particularly in environments constrained by power failures. 

A proposed solution involves creating a migration script that leverages the synchronization of muhash with a recent one known to be accurate. An example is provided to illustrate the feasibility of this approach, showcasing a comparison between the muhash values from an older version of coinstatsindex and those from a pruned node running a more recent software version, specifically 29.1. The shared output details include critical blockchain statistics such as block height, the best block hash, total number of transaction outputs (txouts), bogosize, muhash value, total amount of Bitcoin, and total unspendable amount, alongside specific block information like prevout spent, coinbase, new outputs excluding coinbase, and categories of unspendable amounts.

This concept suggests that if muhash remains in sync, it could allow for a smoother and quicker migration or update process for Coinstatsindex, especially on systems constrained by hardware capabilities or operational environments prone to power disruptions. By utilizing a script that identifies and aligns with recent, known-good muhash values, it may circumvent the otherwise lengthy and resource-intensive process of rebuilding the index from the ground up under challenging conditions.</summary>
    <published>2025-09-17T14:14:25.123000+00:00</published>
  </entry>
</feed>
