<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Stealth addresses using nostr</title>
  <updated>2025-09-18T02:26:36.895666+00:00</updated>
  <author>
    <name>AdamISZ 2025-09-17 20:21:08.582000+00:00</name>
  </author>
  <author>
    <name>1440000bytes 2025-09-17 10:58:14.858000+00:00</name>
  </author>
  <author>
    <name>AdamISZ  . 2025-09-15 18:38:45.887000+00:00</name>
  </author>
  <author>
    <name>bytes  . 2025-07-09 17:13:25.556000+00:00</name>
  </author>
  <link href="delvingbitcoin/Sept_2025/5909_Stealth-addresses-using-nostr.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2025/5891_Stealth-addresses-using-nostr.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2025/5878_Stealth-addresses-using-nostr.xml" rel="alternate"/>
  <link href="delvingbitcoin/July_2025/5419_Stealth-addresses-using-nostr.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Stealth addresses using nostr</title>
    <updated>2025-09-18T02:26:36.895717+00:00</updated>
    <link href="https://delvingbitcoin.org/t/stealth-addresses-using-nostr/1816" rel="alternate"/>
    <summary>The discussion focuses on a cryptographic method that enables Alice to create a new key for Bob, which she communicates via an encrypted message using NIP-17. The core of this conversation revolves around understanding the detailed equations and mechanisms involved in generating and notifying Bob about the new key. Specifically, it seeks clarification on how Bob's public key is utilized in the generation of a stealth public key, incorporating hash functions and elliptic curve cryptography to ensure secure exchanges. This method suggests a sophisticated approach to cryptographic security, potentially streamlining the process for Bob by minimizing the need for direct scanning of transactions, thereby enhancing efficiency.

Furthermore, the conversation delves into the Nostr protocol, which employs cryptographic techniques similar to those used in Bitcoin. This protocol enables users to generate new keys from `npub` and receive Bitcoin payments, addressing limitations identified in previous implementations such as BIP 47 version 1. By allowing Alice to notify Bob of a new key through an encrypted NIP-17 message, Nostr aims to improve user experience by eliminating the need for OP_RETURN notifications and reducing the computational demands associated with scanning for silent payments. A proposal for a new BIP or NIP could formalize this stealth payment notification system, offering a structured method to enhance privacy in Bitcoin transactions.

Additionally, the proof of concept provided through Python code examples illustrates the practical application of generating stealth keys within the Nostr framework. This includes the creation of both stealth public and private keys based on shared secrets, along with functions for validating hex keys and generating random keypairs. These examples demonstrate Nostr's potential to augment Bitcoin's privacy features by providing developers with the tools needed to incorporate stealth payment capabilities into their applications. This initiative not only aims to protect user identities and financial data but also encourages further innovation in the realm of cryptocurrency payments and privacy enhancements.</summary>
    <published>2025-09-17T20:21:08.582000+00:00</published>
  </entry>
</feed>
