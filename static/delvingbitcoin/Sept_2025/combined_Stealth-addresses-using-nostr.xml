<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Stealth addresses using nostr</title>
  <updated>2025-09-19T02:26:19.063495+00:00</updated>
  <author>
    <name>1440000bytes 2025-09-18 07:56:53.710000+00:00</name>
  </author>
  <author>
    <name>AdamISZ  . 2025-09-17 20:21:08.582000+00:00</name>
  </author>
  <author>
    <name>bytes  . 2025-09-17 10:58:14.858000+00:00</name>
  </author>
  <author>
    <name>AdamISZ  . 2025-09-15 18:38:45.887000+00:00</name>
  </author>
  <author>
    <name>bytes  . 2025-07-09 17:13:25.556000+00:00</name>
  </author>
  <link href="delvingbitcoin/Sept_2025/5912_Stealth-addresses-using-nostr.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2025/5909_Stealth-addresses-using-nostr.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2025/5891_Stealth-addresses-using-nostr.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2025/5878_Stealth-addresses-using-nostr.xml" rel="alternate"/>
  <link href="delvingbitcoin/July_2025/5419_Stealth-addresses-using-nostr.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Stealth addresses using nostr</title>
    <updated>2025-09-19T02:26:19.063551+00:00</updated>
    <link href="https://delvingbitcoin.org/t/stealth-addresses-using-nostr/1816" rel="alternate"/>
    <summary>The conversation delves into the intricacies of using `npub` keys in the context of Nostr and Bitcoin payments, focusing on the generation of new keys for securing transactions. The main inquiry revolves around the use of `$B$` as an `npub` key and similarly, whether `A` serves a similar purpose, though it’s noted that sending `A` might not always be necessary, depending on the protocol's requirements.

In the realm of secure communications, Alice and Bob utilize their private and public keys to create a shared secret, ensuring their exchanges remain confidential. Alice's public key `A` is derived from her private key through multiplication with a generator point `G`, a method also used by Bob to generate his public key `B`. This shared secret, pivotal for cryptographic operations, can be represented in multiple forms, facilitating the creation of stealth keys for enhanced privacy in transactions. The stealth public key `P` combines Bob's public key with the hash of the shared secret and a counter, enabling anonymous transactions without exposing actual keys.

The proposal under discussion suggests a cryptographic mechanism where Alice communicates a new key to Bob using NIP-17 encryption, indicating a sophisticated blend of hash functions and elliptic curve cryptography for secure key exchanges. This approach aims to streamline Bob’s process of monitoring transactions by maintaining a batch of addresses for Alice, thus circumventing the need for direct scanning and reducing computational overhead.

Nostr’s cryptographic solution builds on Bitcoin’s techniques, offering an improvement over BIP 47 by eliminating the need for OP_RETURN notifications and enhancing user experience with silent payments scanning. A potential BIP or NIP could formally introduce this method, providing a structured framework for stealth payment notifications. The proof of concept includes Python code examples demonstrating the generation and use of stealth keys within Nostr, highlighting its potential for enhancing Bitcoin privacy features. Through these examples, developers are shown how to facilitate private transactions, generating both stealth public and private keys based on shared secrets. This initiative not only underscores Nostr’s capability to advance privacy in cryptocurrency payments but also serves as a foundational tool for developers to innovate further in this space.</summary>
    <published>2025-09-18T07:56:53.710000+00:00</published>
  </entry>
</feed>
