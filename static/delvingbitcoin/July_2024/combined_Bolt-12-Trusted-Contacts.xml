<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Bolt 12 Trusted Contacts</title>
  <updated>2024-09-03T02:11:37.931761+00:00</updated>
  <author>
    <name>Vincenzo Palazzo 2024-09-02 15:06:10.533000+00:00</name>
  </author>
  <author>
    <name>tbast  . 2024-08-09 07:01:37.418000+00:00</name>
  </author>
  <author>
    <name>David Harding  . 2024-08-07 14:12:45.195000+00:00</name>
  </author>
  <author>
    <name>tbast  . 2024-08-07 10:28:25.289000+00:00</name>
  </author>
  <author>
    <name>David Harding  . 2024-08-05 20:53:19.731000+00:00</name>
  </author>
  <author>
    <name>tbast  . 2024-07-30 15:12:09.428000+00:00</name>
  </author>
  <link href="delvingbitcoin/Sept_2024/3089_Bolt-12-Trusted-Contacts.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/2930_Bolt-12-Trusted-Contacts.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/2926_Bolt-12-Trusted-Contacts.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/2925_Bolt-12-Trusted-Contacts.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/2917_Bolt-12-Trusted-Contacts.xml" rel="alternate"/>
  <link href="delvingbitcoin/July_2024/2905_Bolt-12-Trusted-Contacts.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Bolt 12 Trusted Contacts</title>
    <updated>2024-09-03T02:11:37.931823+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bolt-12-trusted-contacts/1046/6" rel="alternate"/>
    <summary>The discussion delves into various facets of implementing secure and user-friendly cryptocurrency payment systems, specifically focusing on how to manage contacts and authenticate payments. It kicks off with a scenario that underscores potential vulnerabilities when associating contact information with payment codes. The example posits a situation where Alice could be misled into associating an attacker's key with a trusted contact, Bob, thereby raising concerns about the security and clarity of wallet designs in preventing such deceptive associations.

Further, the conversation explores the implications of compromised contact keys, especially for entities dealing with numerous customers via a single key. A breach involving a contact key not only signifies a significant security risk but also necessitates informing users about the change in key, akin to procedures followed during password compromises. This highlights a broader issue of managing multiple keys or offers for a single contact within wallets, suggesting that while flexibility exists, it also introduces challenges in user education regarding payment security.

Moreover, the dialogue addresses concerns over phishing attacks within payment systems, particularly the risk posed by attackers manipulating the process of adding contacts to forge trust. An illustrative UI scenario describes how Alice might add Bob as a contact upon making a payment, potentially opening avenues for attackers like Mallory to deceive users into associating their key with another person's name through misleading offers. This raises questions about the system's overall safety and efficiency, suggesting that educating users on trusting only the payment amount might be a simpler and more secure approach.

Additionally, the discussion touches on the utility and security concerns of allowing users to specify the originator of a payment through a simple text `from` field. While acknowledging the convenience this feature might offer, such as in cases where payments are made on behalf of others, it also points out the vulnerability to impersonation attacks this might entail. The conversation advocates for a careful balance between convenience and security, emphasizing the importance of mutual authentication in financial transactions.

Bolt 12 is brought up as a notable advancement in user experience for lightning wallets, introducing the possibility of attaching offers to metadata for easier management of contacts and invoice-less payments. However, the challenge lies in preserving privacy and ensuring mutual authentication amidst this convenience. The post discusses methods for distributing `contact_key`s to facilitate this, weighing the pros and cons of incorporating new TLV fields or utilizing optional query parameters in BIP21 URIs. The discourse solicits feedback on refining [bLIP 42](https://github.com/lightning/blips/pull/42) to achieve a standard that bolsters user experience without compromising on privacy or security, underscoring the ongoing dialogue within the developer community to address these complex issues.</summary>
    <published>2024-09-02T15:06:10.533000+00:00</published>
  </entry>
</feed>
