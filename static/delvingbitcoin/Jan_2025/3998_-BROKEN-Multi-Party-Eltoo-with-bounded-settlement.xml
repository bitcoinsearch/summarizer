<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BROKEN] Multi-Party Eltoo with bounded settlement</title>
  <updated>2025-01-08T02:29:52.201831+00:00</updated>
  <author>
    <name>cdecker 2025-01-07 09:18:59.566000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BROKEN] Multi-Party Eltoo with bounded settlement</title>
    <updated>2025-01-08T02:29:52.201867+00:00</updated>
    <link href="https://delvingbitcoin.org/t/broken-multi-party-eltoo-with-bounded-settlement/1364/4" rel="alternate"/>
    <summary>In the discussion of channel finalization and potential delays caused by attackers, several key points emerge regarding the dynamics between attackers and victims within a blockchain context. The primary strategy for an attacker might involve publishing an outdated update in hopes of disrupting the finalization process. However, this approach seems to have limited effectiveness due to the ability of the victim to respond without delay, creating two versions of their latest update: one tied to the funding source and the other to the update broadcasted by the attacker. This mechanism allows for multiple possible outcomes, none of which significantly benefit the attacker. 

If the attacker's old update is confirmed, the victim's response, prepared in advance, may also be confirmed within the same block, rendering the attack futile as it neither delays nor advantages the attacker financially. Conversely, if the victim's latest update is confirmed, the attacker neither gains nor loses anything, barring the possibility of iteration which does not inherently favor the attacker unless they possess the capability to monopolize block space. 

A nuanced scenario involves potential collusion between a miner and the attacker, aiming for a silent attack that deprives the victim of the opportunity to respond timely. This tactic, however, hinges on the attacker's ability to commandeer a majority and the strategic selection of timeout periods, suggesting that without these conditions, indefinite censorship is unachievable. Furthermore, it's highlighted that any system reliant on timelocks or CSV (CheckSequenceVerify) mechanisms remains vulnerable under such a collusion model, underscoring a broader vulnerability in systems dependent on these technologies.</summary>
    <published>2025-01-07T09:18:59.566000+00:00</published>
  </entry>
</feed>
