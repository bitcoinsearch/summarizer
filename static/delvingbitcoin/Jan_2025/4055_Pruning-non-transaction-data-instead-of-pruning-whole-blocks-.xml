<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pruning non-transaction data instead of pruning whole blocks?</title>
  <updated>2025-01-15T02:16:03.300005+00:00</updated>
  <author>
    <name>sjors 2025-01-14 13:37:09.603000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pruning non-transaction data instead of pruning whole blocks?</title>
    <updated>2025-01-15T02:16:03.300038+00:00</updated>
    <link href="https://delvingbitcoin.org/t/pruning-non-transaction-data-instead-of-pruning-whole-blocks/1385/2" rel="alternate"/>
    <summary>The discussion revolves around the technical challenges and considerations in managing blockchain data storage, specifically within the Bitcoin network. One key issue highlighted is the problem of fragmentation caused by removing parts of a block. It's generally impractical to retain incomplete blocks since they cannot be shared with peers, undermining the decentralized nature of the network. However, an exception exists for blocks stripped of witness data, which remain shareable. This concept is further explored in a proposed pull request aimed at implementing such functionality, detailed at [https://github.com/bitcoin/bitcoin/pull/27050](https://github.com/bitcoin/bitcoin/pull/27050).

Another significant concern addressed is the potential for unwanted data to be permanently stored on a user's hard drive via the non-witness portions of a block. This scenario is exemplified by practices like those of Counterparty and STAMPS, which embed data within a `scriptPubKey` of a bare multisig transaction. Such data becomes part of the UTXO set, residing in the `chainstate` directory, and is not removable through conventional pruning processes due to its inclusion in the blockchain's critical transactional infrastructure. These entries may persist indefinitely if the outputs are never spent, leading to permanent, potentially undesirable data accumulation on storage devices.

The text introduces Utreexo as a viable solution to this issue, suggesting that it could effectively eliminate undesired data from a user's hard drive, aligning with the goal of maintaining a clean and efficient storage system for blockchain data. Utreexo offers a promising approach to mitigating the challenges associated with blockchain data management, particularly in addressing concerns over the permanence of specific data types embedded within the blockchain structure.</summary>
    <published>2025-01-14T13:37:09.603000+00:00</published>
  </entry>
</feed>
