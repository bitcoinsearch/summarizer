<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [BROKEN] Multi-Party Eltoo with bounded settlement</title>
  <updated>2025-01-08T02:30:07.641120+00:00</updated>
  <author>
    <name>instagibbs 2025-01-07 14:20:15.500000+00:00</name>
  </author>
  <author>
    <name>cdecker 2025-01-07 11:57:23.058000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2025-01-07 11:00:47.413000+00:00</name>
  </author>
  <author>
    <name>cdecker 2025-01-07 09:18:59.566000+00:00</name>
  </author>
  <link href="delvingbitcoin/Jan_2025/4006_-BROKEN-Multi-Party-Eltoo-with-bounded-settlement.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2025/4001_-BROKEN-Multi-Party-Eltoo-with-bounded-settlement.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2025/4000_-BROKEN-Multi-Party-Eltoo-with-bounded-settlement.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2025/3998_-BROKEN-Multi-Party-Eltoo-with-bounded-settlement.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [BROKEN] Multi-Party Eltoo with bounded settlement</title>
    <updated>2025-01-08T02:30:07.641169+00:00</updated>
    <link href="https://delvingbitcoin.org/t/broken-multi-party-eltoo-with-bounded-settlement/1364/4" rel="alternate"/>
    <summary>The discussion revolves around the effectiveness and potential countermeasures against specific types of attacks on blockchain transaction finalization. One such attack involves stalling transactions through a method similar to replacement cycling, where an attacker submits bids to delay transactions but is limited by the blockchain's structure to one bid per block without prior knowledge of the mempool. This strategy is deemed relatively weak as it can quickly become economically unviable for the attacker, given that the defender can counteract with minimal expense even without insight into the mempool.

The conversation also touches upon the complexity of keeping transactions hidden from specific victims. The feasibility of such an endeavor is questioned, considering it a significant challenge due to various factors, including the presence of watchtowers. Watchtowers, acting as guardians of the network, reduce the success rate of these hidden transaction attacks by alerting parties of unconfirmed transactions. If a hidden transaction is detected before being mined, the intended victim can preemptively react within the same block. This introduces a game-theoretic element, where attempting to cheat carries indirect penalties due to the need for attackers to commit more funds if their initial attempt is thwarted.

Further analysis delves into how attackers might delay the finalization of channels by broadcasting transactions unseen by the victim directly to miners. This would entail publishing and updating states at each new block height with a higher fee rate than the victim's proposed transaction updates. However, this method's effectiveness is limited, especially with robust watchtower mechanisms that monitor the mempool and inform users of pertinent transactions. 

In situations where an attacker tries to finalize an outdated transaction state, the victim has strategies to counter such moves without being hindered by time locks or similar constraints. By preparing responses to any state the attacker might try to publish, the victim ensures that either outcome (the attacker's old update succeeding or the victim's latest update being confirmed) does not advantage the attacker. This scenario posits a continuous battle of attrition unless the attacker possesses the capability to monopolize block creation. Collaboration between an attacker and a miner presents a nuanced threat, potentially depriving the victim of immediate response opportunities. Nonetheless, the consensus is that such collusion would not indefinitely prevent responses unless the attacker controls a majority. Additionally, the inherent limitations of timelocks and CSV in providing security against these coordinated attacks are acknowledged.</summary>
    <published>2025-01-07T14:20:15.500000+00:00</published>
  </entry>
</feed>
