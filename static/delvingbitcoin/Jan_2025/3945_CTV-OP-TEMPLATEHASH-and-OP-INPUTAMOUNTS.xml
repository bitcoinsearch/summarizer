<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CTV++ OP_TEMPLATEHASH and OP_INPUTAMOUNTS</title>
  <updated>2025-01-04T02:20:59.874066+00:00</updated>
  <author>
    <name>1440000bytes 2025-01-03 16:08:13.072000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CTV++ OP_TEMPLATEHASH and OP_INPUTAMOUNTS</title>
    <updated>2025-01-04T02:20:59.874098+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ctv-op-templatehash-and-op-inputamounts/1344/9" rel="alternate"/>
    <summary>OP_TEMPLATEHASH presents an intriguing aspect of programming, particularly when manipulated in specific ways, such as exploiting the outputs field, which might yield results akin to OP_PAIRCOMMIT. This manipulation opens up a discussion on its potential complexity and implications for CTV (CheckTemplateVerify). Previously, the simplicity and thorough review of CTV had precluded extensive debates or 'bikeshedding'. However, the exploration of OP_TEMPLATEHASH's capabilities suggests a shift towards more complex discussions surrounding its use and implementation, indicating a possible new phase of scrutiny and dialogue within the programming community.</summary>
    <published>2025-01-03T16:08:13.072000+00:00</published>
  </entry>
</feed>
