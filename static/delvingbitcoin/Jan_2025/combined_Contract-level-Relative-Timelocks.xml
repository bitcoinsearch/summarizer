<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Contract-level Relative Timelocks</title>
  <updated>2025-01-04T02:22:13.252449+00:00</updated>
  <author>
    <name>cguida 2025-01-03 22:02:29.608000+00:00</name>
  </author>
  <author>
    <name>JeremyRubin 2025-01-03 17:32:57.946000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2025-01-02 19:35:31.228000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2025-01-02 19:30:47.726000+00:00</name>
  </author>
  <link href="delvingbitcoin/Jan_2025/3953_Contract-level-Relative-Timelocks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2025/3949_Contract-level-Relative-Timelocks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2025/3919_Contract-level-Relative-Timelocks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2025/3924_Contract-level-Relative-Timelocks.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Contract-level Relative Timelocks</title>
    <updated>2025-01-04T02:22:13.252500+00:00</updated>
    <link href="https://delvingbitcoin.org/t/contract-level-relative-timelocks/1353/2" rel="alternate"/>
    <summary>The current discourse in the realm of blockchain technology, specifically concerning payment channels and transaction updates, introduces a nuanced examination of Contract-level Relative Timelock (CLRT) UTXO mechanisms. This is set against the backdrop of addressing inherent challenges within Eltoo constructs and the broader Lightning Network (LN). The primary concern revolves around ln-symmetry and the consequential prolonged lockup of funds due to the resetting of relative timelocks with every update transaction confirmation. This resetting undermines the utility of LN by extending HTLC expiry times.

A novel approach proposed to tackle this issue involves altering the conventional sequence of transactions from `funding-&gt;update-&gt;settle` to a new sequence that includes a "kickoff" phase (`funding-&gt;kickoff-&gt;update-&gt;settle`). This additional phase incorporates a CLRT output, committing to a relative delay for the eltoo challenge period before settlement can proceed. Crucially, this CLRT output must be spent alongside an eltoo state output, necessitating a recursive proof that links back to the state output of an update transaction. Such a design ensures that update transactions pre-commit to both the state outputs and the CLRT output, making their joint expenditure a prerequisite for settlement. Despite these innovations, the introduction of CLRT and the complexities surrounding TXID stability present potential challenges, including increased transaction costs, technical hurdles, and the risk posed by dishonest actors within the network.

John Law's contribution to this field is exemplified through his work on hierarchical channels, which integrates two types of relative timelocks via separate unspent transaction outputs (UTXOs). These timelocks facilitate distinct operational and security functions within the payment channels, harnessing TXID stability to manage timeouts efficiently. By creating dual "lanes" for the revocation of commitment transactions and handling HTLCs, Law's system ensures seamless progression of HTLC-payment transactions once the conditions of both relative timelocks are fulfilled. An interesting feature of this setup is the use of a dust output, serving primarily to exert control within the system. This methodology underscores a sophisticated application of txid stability, offering insights into improving transaction management and contractual fidelity in payment channels.

For further reading on the intricacies of contract-level relative timelocks, one can refer to a [detailed discussion](https://delvingbitcoin.org/t/contract-level-relative-timelocks/1353). Additionally, John Law's innovative designs and methodologies in the context of hierarchical channels and relative timelocks are accessible via his [GitHub repository](https://github.com/JohnLaw2/ln-hierarchical-channels), providing valuable resources for those interested in the technical evolution of blockchain transaction mechanisms.</summary>
    <published>2025-01-03T22:02:29.608000+00:00</published>
  </entry>
</feed>
