<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Fastest-possible PoW via Simple DAG</title>
  <updated>2025-01-03T02:20:49.056143+00:00</updated>
  <author>
    <name>zawy 2025-01-02 19:16:14.403000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Fastest-possible PoW via Simple DAG</title>
    <updated>2025-01-03T02:20:49.056174+00:00</updated>
    <link href="https://delvingbitcoin.org/t/fastest-possible-pow-via-simple-dag/1331/9" rel="alternate"/>
    <summary>The discussion focuses on a specific strategy in managing Bitcoin orphan rates, contrasting with an approach described by @sipa. The primary deviation lies in the targeted outcome; instead of aiming for a small percentage of orphans as suggested by @sipa, the current strategy seeks to influence the Bitcoin network by targeting a specific number of parent blocks (1.44). This tactic is aimed at affecting a 44% portion of blocks that would otherwise be orphaned, based on the premise that Bitcoinâ€™s orphan rate stands at approximately 0.04%. This rate aligns with the theoretical expectation derived from the equation e^(-latency/600), which estimates the likelihood of a block becoming orphaned in relation to network latency.</summary>
    <published>2025-01-02T19:16:14.403000+00:00</published>
  </entry>
</feed>
