<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Contract-level Relative Timelocks</title>
  <updated>2025-01-03T02:23:05.183602+00:00</updated>
  <author>
    <name>instagibbs 2025-01-02 19:30:47.726000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Contract-level Relative Timelocks</title>
    <updated>2025-01-03T02:23:05.183632+00:00</updated>
    <link href="https://delvingbitcoin.org/t/contract-level-relative-timelocks/1353/2" rel="alternate"/>
    <summary>John Law has incorporated two distinct relative timelocks into his payment channel constructions, as detailed in his work available on [GitHub](https://github.com/JohnLaw2/ln-hierarchical-channels). These timelocks, utilized via separate unspent transaction outputs (UTXOs), are crucial for the operation and security of the payment channels. The use of TXID stability is highlighted as a significant feature within this system.

The mechanism involving these timelocks creates dual "lanes" for managing timeouts: one specifically designed for the revocation of commitment transactions and the other for handling Hash Time-Locked Contracts (HTLCs), possibly also related to revocation processes. This structure ensures that once the conditions of both relative timelocks have been met, HTLC-payment transactions can proceed without the risk of one timelock resetting the duration of the other. An interesting aspect of this configuration is the designation of one output as a dust output, which serves no purpose other than to facilitate control within the system.

This method represents a relatively straightforward example of employing txid stability to enhance the functionality and reliability of payment channels, showcasing an innovative approach to managing transactions and contractual obligations within such networks.</summary>
    <published>2025-01-02T19:30:47.726000+00:00</published>
  </entry>
</feed>
