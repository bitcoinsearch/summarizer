<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Stats on compact block reconstructions</title>
  <updated>2025-01-24T02:16:10.194469+00:00</updated>
  <author>
    <name>ajtowns 2025-01-23 21:00:49.186000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Stats on compact block reconstructions</title>
    <updated>2025-01-24T02:16:10.194502+00:00</updated>
    <link href="https://delvingbitcoin.org/t/stats-on-compact-block-reconstructions/1052/13" rel="alternate"/>
    <summary>The discussion emphasizes the potential vulnerabilities in system architecture, particularly highlighting how certain design choices can significantly increase the risk of denial-of-service (DoS) attacks. These attacks are not just limited to bandwidth consumption but also extend to disk space filling, which can severely compromise system performance and reliability. To mitigate such risks, especially in the context of block relay processes, the conversation proposes several strategies aimed at optimizing data management and minimizing unnecessary resource usage.

One suggested approach involves imposing restrictions on the transactions that are retained for the purpose of avoiding round trips during block relay. Specifically, it is recommended to only keep transactions that were present in the mempool within the last 20 minutes and to limit the storage to the most recent 20MB of transactions. This method seeks to balance efficiency with security, ensuring that only relevant data is preserved without overburdening the system.

Furthermore, the dialogue suggests refining the selection criteria for transactions by focusing on those near the top of the mempool. This can be achieved through accurate tracking via a cluster mempool or by estimating the top of mempool fee rate and comparing it with the ancestor fee rate, thus retaining their ancestors. Such a targeted approach would allow for a more efficient use of memory, potentially eliminating the need for data persistence on disk. This strategy underscores the importance of intelligent data management in safeguarding against DoS attacks while maintaining system integrity and performance.</summary>
    <published>2025-01-23T21:00:49.186000+00:00</published>
  </entry>
</feed>
