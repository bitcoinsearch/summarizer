<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Emulating OP_RAND</title>
  <updated>2025-02-08T02:14:34.985251+00:00</updated>
  <author>
    <name>olkurbatov 2025-02-07 16:20:30.748000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2025-02-07 04:36:44.490000+00:00</name>
  </author>
  <author>
    <name>harding 2025-02-07 03:00:21.151000+00:00</name>
  </author>
  <author>
    <name>olkurbatov  . 2025-01-29 11:17:08.789000+00:00</name>
  </author>
  <link href="delvingbitcoin/Feb_2025/4221_Emulating-OP-RAND.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2025/4214_Emulating-OP-RAND.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2025/4212_Emulating-OP-RAND.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2025/4107_Emulating-OP-RAND.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Emulating OP_RAND</title>
    <updated>2025-02-08T02:14:34.985302+00:00</updated>
    <link href="https://delvingbitcoin.org/t/emulating-op-rand/1409" rel="alternate"/>
    <summary>The discussion revolves around a novel approach for incorporating randomness into Bitcoin transactions, circumventing the inherent limitations of the Bitcoin script which lacks direct support for randomness. This methodology enables the emulation of random events within the Bitcoin network without necessitating protocol updates or special scripts, thereby remaining invisible to external analysis. Central to this strategy is the implementation of a trustless interactive game, illustrated by a simple Thimbles Game, where fairness is maintained throughout without giving any participant an undue advantage.

Bitcoin's scripting language currently does not support operations that rely on randomness due to various constraints such as the inability to generate randomness at the point of transaction confirmation, inspect blocks or other transactions, ensure uniform state sharing post-operation, or control the determinism of cryptographic signatures. Furthermore, the absence of an OP_RAND opcode limits the creation of trustless systems within the Bitcoin protocol that directly leverage randomness.

The proposed Thimbles Game demonstrates how participants can lock in funds and engage in a sequence of steps involving the generation, selection, and revelation of values associated with thimbles, ensuring that neither party knows the other's chosen value until it is revealed. This mechanism allows for the fair claim of locked funds following a correct guess. The game exemplifies how the protocol can facilitate secure and fair games or applications that require randomness, without relying on external oracles or modifying Bitcoin's underlying protocol.

This innovative approach suggests a practical solution for introducing randomness into Bitcoin transactions in a way that is both trustless and transparent. It holds significant promise for the development of decentralized applications needing fair and unpredictable outcomes, all while operating within the existing framework of the Bitcoin infrastructure. The methodology's broad applicability could revolutionize how randomness is utilized in Bitcoin transactions, opening new avenues for developing secure, decentralized gaming and betting platforms without departing from the current Bitcoin protocol.</summary>
    <published>2025-02-07T16:20:30.748000+00:00</published>
  </entry>
</feed>
