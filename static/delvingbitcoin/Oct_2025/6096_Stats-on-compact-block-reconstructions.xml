<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Stats on compact block reconstructions</title>
  <updated>2025-10-17T02:26:40.371514+00:00</updated>
  <author>
    <name>ajtowns 2025-10-16 05:04:28.767000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Stats on compact block reconstructions</title>
    <updated>2025-10-17T02:26:40.371545+00:00</updated>
    <link href="https://delvingbitcoin.org/t/stats-on-compact-block-reconstructions/1052/43" rel="alternate"/>
    <summary>The discussion revolves around the evaluation of prefilling in the design of compact blocks. Initially, prefilling was incorporated into the design as a simple and seemingly harmless feature. However, subsequent testing after the deployment of compact blocks revealed that prefilling generally introduced more drawbacks than benefits. This insight is grounded in observations of recent block reconstructions, where it's noted that blocks often require an additional 100-4000 bytes of transaction data for complete reconstruction.

A potential solution to improve block reconstruction efficiency without necessitating additional round trips for data retrieval is proposed through the use of Forward Error Correction (FEC) chunks. By including approximately five FEC chunks, each sized at 1152 bytes, the majority of these blocks could be reconstructed more efficiently. This approach is considered advantageous because it avoids the complexity and risks associated with merging chunks from various sources, which might include both honest and adversarial inputs.

The effectiveness of using FEC chunks for this purpose, however, is contingent upon the distribution of missing transactions within the blocks. The concern is that even a small number of missing transactions, totaling around 1000 bytes, might be distributed across multiple FEC chunks. This distribution pattern complicates the reconstruction process, as each missing transaction could potentially require a different FEC chunk for correction, thereby diluting the efficacy of this strategy.</summary>
    <published>2025-10-16T05:04:28.767000+00:00</published>
  </entry>
</feed>
