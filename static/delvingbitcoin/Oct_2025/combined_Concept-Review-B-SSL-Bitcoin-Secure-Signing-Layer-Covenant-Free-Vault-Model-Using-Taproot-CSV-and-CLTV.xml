<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Concept Review: B-SSL (Bitcoin Secure Signing Layer) — Covenant-Free Vault Model Using Taproot, CSV, and CLTV</title>
  <updated>2025-10-19T02:49:14.981403+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0">
      <author>ilghan  .</author>
      <timestamp>2025-10-11 11:42:34.724000+00:00</timestamp>
    </message>
    <message id="msg_2" depth="0" position="1">
      <author>marathongary  .</author>
      <timestamp>2025-10-11 12:50:39.487000+00:00</timestamp>
    </message>
    <message id="msg_3" depth="0" position="2">
      <author>ilghan  .</author>
      <timestamp>2025-10-11 18:15:40.020000+00:00</timestamp>
    </message>
    <message id="msg_4" depth="0" position="3">
      <author>marathongary  .</author>
      <timestamp>2025-10-17 16:56:09.263000+00:00</timestamp>
    </message>
    <message id="msg_5" depth="0" position="4">
      <author>ilghan  .</author>
      <timestamp>2025-10-17 18:40:47.408000+00:00</timestamp>
    </message>
    <message id="msg_6" depth="0" position="5">
      <author>scoresby  .</author>
      <timestamp>2025-10-17 19:01:58.254000+00:00</timestamp>
    </message>
    <message id="msg_7" depth="0" position="6">
      <author>ilghan</author>
      <timestamp>2025-10-18 06:45:22.323000+00:00</timestamp>
    </message>
    <message id="msg_8" depth="0" position="7">
      <author>scoresby</author>
      <timestamp>2025-10-18 16:28:06.353000+00:00</timestamp>
    </message>
    <message id="msg_9" depth="0" position="8">
      <author>ilghan</author>
      <timestamp>2025-10-18 18:20:02.145000+00:00</timestamp>
    </message>
  </thread>
  <link href="delvingbitcoin/Oct_2025/6048_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2025/6049_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2025/6051_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2025/6102_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2025/6106_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2025/6107_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2025/6108_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2025/6109_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2025/6110_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Concept Review: B-SSL (Bitcoin Secure Signing Layer) — Covenant-Free Vault Model Using Taproot, CSV, and CLTV</title>
    <updated>2025-10-19T02:49:14.982647+00:00</updated>
    <link href="https://delvingbitcoin.org/t/concept-review-b-ssl-bitcoin-secure-signing-layer-covenant-free-vault-model-using-taproot-csv-and-cltv/2047/9" rel="alternate"/>
    <published>2025-10-11 11:42:34.724000+00:00</published>
    <summary>Francesco Madonna's introduction of the **B-SSL — Bitcoin Secure Signing Layer** marks a significant advancement in the realm of digital asset custody, particularly for Bitcoin. The design focuses on mitigating the risk of key loss without sacrificing self-custody capabilities, thereby enhancing transaction enforceability directly on the blockchain. By utilizing technologies like Taproot, `CHECKSEQUENCEVERIFY` (CSV), and `CHECKLOCKTIMEVERIFY` (CLTV), B-SSL proposes a secure framework through three distinct spending paths: user-initiated transactions, fallback recovery, and custodian recovery or inheritance protection. These paths ensure that users have various options to retrieve control over their assets in different scenarios. Moreover, the system's architecture, featuring mirrored backups for keys and an optional &quot;Convenience Service&quot; (CS) for implementing delays and sending secret notifications, aims to combat physical threats and coercion.
The whitepaper detailing B-SSL [can be found here](https://github.com/ilghan/bssl-whitepaper/tree/main), inviting community feedback to refine the concept further, especially concerning its Miniscript structure and operational safety features. This initiative underlines a collaborative approach to developing secure, self-custody solutions in the cryptocurrency domain.
Furthermore, the discussion touches upon the relevance and application of miniscripts, showcasing their utility in creating more secure, efficient, and scalable systems. Miniscripts offer a versatile toolset for developers, allowing for the implementation of complex logic in a streamlined manner while facilitating operations with distributed keys. This aligns with a broader shift towards decentralized security mechanisms in programming, catering to a wide range of applications beyond just security.
The novelty of B-SSL lies in its trustless key recovery system, aiming to bridge the gap between non-custodial and custodial services by offering a method of key recovery that maintains user privacy and asset security. Addressing the common fear of key loss, this innovation could significantly impact the accessibility and appeal of self-custody solutions. The developer envisions B-SSL as a transformative development, potentially democratizing the use of self-custody by ensuring users retain full control over their assets without the fear of losing access due to misplaced keys.
In the context of transaction processes within B-SSL, dual signatures are required for authorizing transactions, involving a user key and a secondary party. The role of the CheckSequenceVerify (CSV) timelock and its interaction with transaction authorization is explored, highlighting questions about the effectiveness of timelocks in securing transactions and managing wallet funds. Clarification provided on the purpose of signer C and the CSV timelock suggests a focus on preventing collusion among custodians and emphasizes the importance of viewing the system as a whole rather than in isolated parts. This comprehensive understanding is encouraged for fully grasping the innovative aspects of B-SSL, with an invitation extended to join a Bitcoin Optech audio recap discussion for further exploration.</summary>
  </entry>
</feed>