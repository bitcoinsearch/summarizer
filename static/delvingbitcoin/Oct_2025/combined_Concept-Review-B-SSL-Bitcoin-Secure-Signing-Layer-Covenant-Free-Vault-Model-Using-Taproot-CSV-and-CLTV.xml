<?xml version="1.0" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Concept Review: B-SSL (Bitcoin Secure Signing Layer) — Covenant-Free Vault Model Using Taproot, CSV, and CLTV</title>
  <updated>2025-10-12T02:28:16.468303+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <thread>
    <message id="msg_1" depth="0" position="0">
      <author>ilghan</author>
      <timestamp>2025-10-11 11:42:34.724000+00:00</timestamp>
    </message>
    <message id="msg_2" depth="0" position="1">
      <author>marathon-gary</author>
      <timestamp>2025-10-11 12:50:39.487000+00:00</timestamp>
    </message>
    <message id="msg_3" depth="0" position="2">
      <author>ilghan</author>
      <timestamp>2025-10-11 18:15:40.020000+00:00</timestamp>
    </message>
  </thread>
  <link href="delvingbitcoin/Oct_2025/6048_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2025/6049_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2025/6051_Concept-Review-B-SSL-Bitcoin-Secure-Signing-Layer-Covenant-Free-Vault-Model-Using-Taproot-CSV-and-CLTV.xml" rel="alternate"/>
  <entry>
    <id>2</id>
    <title>Combined summary - Concept Review: B-SSL (Bitcoin Secure Signing Layer) — Covenant-Free Vault Model Using Taproot, CSV, and CLTV</title>
    <updated>2025-10-12T02:28:16.469002+00:00</updated>
    <link href="https://delvingbitcoin.org/t/concept-review-b-ssl-bitcoin-secure-signing-layer-covenant-free-vault-model-using-taproot-csv-and-cltv/2047/3" rel="alternate"/>
    <published>2025-10-11 11:42:34.724000+00:00</published>
    <summary>Francesco Madonna introduces a novel vault construction concept known as **B-SSL — Bitcoin Secure Signing Layer**. This design is aimed at self-custody, leveraging existing Bitcoin primitives such as Taproot, `CHECKSEQUENCEVERIFY`, and `CHECKLOCKTIMEVERIFY` to address the issue of permanent key loss while ensuring on-chain enforceability without the need for covenants. The B-SSL framework outlines three distinct spending paths to secure Bitcoin transactions: a user-initiated path requiring either (A or A₁) + C after a configurable period ranging from 2 hours to 15 days, a fallback recovery path allowing A + B to spend after 1 year, and a custodian recovery or inheritance safeguard that permits (B or B₁) + C to spend after 3 years. Notably, A₁ and B₁ serve as mirrored backups for A and B, respectively. An optional off-chain &quot;Convenience Service&quot; can be employed to introduce delays and send secret notifications as a protective measure against physical threats or coercion.
The whitepaper detailing the B-SSL concept is available for peer review and discussion on [GitHub](https://github.com/ilghan/bssl-whitepaper/tree/main), with the objective of gathering feedback regarding its Miniscript structure, policy expressiveness, and operational safety. 
Madonna contrasts B-SSL with an existing system highlighted in a Miniscript template ([mint-005](https://github.com/Blockstream/miniscript-templates/blob/56916f60782bd9525b8d5b5b2959acb2efee038b/mint-005.md)), which focuses on joint custody coordination, making it suitable for institutional funds sharing. However, he points out that mint-005 does not address the critical issue of key loss in non-custodial setups. In contrast, B-SSL aims to offer a sovereign vault solution equipped with human fail-safes, positioning it as an ideal choice for individuals and companies seeking to maintain control over their keys without the risk of losing them, marking a potential breakthrough for Bitcoin's future.</summary>
  </entry>
</feed>