<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Witnessless Sync for Pruned Nodes</title>
  <updated>2025-10-03T02:22:42.927748+00:00</updated>
  <author>
    <name>JoseSK999 2025-10-02 19:49:14.098000+00:00</name>
  </author>
  <author>
    <name>gmaxwell 2025-05-31 20:19:40.088000+00:00</name>
  </author>
  <author>
    <name>JoseSK999 2025-05-31 16:19:33.254000+00:00</name>
  </author>
  <link href="delvingbitcoin/Oct_2025/5998_Witnessless-Sync-for-Pruned-Nodes.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2025/5181_Witnessless-Sync-for-Pruned-Nodes.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2025/5178_Witnessless-Sync-for-Pruned-Nodes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Witnessless Sync for Pruned Nodes</title>
    <updated>2025-10-03T02:22:42.927800+00:00</updated>
    <link href="https://delvingbitcoin.org/t/witnessless-sync-for-pruned-nodes/1742" rel="alternate"/>
    <summary>Recent analyses have revealed significant insights into the structure and optimization of blockchain technology, particularly within the Bitcoin network. A notable finding from the last four years shows that witnesses account for approximately 53% of all block data. This statistic becomes even more pertinent when considering proposals aimed at optimizing bandwidth usage, which is increasingly becoming a limiting factor for more nodes. The discussion around bandwidth reduction is tied closely to the efficiency of transaction serialization, which, if improved, could reduce bandwidth and storage needs by roughly a third.

The dialogue around blockchain efficiency and security took a notable turn with the exploration of skipping `assumed-valid` witness downloads for pruned nodes. Originally highlighted in the context of Segregated Witness (SegWit) benefits, the concept gained traction after a Stack Exchange question prompted further investigation. The subsequent proposal to implement this feature in Bitcoin Core raised concerns about potential security compromises. However, the analysis provided argues that such an approach could significantly reduce bandwidth usage—by over 40% during Initial Block Download (IBD)—without compromising security. These savings are not just theoretical; they represent hundreds of gigabytes of data that would not need to be transmitted, highlighting a substantial improvement in network efficiency.

The debate hinges on the security implications of not checking witness data availability during syncs. Critics of Witnessless Sync worry about the absence of direct verification for witness data. However, the counterargument presented rests on the assumption that if a block is marked as `assume-valid`, then its scripts—and by extension, its witnesses—must also be valid and available at some point. This logic suggests that the initial data availability check performed during IBD suffices for pruned nodes, making repeated checks unnecessary. This premise posits that Witnessless Sync would maintain the same level of security as traditional pruned nodes, which only undergo a one-time data availability verification.

For more detailed insights into the technicalities and implications of these findings, including the full analysis of Witnessless Sync's feasibility and security considerations, interested readers can refer to the comprehensive write-up available [here](https://gist.github.com/JoseSK999/df0a2a014c7d9b626df1e2b19ccc7fb1). This discourse underscores the evolving understanding of blockchain technology's capabilities and limitations, inviting further scrutiny and debate within the community.</summary>
    <published>2025-10-02T19:49:14.098000+00:00</published>
  </entry>
</feed>
