<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>BIP352 private key formats</title>
  <updated>2025-10-25T02:27:06.449438+00:00</updated>
  <author>
    <name>junderw 2025-10-25 00:43:40.738000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>BIP352 private key formats</title>
    <updated>2025-10-25T02:27:06.449474+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bip352-private-key-formats/2080" rel="alternate"/>
    <summary>In the exploration of enhancing support for Bitcoin payment solutions such as BTCPayServer with Schnorr Protocol (SP) compatibility, a significant technical discussion emerges around the integration methodology. The primary challenge lies in the effective encoding of a combination of scan private keys and spend public keys to facilitate seamless transactions, a necessity given the protocol's architecture and operational requirements. This aspect is crucial for enabling functionalities like BTCPayServer, which traditionally relies on extended public keys (xpubs), to accept SP-based transactions.

The discourse suggests an innovative approach towards defining a string format that can encapsulate various key combinations essential for SP operations. These combinations include the scan public plus spend master public key (B_scan + B_m), primarily defined in BIP352, alongside two additional configurations: the scan private plus spend master public key (b_scan + B_m) for delegated scanning, and the scan private plus spend private key (b_scan + b_spend) for executing spending operations and generating new SP addresses. Such a structured format aims to streamline the process, making it more intuitive and efficient for users and developers alike.

To accommodate these changes within the existing infrastructure, a modification of the Human-Readable Part (HRP) of addresses is proposed. Specifically, it involves altering the HRP to `spscan` and `tspscan` for delegated scanning addresses and to `sppriv` and `tsppriv` for all private key-related operations. This adjustment not only aids in differentiating between the types of operations and keys involved but also enhances the overall security and functionality of SP transactions within the cryptocurrency ecosystem.

This dialogue underscores the ongoing efforts and considerations within the developer community to refine and adapt cryptocurrency protocols and systems for broader application and usability. It reflects a proactive stance towards addressing the complexities and challenges inherent in integrating advanced cryptographic mechanisms into practical, user-oriented solutions like payment servers.</summary>
    <published>2025-10-25T00:43:40.738000+00:00</published>
  </entry>
</feed>
