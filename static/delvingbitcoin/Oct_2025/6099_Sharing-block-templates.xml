<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Sharing block templates</title>
  <updated>2025-10-18T02:20:55.820277+00:00</updated>
  <author>
    <name>ajtowns 2025-10-17 03:32:33.362000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Sharing block templates</title>
    <updated>2025-10-18T02:20:55.820316+00:00</updated>
    <link href="https://delvingbitcoin.org/t/sharing-block-templates/1906/24" rel="alternate"/>
    <summary>In recent explorations of blockchain technology, particularly focusing on transaction management within the Bitcoin network, some insights have emerged from experimenting with mainnet transactions between two peers. These experiments aimed to understand how out-of-mempool transactions appear in shared templates under similar mempool policies. Interestingly, the majority of these occurrences can be attributed to Replace-By-Fee (RBF) transactions that were either just replaced or confirmed in the previous block before a new template was generated. This led to an observation of approximately two transactions per minute being reconsidered for inclusion.

The transactions falling into this unexpected category typically originated from slightly outdated templates where an RBF transaction was executed after the template's generation but before its request by another peer. Additionally, a smaller portion involved RBF transactions missing a block, with the template including the RBF transaction created before the block discovery. Another notable source of these transactions is new transactions requested via INV/GETDATA which hadn't been received due to a delay, highlighting a discrepancy in timing between template requests and direct transaction data requests.

A potential solution to mitigate the impact of RBF transactions on template accuracy could involve altering the template sharing mechanism. Instead of immediately sending the latest template upon request, marking a peer as awaiting a template and sending the next generated template could significantly decrease the likelihood of including outdated information. This adjustment would not only reduce instances of templates based on old blocks but also minimize the chances of an RBF transaction being included in the template between its creation and processing by the receiver.</summary>
    <published>2025-10-17T03:32:33.362000+00:00</published>
  </entry>
</feed>
