<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Draft BIP for OP_TXHASH and OP_CHECKTXHASHVERIFY</title>
  <updated>2024-09-26T03:20:43.318473+00:00</updated>
  <author>
    <name>stevenroose 2023-10-06 17:26:25.112000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Draft BIP for OP_TXHASH and OP_CHECKTXHASHVERIFY</title>
    <updated>2024-09-26T03:20:43.318497+00:00</updated>
    <link href="https://delvingbitcoin.org/t/draft-bip-for-op-txhash-and-op-checktxhashverify/121/7" rel="alternate"/>
    <summary>A reference implementation has been added to the Bitcoin Improvement Proposal (BIP) alongside an example of a caching strategy within the rust-bitcoin repository. This strategy, detailed through code available at [rust-bitcoin](https://github.com/stevenroose/rust-bitcoin/blob/c54a09cb2dd334d6cdeec23dda55c6b6e7154d03/bitcoin/src/blockdata/script/txhash.rs), showcases an innovative approach to managing large fields by caching them individually. Furthermore, it introduces caches for the leading bytes at set intervals and comprehensive caches covering all data. The essence of this implementation is its efficiency in handling transaction hashes. Once the large pieces of transaction data are hashed initially, the subsequent number of bytes that need to be hashed per TXHASH invocation is significantly reduced, ensuring clear bounds on the computational resources required. This method represents a substantial improvement in the processing of cryptocurrency transactions, offering a scalable solution as the volume of transactions continues to grow.</summary>
    <published>2023-10-06T17:26:25.112000+00:00</published>
  </entry>
</feed>
