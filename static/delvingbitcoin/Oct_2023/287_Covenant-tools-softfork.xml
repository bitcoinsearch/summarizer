<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Covenant tools softfork</title>
  <updated>2024-09-10T03:11:19.172077+00:00</updated>
  <author>
    <name>LLFourn 2023-10-06 00:56:09.411000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Covenant tools softfork</title>
    <updated>2024-09-10T03:11:19.172106+00:00</updated>
    <link href="https://delvingbitcoin.org/t/covenant-tools-softfork/98/24" rel="alternate"/>
    <summary>In the discussion, an exploration into the specifics of transaction outputs in relation to channel commitments within Bitcoin transactions is touched upon. The focus is on the necessity for a mechanism that can verify whether a transaction that spends a current output has an output that is equal or functionally equivalent to the one being spent. This inquiry underlines a technical challenge, indicating that the transaction hash (TXHASH) alone may not suffice for this purpose.

The conversation also refers to a previous attempt to delve into this topic, highlighting an initial discussion that took place on GitHub. A link to the discussion ([GitHub Discussion](https://github.com/ariard/bitcoin-contracting-primitives-wg/issues/19)) suggests that there had been an effort to tackle these questions, though it seems it did not reach a conclusive resolution at the time.

Finally, there's a suggestion to revisit this topic on a new platform, with the aim of leveraging the latest thoughts and developments in the field. This reflects a willingness to continue exploring and refining the understanding of how Bitcoin's contracting primitives can be optimized, specifically in the context of channel commitment transactions.</summary>
    <published>2023-10-06T00:56:09.411000+00:00</published>
  </entry>
</feed>
