<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Draft BIP for OP_TXHASH and OP_CHECKTXHASHVERIFY</title>
  <updated>2024-09-26T03:20:27.325972+00:00</updated>
  <author>
    <name>stevenroose 2023-10-10 06:31:52.782000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Draft BIP for OP_TXHASH and OP_CHECKTXHASHVERIFY</title>
    <updated>2024-09-26T03:20:27.325996+00:00</updated>
    <link href="https://delvingbitcoin.org/t/draft-bip-for-op-txhash-and-op-checktxhashverify/121/9" rel="alternate"/>
    <summary>The discussion involves several key points regarding potential enhancements and considerations for transaction hash (TXHASH) semantics, specifically in the context of CheckTemplateVerify (CTV) activation and sighash functionalities. The first point considers the scenario of CTV activation as reasonable, highlighting an openness to exploring its implementation further. The second point delves into the distinctions between TXHASH combined with CSFS and a traditional sighash. It's noted that while both approaches allow the specification of sighash properties at sign time by the signer, TXHASH+CSFS also supports pre-setting these properties through policy, offering a flexibility that could prove useful across various use cases. This acknowledgment is accompanied by an admission of the need to systematically document these use cases to better remember and evaluate them.

Furthermore, there's a cautious stance towards pre-defined modes due to concerns that they may not cover all potential user needs or future applications, underscoring the challenge of predicting all possible use cases. Despite this, there's contemplation about introducing a special case designated "0x00" that would encompass ALL, serving as a useful mode for sighash while maintaining a default "empty" state that implies a CTV (non-recursive ALL) mode. This suggests an ongoing exploration of how to balance flexibility, utility, and foresight in the development of these cryptographic tools and protocols.</summary>
    <published>2023-10-10T06:31:52.782000+00:00</published>
  </entry>
</feed>
