<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Non interactive anti-exfil (airgap compatible)</title>
  <updated>2024-08-22T02:10:21.380892+00:00</updated>
  <author>
    <name>moonsettler 2024-08-21 15:12:12.049000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Non interactive anti-exfil (airgap compatible)</title>
    <updated>2024-08-22T02:10:21.380917+00:00</updated>
    <link href="https://delvingbitcoin.org/t/non-interactive-anti-exfil-airgap-compatible/1081/8" rel="alternate"/>
    <summary>The discussion raises critical points about the challenges and potential solutions in preventing exfiltration of sensitive information, specifically focusing on scenarios where interactive anti-exfiltration measures might not be feasible. It acknowledges that while theoretical possibilities for exfiltration through grinding exist, its practical success, especially concerning QR signers primarily used for cold storage funds, remains uncertain. Nevertheless, the proposition to employ an algorithm that significantly elevates the security threshold is presented as a valuable step forward.

Further elaboration on protective mechanisms introduces an innovative approach involving a proof-of-work (PoW) concept tailored to deter unauthorized data extraction. This method suggests incorporating a physical indicator, such as a wired LED, to signal maximum or high power draw typical during signature generation. Additionally, it advises users on a time-based precautionary measure: if signature generation exceeds a specified duration, they should abort the transaction. This precaution aims to exploit the discrepancy between normal signature generation times and the extended periods required by nonce point churning attempts, thereby offering a simple yet effective layer of defense. However, the effectiveness of this PoW solution would necessitate adjustments based on device type and signature methodology, implying a need for companion software capable of dynamically modifying PoW difficulty in alignment with these variables.

The inquiry into the feasibility of accurately estimating the number of signatures required to leak a seed of either 128 or 256 bits using forward error correction (FEC) codes underscores the quest for a robust defensive strategy against data exfiltration. This aspect highlights the ongoing exploration for more refined and secure methods to protect sensitive cryptographic materials from sophisticated attack vectors.</summary>
    <published>2024-08-21T15:12:12.049000+00:00</published>
  </entry>
</feed>
