<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Non interactive anti-exfil (airgap compatible)</title>
  <updated>2024-08-22T02:11:20.132622+00:00</updated>
  <author>
    <name>moonsettler 2024-08-21 19:35:39.046000+00:00</name>
  </author>
  <author>
    <name>sipa 2024-08-21 17:30:10.227000+00:00</name>
  </author>
  <author>
    <name>moonsettler 2024-08-21 15:33:51.311000+00:00</name>
  </author>
  <author>
    <name>moonsettler 2024-08-21 15:12:12.049000+00:00</name>
  </author>
  <author>
    <name>moonsettler 2024-08-21 15:08:10.563000+00:00</name>
  </author>
  <author>
    <name>sipa 2024-08-21 15:06:55.908000+00:00</name>
  </author>
  <author>
    <name>sipa 2024-08-21 14:32:38.344000+00:00</name>
  </author>
  <author>
    <name>moonsettler 2024-08-21 14:06:59.185000+00:00</name>
  </author>
  <author>
    <name>David Harding 2024-08-21 13:08:17.268000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2024-08-20 18:53:47.953000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2024-08-20 18:40:40.188000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2024-08-20 17:02:38.827000+00:00</name>
  </author>
  <author>
    <name>reardencode  . 2024-08-20 15:26:52.208000+00:00</name>
  </author>
  <link href="delvingbitcoin/Aug_2024/3035_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3032_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3031_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3028_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3030_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3029_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3026_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3025_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3024_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3007_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3003_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3006_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/3004_Non-interactive-anti-exfil-airgap-compatible-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Non interactive anti-exfil (airgap compatible)</title>
    <updated>2024-08-22T02:11:20.132723+00:00</updated>
    <link href="https://delvingbitcoin.org/t/non-interactive-anti-exfil-airgap-compatible/1081/13" rel="alternate"/>
    <summary>The discussion revolves around a cryptographic enhancement specifically designed to bolster the security of transaction signing processes, with a focus on the interplay between wallet applications and hardware signers. It introduces a specialized method where a random variable 'n', supplied by the host wallet application, plays a pivotal role in the operation of this scheme. The scheme employs a concept termed `vector_commit`, which is essentially a cryptographically robust hash produced from the amalgamation of certain values. This method demonstrates versatility by being adaptable across various cryptographic standards, such as bip340 and ecdsa, by either adhering to a common standard for both or by aligning with the unique hashing techniques required by each signing variant, including tagged hash for bip340 and double sha256 for ecdsa.

Moreover, the proposal draws comparisons with existing cryptographic protocols like the double nonce scheme seen in MuSig2 and FROST but sets itself apart by removing the necessity for the host to hide its secret value. This elimination is made possible by allowing the secret to be directly sent to the hardware signer, thereby simplifying the process. Specifically, this direct transmission of the secret facilitates its use in ECDSA signing without encountering the difficulties associated with nonce aggregation methods found in traditional approaches like MuSig2. In these conventional methods, the full secret nonce remains undisclosed to any party, creating challenges that this newly discussed scheme seeks to address.

In the realm of enhancing cryptographic practices, a novel approach utilizing a cryptographically secure hash commitment has been deliberated. This approach involves generating a variable 't' by the software, which, alongside other parameters, requests a signature from the hardware. The hardware then computes several key values through operations including hashing and elliptic curve multiplications, leading to the generation of critical components such as 'k0', 'R0', 'k', 'R', and 's'. These computed values are verified by the software to ensure the integrity and legitimacy of the process, marking a significant advancement in secure communications and data protection. There's an anticipation within the community for the formal specification of this methodology and its incorporation into the secp256k1 library, highlighting the widespread interest in its application for securing digital transactions and communications.

Furthermore, an anti-exfiltration variant tailored for air-gapped signing devices employing Partially Signed Bitcoin Transactions (PSBTs) has been introduced. This variant integrates seamlessly into existing QR code-based signing workflows, aiming to prevent the exfiltration of private keys during the signing process. Through a series of cryptographic operations and nonce incorporations, this method offers a secure way to sign transactions in isolated environments, effectively mitigating risks associated with key exfiltration.

The term "vector commitment," though used within this discussion, might cause confusion due to its established meaning in cryptographic literature, as outlined in a document on cryptographic techniques. The discussion appears to align more closely with Scheme 2 from conversations on the Linux Foundation's website, primarily concerning ECDSA rather than Schnorr signatures. This scheme draws on an idea initially proposed by Greg Maxwell in 2014, showcasing its significance in this context.</summary>
    <published>2024-08-21T19:35:39.046000+00:00</published>
  </entry>
</feed>
