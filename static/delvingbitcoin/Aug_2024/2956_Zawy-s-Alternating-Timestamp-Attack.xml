<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Zawy’s Alternating Timestamp Attack</title>
  <updated>2024-08-15T02:00:29.114124+00:00</updated>
  <author>
    <name>zawy 2024-08-14 21:15:14.857000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Zawy’s Alternating Timestamp Attack</title>
    <updated>2024-08-15T02:00:29.114153+00:00</updated>
    <link href="https://delvingbitcoin.org/t/zawy-s-alternating-timestamp-attack/1062/17" rel="alternate"/>
    <summary>The discussion explores the nuances of implementing and enforcing Fast Transaction Lifespan (FTL) within a blockchain framework, highlighting its potential equivalence to Per-Transaction Lifespan (PTL) when applied rigorously to every block. This approach could ostensibly render the Median Time Past (MTP) mechanism redundant, suggesting that FTL, if enforced correctly, offers a comprehensive solution for controlling the timing of coin production and ensuring the system's integrity. The primary rationale behind the implementation of FTL is to prevent premature coin generation, which is a straightforward concept to grasp. By examining the possibility of substituting various patches and constants with a properly enforced FTL, the conversation opens up on why these measures are introduced in the first place. It suggests that existing patches and constants might not solely serve to counteract known vulnerabilities but could have foundational reasons related to the structure and security of blockchain operations. This perspective invites further investigation into the underlying principles guiding these technical decisions, hinting at a broader context of security and functionality considerations that go beyond merely addressing known exploits.</summary>
    <published>2024-08-14T21:15:14.857000+00:00</published>
  </entry>
</feed>
