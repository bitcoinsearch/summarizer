<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Batched Splicing Considered Risky</title>
  <updated>2024-11-06T03:14:37.202391+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-11-08 17:53:00.053000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Batched Splicing Considered Risky</title>
    <updated>2024-11-06T03:14:37.202423+00:00</updated>
    <link href="https://delvingbitcoin.org/t/batched-splicing-considered-risky/170/3" rel="alternate"/>
    <summary>The distinction between offchain transactions and 0-conf transactions is crucial in understanding the security and trust mechanisms that underpin them. Offchain transactions are characterized by a single input signed by all parties involved, requiring unanimous consensus for any changes. This mechanism inherently protects against double-spending, as all signatories must agree to any transaction, essentially making unauthorized transactions impossible without full cooperation. In contrast, 0-conf transactions can be approved by a single participant, making them more vulnerable to double-spending attacks since a transaction could be altered or not include funds promised to a receiver after the initial agreement.

A significant concern arises with splice-in designs, which aim to blend the characteristics of both offchain and 0-conf transactions. These designs typically involve one input that operates on an n-of-n consensus basis (similar to offchain transactions) but also include additional inputs that may only require a single signature from one of the parties involved (mirroring 0-conf transactions). This structure presents a security risk by potentially allowing an individual participant to execute a double-spend attack on the splice transaction. By combining elements of both transaction types, splice designs inadvertently inherit the vulnerabilities of 0-conf transactions while compromising the security assurances provided by fully offchain methods. This blend creates a scenario where the theoretical safety and consensus benefits of offchain transactions are diluted by the introduction of 0-conf's susceptibility to unilateral actions by individual participants.</summary>
    <published>2023-11-08T17:53:00.053000+00:00</published>
  </entry>
</feed>
