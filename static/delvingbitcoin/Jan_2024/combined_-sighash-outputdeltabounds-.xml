<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - `sighash_outputdeltabounds`</title>
  <updated>2024-02-05T02:09:19.233280+00:00</updated>
  <author>
    <name>ZmnSCPxj 2024-02-04 23:47:42.569000+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj  . 2024-01-31 06:52:48.570000+00:00</name>
  </author>
  <link href="delvingbitcoin/Feb_2024/1458_-sighash-outputdeltabounds-.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1392_-sighash-outputdeltabounds-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - `sighash_outputdeltabounds`</title>
    <updated>2024-02-05T02:09:19.233320+00:00</updated>
    <link href="https://delvingbitcoin.org/t/sighash-outputdeltabounds/504" rel="alternate"/>
    <summary>A new signature hashing scheme is proposed to address specific needs in Bitcoin smart contracts, particularly enhancing the functionality of Poon-Dryja payment channels and Decker-Russell-Osuntokun (DROR) update transactions. The suggested 84-byte signature operand is complex, comprising elements like `SIGHASH` flags, a `vout_index`, bounds on changes (`delta_min` and `delta_max`), and a Schnorr signature. This structure aims to ensure that transaction outputs remain within certain limits relative to the input amount, which allows for the validation of fees while respecting those boundaries.

The proposal has implications for Poon-Dryja channels, where commitment transactions could be signed with `SIGHASH_ALL|SIGHASH_OUTPUTDELTABOUNDS`. This signing approach permits participants to adjust output values within an acceptable range, ensuring they can respond to variable blockchain fees while adhering to previously negotiated fee limits. For DROR channels, the use of `SIGHASH_NOINPUT|SIGHASH_OUTPUTDELTABOUNDS` is proposed to streamline update transactions, reducing them to one input and one output with a maximum fee established by all participants. Such a measure is intended to prevent miners from exploiting the system.

An issue identified in the current system is "update transaction tennis," where parties may engage in back-and-forth updates. To conserve funds within channels, the suggestion is to directly publish the most recent state transaction instead of engaging in these sequential updates. Additionally, the role of watchtowers is discussed, emphasizing the importance of their accuracy over speed in issuing updates to uphold network integrity.

Considering the adaptability of the Lightning Network, the proposal introduces the idea of incorporating a Taproot annex with TLV-encoded fields. This would allow the inclusion of additional data types without altering the original transaction format. The concept of `SIGHASH_OUTPUTDELTABOUNDS` plays a critical role in this, as it enforces adjustments to outputs within prescribed limits without impacting the core value of the transaction. This is envisioned for future covenant applications, made possible through new opcodes introduced via a soft fork, thereby extending functionality without interrupting current operations.

In conclusion, the `SIGHASH_OUTPUTDELTABOUNDS` signature ensures that inputs contribute to fees within a predefined range, allowing for the adjustment of outputs at the specified `vout_index`. The annex-based approach secures the economic balance within the transaction structure, as it confirms that inputs are contributing to fees within set parameters.</summary>
    <published>2024-02-04T23:47:42.569000+00:00</published>
  </entry>
</feed>
