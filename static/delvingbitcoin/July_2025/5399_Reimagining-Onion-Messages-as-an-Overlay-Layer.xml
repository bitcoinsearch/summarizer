<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Reimagining Onion Messages as an Overlay Layer</title>
  <updated>2025-07-03T02:58:10.024110+00:00</updated>
  <author>
    <name>ZmnSCPxj 2025-07-03 01:13:14.353000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Reimagining Onion Messages as an Overlay Layer</title>
    <updated>2025-07-03T02:58:10.024141+00:00</updated>
    <link href="https://delvingbitcoin.org/t/reimagining-onion-messages-as-an-overlay-layer/1799/10" rel="alternate"/>
    <summary>The discussion revolves around the operational intricacies of how `lnd`, a Lightning Network daemon, manages `node_announcement`s and the associated `onion_link_proof`s. Initially, it's explained that nodes store a `node_announcement` only if they have active channels. Additionally, `lnd` takes a proactive approach by pruning any `node_announcement` that lacks channels once the closure of channels in a block has been processed. This ensures that an `onion_link_proof`, which is public, is accepted only if both involved nodes possess channels. Furthermore, clients are given the flexibility to apply additional filters, such as accepting onion link proofs only from nodes that maintain a certain number of channels with a predefined total Bitcoin value.

The text delves into a hypothetical scenario where a node owner could potentially exploit the system by creating fake nodes and establishing channels between them and their genuine node. Through this method, one can artificially inflate the number of real nodes, leading to an exponential increase in the creation of fake onion links. This situation highlights a significant concern regarding the scalability and integrity of the network, emphasizing the computational and storage burdens that such actions could impose on all network participants.

A critical point of discussion is the importance of ensuring every channel has a backing Unspent Transaction Output (UTXO) on the blockchain layer to prevent the network from being overwhelmed by fictitious entities and transactions. This requirement aims to maintain a linear relationship between the cost incurred by an individual for channel creation and the collective cost imposed on the network, contrasting sharply with the quadratic cost that could arise from unchecked creation of virtual or fake channels and links.

The narrative suggests a potential departure from existing principles by introducing the concept of "virtual full channels" accompanied by an "onion-message-only" flag as a solution to mitigate the outlined issues. This proposal underscores the need for a balanced approach that considers the minimum viable economic stake (in terms of satoshis locked in channels) necessary for a node to participate in the network, thereby preventing the exploitation of the system through the generation of excessive, low-value onion links and ensuring the sustainable scaling of the network infrastructure.</summary>
    <published>2025-07-03T01:13:14.353000+00:00</published>
  </entry>
</feed>
