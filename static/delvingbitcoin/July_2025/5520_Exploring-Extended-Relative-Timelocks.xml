<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Exploring Extended Relative Timelocks</title>
  <updated>2025-07-19T02:54:16.044532+00:00</updated>
  <author>
    <name>pyth 2025-07-19 00:58:18.827000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Exploring Extended Relative Timelocks</title>
    <updated>2025-07-19T02:54:16.044564+00:00</updated>
    <link href="https://delvingbitcoin.org/t/exploring-extended-relative-timelocks/1818/15" rel="alternate"/>
    <summary>The utilization of absolute timelocks in transactions presents a significant challenge, particularly when attempting to spend multiple inputs with varying timelocks within a single transaction. This complexity arises from the fact that these inputs are directed towards scripts generated from distinct descriptors. As a consequence, certain signing devices, especially those supporting miniscript, might incorrectly interpret some inputs as not belonging to the user. This misidentification stems from the devices' inability to recognize inputs with different timelocks as owned by the same entity, thereby compromising the safety of executing such transactions. The core issue revolves around the inherent limitations of signing devices in accurately parsing and validating ownership of inputs when faced with the heterogeneity introduced by differing timelocks. This situation underscores a critical pain point in the deployment of absolute timelocks, highlighting the need for enhanced compatibility and recognition mechanisms within signing devices to ensure secure and efficient transaction processes.</summary>
    <published>2025-07-19T00:58:18.827000+00:00</published>
  </entry>
</feed>
