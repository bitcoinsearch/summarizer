<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Exploring Extended Relative Timelocks</title>
  <updated>2025-07-22T03:01:58.715413+00:00</updated>
  <author>
    <name>scgbckbone 2025-07-21 12:55:15.750000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Exploring Extended Relative Timelocks</title>
    <updated>2025-07-22T03:01:58.715452+00:00</updated>
    <link href="https://delvingbitcoin.org/t/exploring-extended-relative-timelocks/1818/18" rel="alternate"/>
    <summary>The discussion highlights a preference for using a larger relative lock over the Compare-and-Swap Lock Versioning (CLTV) approach in programming. The individual expresses a clear stance, noting that the simplicity and less convoluted nature of employing a larger relative lock make it a superior choice. This viewpoint is acknowledged as a minor argument within the broader context but is supported with conviction by the proposer. The emphasis on choosing a method based on its straightforwardness and efficiency underlines an important consideration in programming practices, where complexity often leads to increased difficulty in maintenance and scalability. The proposal to favor a larger relative lock is positioned as a strategic decision aimed at optimizing programming efforts.</summary>
    <published>2025-07-21T12:55:15.750000+00:00</published>
  </entry>
</feed>
