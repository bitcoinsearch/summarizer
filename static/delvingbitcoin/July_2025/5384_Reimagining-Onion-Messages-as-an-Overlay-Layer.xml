<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Reimagining Onion Messages as an Overlay Layer</title>
  <updated>2025-07-02T02:57:42.371740+00:00</updated>
  <author>
    <name>MattCorallo 2025-07-01 12:55:02.045000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Reimagining Onion Messages as an Overlay Layer</title>
    <updated>2025-07-02T02:57:42.371772+00:00</updated>
    <link href="https://delvingbitcoin.org/t/reimagining-onion-messages-as-an-overlay-layer/1799/6" rel="alternate"/>
    <summary>The discussion revolves around the potential implementation and implications of an onion link establishment protocol within a peer-to-peer network, specifically addressing concerns related to Denial of Service (DoS) protection, network topology, and connection management. The proposal suggests that creating an onion link should necessitate having an existing channel with the responding node, which would not necessarily enhance DoS protection but would increase the cost and steps required for establishing such a link. Furthermore, the protocol could incorporate measures like upfront payments, presenting a UTXO locked to a future time, or streaming funds to maintain the link's uptime to mitigate potential abuse.

Concerning the network topology, it is argued that the proposal might not significantly alter it. Questions are raised regarding the necessity of maintaining the same TCP connection for all peer-to-peer interactions, as per certain interpretations of the specifications post-BOLT 1. It is clarified that while current practices may limit peers to a single connection using the same public key, there is no explicit restriction preventing nodes from opening multiple connections over the same port without needing a separate port designated for this purpose.

The conversation also touches on technical aspects of TCP connections and queue management within the context of the Lightning Network. Despite acknowledging that TCP inherently manages backpressure effectively, ensuring that the sender does not overwhelm the recipient, concerns remain about head-of-line blockingâ€”a situation where a line of packets waits for the first packet to be processed, potentially delaying subsequent packets. However, it is suggested that due to the quick processing nature of lightning messages, head-of-line blocking may not significantly impact latency in practical scenarios. This contrasts with web traffic, where parallel connections and prioritization signals are limited, exacerbating head-of-line blocking issues.</summary>
    <published>2025-07-01T12:55:02.045000+00:00</published>
  </entry>
</feed>
