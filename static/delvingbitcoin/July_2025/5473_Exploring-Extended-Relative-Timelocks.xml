<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Exploring Extended Relative Timelocks</title>
  <updated>2025-07-16T03:06:09.895055+00:00</updated>
  <author>
    <name>pyth 2025-07-15 05:52:08.461000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Exploring Extended Relative Timelocks</title>
    <updated>2025-07-16T03:06:09.895084+00:00</updated>
    <link href="https://delvingbitcoin.org/t/exploring-extended-relative-timelocks/1818/4" rel="alternate"/>
    <summary>In discussing the mechanics of cryptocurrency constructions, particularly in relation to Liana, it's crucial to understand the concept of coin locking and how it differentiates from more traditional models. Unlike standard single or multi-signature schemes where coins can be explicitly locked for a designated period, Liana operates on a fundamentally different principle. In Liana's framework, coins are not locked by policy but through conditions set within a mandatory spending path. This path allows for the spending of coins without the imposition of a timelock. 

The significant distinction here is that coins become "locked" only if the user loses the ability to fulfill the conditions of this primary spending path. It essentially means that in situations where these conditions cannot be met, the coins are considered lost. This contrasts sharply with other systems where coins are deliberately locked for a certain time as a part of their security or operational protocol. Understanding these nuances is vital for anyone engaging with or designing cryptocurrency protocols, as it highlights the importance of the conditions under which coins can be accessed and the implications of failing to meet these conditions.</summary>
    <published>2025-07-15T05:52:08.461000+00:00</published>
  </entry>
</feed>
