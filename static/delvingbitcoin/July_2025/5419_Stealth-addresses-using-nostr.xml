<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Stealth addresses using nostr</title>
  <updated>2025-07-10T02:55:25.594450+00:00</updated>
  <author>
    <name>1440000bytes 2025-07-09 17:13:25.556000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Stealth addresses using nostr</title>
    <updated>2025-07-10T02:55:25.594480+00:00</updated>
    <link href="https://delvingbitcoin.org/t/stealth-addresses-using-nostr/1816" rel="alternate"/>
    <summary>Nostr employs the same cryptographic techniques as Bitcoin, allowing users to generate new keys from `npub` and receive Bitcoin payments. The system addresses some of the limitations found in BIP 47 version 1, such as the use of OP_RETURN for notifications and the impact on user experience due to silent payments scanning. To improve upon these issues, Nostr introduces a method where Alice can generate a new key for Bob and notify him through an encrypted message using NIP-17. This process enables Bob's wallet to store details necessary for receiving future payments from Alice without compromising user experience. A specification for this protocol could be outlined in a new BIP or NIP, providing a structured approach to stealth payment notifications.

The proof of concept provided illustrates how stealth keys are generated and used within the Nostr ecosystem. Through Python code examples, it demonstrates the creation of stealth public and private keys, leveraging shared secrets between parties to facilitate private transactions. The code includes functions for generating a stealth public key by a sender, deriving a stealth private key by a recipient, and validating hex keys for correctness. Additionally, it outlines how to generate random keypairs, showcasing the utility and flexibility of the Nostr framework for secure, anonymous transactions.

This implementation showcases Nostr's potential to enhance Bitcoin's privacy features, offering a step-by-step guide for developers interested in integrating stealth payment capabilities into their applications. By adopting Nostr's approach, developers can create more secure and user-friendly payment systems that protect user identities and financial transactions from unwanted scrutiny. The provided Python script serves as a foundational tool for developers to experiment with and build upon, encouraging innovation within the space of cryptocurrency payments and privacy enhancements.</summary>
    <published>2025-07-09T17:13:25.556000+00:00</published>
  </entry>
</feed>
