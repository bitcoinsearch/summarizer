<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>RGB consensus production release v0.12</title>
  <updated>2025-07-11T03:01:09.049603+00:00</updated>
  <author>
    <name>dr-orlovsky 2025-07-10 13:50:13.532000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>RGB consensus production release v0.12</title>
    <updated>2025-07-11T03:01:09.049637+00:00</updated>
    <link href="https://delvingbitcoin.org/t/rgb-consensus-production-release-v0-12/1822" rel="alternate"/>
    <summary>The LNP/BP Standards Association has officially announced the launch of the RGB smart contracts consensus layer's final production-ready release, version 0.12. This milestone allows contract developers and issuers to deploy contracts on both the Bitcoin mainnet and testnet with a stable consensus foundation. A significant suggestion made is for the re-issuance of any contracts initially created with pre-release versions to bolster security and consistency within the ecosystem. This release is pivotal as it marks the beginning of forward compatibility, meaning that contracts will no longer face backward compatibility issues due to changes at the consensus level.

Version 0.12 of RGB is the culmination of an eight-month protocol redesign focused on preparing for zk-STARK compression, simplifying the protocol, enhancing security through extensive testing, and ensuring that the protocol is fully production-ready by freezing consensus-level changes. The introduction of zk-AluVM represents a major architectural overhaul, introducing a compact, performant Turing-complete virtual machine designed for client-side validation. This change streamlines the contract state into a single type and significantly reduces the consensus validation code complexity, facilitating recursive history compression.

Significant protocol simplifications have been achieved in this version, including a four-fold reduction in the size of the consensus code and a notable decrease in the number of data types and generic type parameters used in APIs. These changes enhance auditability, performance, and developer experience, paving the way for simpler user interfaces and improved overall user experience. One of the key technical advancements is the unification of seal types, which simplifies the protocol and reduces its attack surface. Additionally, the removal of Pedersen commitments and Bulletproofs, along with the unification of the state of RGB contracts, further streamlines the protocol.

This version also introduces several new features aimed at improving payment processes, such as richer invoicing capabilities, support for multiple-asset contracts, the introduction of payment scripts to facilitate complex payment constructions, and enhanced resilience against blockchain reorgs through a new mathematical model. On the performance front, significant improvements have been made to consignment processing, verification, and contract data management, including the integration of a dedicated NoSQL database for contract history, leading to improved performance and reduced memory requirements.

For users interested in exploring or integrating RGB v0.12, the source code is available on [GitHub](https://github.com/RGB-WG/rgb/tree/v0.12.0-rc.1.1), with installation instructions provided for those preferring command line interaction. Additional resources, demos, and examples are also provided to facilitate understanding and adoption.

Looking ahead, plans include updating the website and documentation to reflect the new changes, supporting developers in integrating RGB v0.12 into their products, and anticipating the first mainnet releases of products and assets using this version during Summer 2025. The establishment of the RGB Consortium, a non-profit organization, will ensure the ongoing stability of the protocol and maintain the codebase, marking a significant step towards community-driven governance and support.</summary>
    <published>2025-07-10T13:50:13.532000+00:00</published>
  </entry>
</feed>
