<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Exploring Extended Relative Timelocks</title>
  <updated>2025-07-17T03:01:12.671424+00:00</updated>
  <author>
    <name>pyth 2025-07-16 02:02:26.139000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Exploring Extended Relative Timelocks</title>
    <updated>2025-07-17T03:01:12.671457+00:00</updated>
    <link href="https://delvingbitcoin.org/t/exploring-extended-relative-timelocks/1818/9" rel="alternate"/>
    <summary>The discourse centers around the decision to transition from an old timelock system to a new one, with a specific mention of the potential lack of concern for sub-8 block granularity by users. The original proposition suggests that in certain contexts, such as within a Liana framework, there's a strong belief that the use of sub-8 blocks granularity is practically nonexistent outside of testing scenarios. This underlines a perspective that for practical purposes, especially in specified applications, the requirement for such granularity might be irrelevant.

Further elaboration on the strategy involves straightforward changes in both wallet logic and the user interface (UI) design. Specifically, it entails modifying a flag within the wallet's logic systems and adjusting the factor applied to a slider mechanism within the UI. These adjustments are proposed to facilitate the selection of timelock settings, should there be a need for an upgrade in the future. The tone suggests a pragmatic approach to software upgrade decisions, emphasizing ease of implementation and user experience over maintaining legacy features that may no longer serve a significant purpose.</summary>
    <published>2025-07-16T02:02:26.139000+00:00</published>
  </entry>
</feed>
