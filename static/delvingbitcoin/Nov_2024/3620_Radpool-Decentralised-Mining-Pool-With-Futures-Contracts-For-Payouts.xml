<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Radpool: Decentralised Mining Pool With Futures Contracts For Payouts</title>
  <updated>2024-11-28T02:30:10.846563+00:00</updated>
  <author>
    <name>jungly 2024-11-27 19:30:52.026000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Radpool: Decentralised Mining Pool With Futures Contracts For Payouts</title>
    <updated>2024-11-28T02:30:10.846599+00:00</updated>
    <link href="https://delvingbitcoin.org/t/radpool-decentralised-mining-pool-with-futures-contracts-for-payouts/1262/5" rel="alternate"/>
    <summary>The discussion opens with the consideration of ROAST as an alternative to Lindell's cryptographic scheme, noting that support for one of ROAST's optimizations is planned. This leads into the decision to continue referring to the system as FROST Federation, highlighting the significance of single-round signing in enhancing scalability across multiple Mining Service Providers (MSPs). An important operational detail mentioned is the necessity to prune data within MSPs, introducing a time decay mechanism for shares which is favored for its simplicity and effectiveness in ensuring share availability between block findings.

Regarding miner authentication, there's an inclination towards using a username/password setup due to its prevalence and ease of use, allowing miners to switch easily. It's specified that miners will either be assigned a random string as a username by the MSP or will need to provide a sufficiently long username themselves. The choice of FROST is attributed to its efficient single-round signing process, despite its message complexity being \(O(n^2)\), as detailed in a supportive analysis found in a [blog post](https://blog.opdup.com/development-updates/2024/07/09/frost-signing-for-channel-updates.html). However, there's an acknowledgment of the need for further experiments to ascertain FROST Federation's performance and scaling limits.

Further details include the necessity to normalize block templates proposed by MSPs and to weight various shares appropriately. Lindell's scheme is praised for its robustness despite the absence of an open-source implementation, leading to a preference for ROAST due to its simpler implementation as a messaging protocol. The handling of dishonest MSPs is addressed, explaining that FROST's identifiable aborts allow for the identification and exclusion of failing MSPs, with measures in place for dealing with invalid shares and DDoS attacks.

A specific operational parameter discussed is the imposition of a 2000 block delay before a new MSP can participate in threshold signature activities, serving as a safeguard against potential abuse by large miners acting as MSPs. Lastly, it's mentioned that initial dashboard specifications are not yet defined, anticipating a command-line interface for the first release. This comprehensive overview encapsulates the strategic decisions and technical considerations involved in developing a scalable and secure mining service platform.</summary>
    <published>2024-11-27T19:30:52.026000+00:00</published>
  </entry>
</feed>
