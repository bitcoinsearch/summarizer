<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Radpool: Decentralised Mining Pool With Futures Contracts For Payouts</title>
  <updated>2024-11-28T02:30:25.155638+00:00</updated>
  <author>
    <name>jungly 2024-11-27 17:51:11.385000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Radpool: Decentralised Mining Pool With Futures Contracts For Payouts</title>
    <updated>2024-11-28T02:30:25.155673+00:00</updated>
    <link href="https://delvingbitcoin.org/t/radpool-decentralised-mining-pool-with-futures-contracts-for-payouts/1262/4" rel="alternate"/>
    <summary>The discussion centers on the fundamental differences and design philosophies between Braidpool and Radpool, two proposals for blockchain mining pools. One key difference is the requirement of consensus; Braidpool mandates consensus on transactions, beads, or blocks at the base layer, whereas Radpool operates without needing consensus, relying instead on Byzantine Fault Tolerance (BFT) broadcasts necessary for FROST federations. This distinction also underpins their approach to timeliness, with Radpool not being constrained by consensus-related delays, advocating for the development of delay-tolerant protocols.

Radpool sets itself apart through its federation membership mechanism, where a miner's hashrate directly influences their membership, contrasting with Braidpoolâ€™s reliance on miners' luck in finding a block. This method is perceived as more inclusive and practical. Additionally, Radpool introduces a flexible payout system allowing miners to exit at any time, a stark contrast to Braidpool's two-week waiting period or the need for permission for early withdrawal. Radpool utilizes a future's contract via a Discreet Log Contract (DLC) for payouts, indicating an area Braidpool has yet to fully address or define.

Onboarding for miners into Radpool is streamlined, requiring sign-up to a Mining Service Provider (MSP), whereas Braidpool demands running multiple services. The network architecture also differs significantly; Radpool employs a point-to-point network connecting MSPs and miners directly, while Braidpool favors a peer-to-peer (P2P) network among all miners. Radpool's efficiency and simplification are further highlighted in how it builds its syndicate through MSPs, which contribute both hash power and liquidity, funding DLCs.

The argument against Braidpool extends to concerns over its execution risk, emphasizing the unproven nature of its consensus protocol, which might not scale effectively, especially without adopting Kaspa's DAGKnight protocol. This skepticism is grounded in the author's personal experience with implementing a DAG-based consensus protocol during their PhD, underscoring the challenges and risks associated with such undertakings.

In response to critiques, it's noted that Radpool allows for flexibility in how miners and MSPs operate, supporting both SV1 and SV2 protocols, thereby accommodating diverse miner preferences. This adaptability contrasts with Braidpool's yet-to-be-defined futures contract system, despite previous attempts to conceptualize one using single-use seals. The simplicity and clarity of Radpool's futures contracts, where terms are straightforwardly negotiated between MSPs and miners, stand out as a significant advantage over Braidpool's ambiguous approach. For further details on the frost federation membership in Radpool, refer to the provided [link](https://www.radpool.xyz/1/frost-federation.html_membership).</summary>
    <published>2024-11-27T17:51:11.385000+00:00</published>
  </entry>
</feed>
