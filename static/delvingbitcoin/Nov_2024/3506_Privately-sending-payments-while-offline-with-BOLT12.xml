<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Privately sending payments while offline with BOLT12</title>
  <updated>2024-11-11T02:18:56.565008+00:00</updated>
  <author>
    <name>andyschroder 2024-11-10 19:32:58.315000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Privately sending payments while offline with BOLT12</title>
    <updated>2024-11-11T02:18:56.565044+00:00</updated>
    <link href="https://delvingbitcoin.org/t/privately-sending-payments-while-offline-with-bolt12/1134/6" rel="alternate"/>
    <summary>The discussion centers around the security of implementing LNURL-withdraw links in point-of-sale (POS) devices, specifically comparing two different approaches to integrating this technology. The first approach is detailed through a reference flow found on GitHub, under the repository [theDavidCoen/LNURL-withdrawPOS](https://github.com/theDavidCoen/LNURL-withdrawPOS), which outlines how POS devices can read LNURL-withdraw links via NFC. This method, however, is critiqued for its use of static LNURL withdrawal links, raising concerns about its security.

In contrast, an alternative solution is presented through another GitHub repository, [Bolt Card](https://github.com/boltcard), which proposes the use of deterministic rolling withdrawal URIs combined with a special NFC chip. This method is highlighted as a more secure option, despite acknowledging certain architectural drawbacks associated with LNURL. The comparison suggests a preference towards evolving the technology used in POS devices for handling LNURL-withdraw links, emphasizing the importance of security in such implementations.</summary>
    <published>2024-11-10T19:32:58.315000+00:00</published>
  </entry>
</feed>
