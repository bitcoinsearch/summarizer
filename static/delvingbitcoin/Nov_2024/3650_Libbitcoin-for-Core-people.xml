<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Libbitcoin for Core people</title>
  <updated>2024-12-01T02:51:51.247812+00:00</updated>
  <author>
    <name>evoskuil 2024-11-30 07:33:40.867000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Libbitcoin for Core people</title>
    <updated>2024-12-01T02:51:51.247843+00:00</updated>
    <link href="https://delvingbitcoin.org/t/libbitcoin-for-core-people/1222/17" rel="alternate"/>
    <summary>The discussion highlights the impact of native SHA256 limitations on performance, particularly in environments with low thread counts. Despite the CPU not being fully utilized, these limitations significantly influence Core's operations, underscoring the sequential nature of the process. This situation is further illustrated by the presence of various vectorizations like SSE4, AVX2, and AVX512 in Merkle tree constructions and message scheduling, although it's noted that the benchmark hardware lacks AVX512 support.

Furthermore, efforts to mitigate these constraints are underway, including the integration of SHANI for enhanced performance and the implementation of several SHA optimizations. These optimizations encompass strategies such as caching entire block paddings, rewriting functions for efficiency, and adopting vectorization-friendly practices for copying arrays. These measures collectively aim to optimize SHA256 handling, despite the inherent challenges posed by its native design and the specific hardware capabilities.</summary>
    <published>2024-11-30T07:33:40.867000+00:00</published>
  </entry>
</feed>
