<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proving UTXO set inclusion in zero-knowledge</title>
  <updated>2024-09-18T02:15:26.116582+00:00</updated>
  <author>
    <name>halseth 2024-09-17 08:34:23.889000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proving UTXO set inclusion in zero-knowledge</title>
    <updated>2024-09-18T02:15:26.116613+00:00</updated>
    <link href="https://delvingbitcoin.org/t/proving-utxo-set-inclusion-in-zero-knowledge/1142/5" rel="alternate"/>
    <summary>Aut-ct and utxozkp represent two distinct approaches to cryptographic proofs, each with its own set of capabilities and limitations. Aut-ct stands out for its efficiency, producing significantly smaller proofs on the order of kilobytes compared to the megabyte-sized proofs generated by alternative methods. This efficiency extends to its computational requirements, as aut-ct can generate proofs within seconds, offering a faster solution than other protocols which may take minutes to accomplish the same task. However, aut-ct's application is somewhat restricted; it is specifically designed to work with sets of public keys. This limitation means that while it can efficiently attest to the validity of these keys, it does not allow for the selective revelation of additional information about the output beyond this scope.

On the other hand, utxozkp presents a more flexible approach through its foundation in a general proof of computation model. This broader basis enables the potential for users to choose what additional information about an output is revealed. For instance, a user could prove that an output contains at least 1 BTC without disclosing any further details. Although this feature promises enhanced privacy and utility by allowing selective disclosure, it is important to note that it has not yet been implemented. The comparison between aut-ct and utxozkp highlights a trade-off between efficiency and flexibility in cryptographic proof mechanisms, with each catering to different needs within the digital security landscape.</summary>
    <published>2024-09-17T08:34:23.889000+00:00</published>
  </entry>
</feed>
