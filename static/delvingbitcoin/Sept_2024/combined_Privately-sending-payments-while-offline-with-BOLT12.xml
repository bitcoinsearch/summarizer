<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Privately sending payments while offline with BOLT12</title>
  <updated>2024-09-15T02:22:47.688361+00:00</updated>
  <author>
    <name>andyschroder 2024-09-14 15:48:20.342000+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2024-09-14 11:30:29.672000+00:00</name>
  </author>
  <author>
    <name>andyschroder 2024-09-14 07:01:38.506000+00:00</name>
  </author>
  <link href="delvingbitcoin/Sept_2024/3190_Privately-sending-payments-while-offline-with-BOLT12.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2024/3187_Privately-sending-payments-while-offline-with-BOLT12.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2024/3185_Privately-sending-payments-while-offline-with-BOLT12.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Privately sending payments while offline with BOLT12</title>
    <updated>2024-09-15T02:22:47.688402+00:00</updated>
    <link href="https://delvingbitcoin.org/t/privately-sending-payments-while-offline-with-bolt12/1134/3" rel="alternate"/>
    <summary>The proposed system introduces an innovative approach to facilitate offline payments via Lightning Network, specifically targeting situations where the payer lacks direct internet access but wishes to authorize payments from a remote node. This method hinges on the use of pre-computed `invreq_payer_id` and `invreq_paths`, which are stored on the payer's device alongside corresponding secret keys. These identifiers have assigned validity times and budgets and can be manually revoked if necessary, addressing security concerns such as device theft.

To enable this payment process, the system necessitates slight modifications to the BOLT12 `invoice` structure to ensure security and integrity of the transaction. The critical challenge lies in verifying that the received `invoice` matches the payer's initial `invoice_request`. By integrating the signature from the `invoice_request` into the actual `invoice`, payers can confidently authenticate the invoice before proceeding with payment. This mechanism not only enhances security but also streamlines the transaction process by reducing the need for nodes to track and manage outstanding `invoice_requests`.

The benefits of this system are manifold. Firstly, it eliminates the requirement for the buyer or sender to be online at the time of transaction, thereby facilitating ease of payment in scenarios where internet access is unavailable or unreliable. Moreover, it preserves sender privacy and simplifies the payment process, potentially even allowing integration into a compact smart card format. This system is compatible with various point-of-sale devices and wallets, does not require a webserver or SSL, and offers heightened security compared to existing alternatives such as [LNURL-withdrawPOS](https://github.com/theDavidCoen/LNURL-withdrawPOS).

Furthermore, the discussion extends into the realm of utilizing custodial or non-custodial Lightning Service Providers (LSPs) or high-uptime home nodes to support the transaction process. The dialogue suggests establishing standards for remote control communication with high-uptime home nodes via BOLT8 and creating a "BOLT8 tunnel" over onion messages. This would allow payees to assist payers in connecting with their LSP or high-uptime home node through onion messages, translating them into BOLT8 messages. This expansion broadens the applicability of the scheme to accommodate both remote-controlled home nodes and mobile phones associated with LSPs, significantly enhancing the flexibility and usability of the payment system.</summary>
    <published>2024-09-14T15:48:20.342000+00:00</published>
  </entry>
</feed>
