<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Privately sending payments while offline with BOLT12</title>
  <updated>2024-09-18T02:14:25.270896+00:00</updated>
  <author>
    <name>t-bast 2024-09-17 08:13:05.393000+00:00</name>
  </author>
  <author>
    <name>andyschroder  . 2024-09-14 15:48:20.342000+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj  . 2024-09-14 11:30:29.672000+00:00</name>
  </author>
  <author>
    <name>andyschroder  . 2024-09-14 07:01:38.506000+00:00</name>
  </author>
  <link href="delvingbitcoin/Sept_2024/3208_Privately-sending-payments-while-offline-with-BOLT12.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2024/3190_Privately-sending-payments-while-offline-with-BOLT12.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2024/3187_Privately-sending-payments-while-offline-with-BOLT12.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2024/3185_Privately-sending-payments-while-offline-with-BOLT12.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Privately sending payments while offline with BOLT12</title>
    <updated>2024-09-18T02:14:25.270945+00:00</updated>
    <link href="https://delvingbitcoin.org/t/privately-sending-payments-while-offline-with-bolt12/1134/4" rel="alternate"/>
    <summary>The discussion introduces a proposal found at [https://github.com/lightning/blips/pull/28](https://github.com/lightning/blips/pull/28), focusing on enhancing the security of transactions by standardizing control messages between remote nodes and hardware wallets through BOLT8. This initiative aims to facilitate secure, remote management of transactions, potentially integrating with devices like Ledger or Coldcard to ensure robust security protocols.

In evaluating liquidity service providers (LSPs), a key differentiation emerges between custodial and non-custodial services. Custodial LSPs simplify transaction processes by managing user funds, offering an appealing option for newcomers due to their enhanced security measures and streamlined engagement with digital assets. However, this model necessitates users to relinquish control over their assets, introducing risks related to mismanagement or security vulnerabilities. Conversely, non-custodial LSPs advocate for user autonomy by allowing individuals direct control over their assets, aligning with blockchain's decentralization ethos. Despite mitigating certain risks, this model imposes greater responsibility on users for asset management and security, posing challenges for those unfamiliar with the technology. The selection between custodial and non-custodial services thus depends on personal preferences regarding convenience versus control, alongside considerations of technological comfort and risk tolerance.

The proposal further explores an innovative payment facilitation method leveraging encrypted data transfer via onion-message paths. This approach enables secure message transmission, such as `update_add_htlc`, across onion-message paths instead of the conventional BOLT8 tunnel. It outlines two standards to improve transaction efficiency and security: one for remote control communication with high-uptime home nodes via BOLT8, and another for enabling payees to assist payers in contacting their LSP or high-uptime home node through a "BOLT8 tunnel" over onion messages. These standards aim to diversify applicable scenarios, covering both remote-controlled operations and mobile phone-based transactions, thereby enhancing the system's versatility and user experience.

Lastly, the concept addresses a payment authorization mechanism for point-of-sale transactions without requiring direct internet access on the buyer's device. This system involves pre-computing `invreq_payer_id` and `invreq_paths` stored on the device for offline transaction initiation. Upon making a purchase, the buyer's device communicates with the seller's online point-of-sale system via NFC or QR code, utilizing signed `invoice_request` from pre-computed identifiers. This technique eliminates the need for the buyer's online presence during transactions, maintains sender privacy, and simplifies the required technology, potentially extending to smart cards. A suggested modification to BOLT12 aims to enhance transaction security and scalability by verifying the match between `invoice` and `invoice_request`, reducing the operational load on nodes. This proposed adjustment, alongside compatibility with existing systems and the avoidance of webserver or SSL requirements, presents a secure alternative to current transaction methods such as [LNURL-withdrawPOS](https://github.com/theDavidCoen/LNURL-withdrawPOS).</summary>
    <published>2024-09-17T08:13:05.393000+00:00</published>
  </entry>
</feed>
