<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Who will run the CoinJoin coordinators?</title>
  <updated>2024-09-22T02:22:55.382984+00:00</updated>
  <author>
    <name>Adam Gibson 2024-09-21 15:17:30.948000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Who will run the CoinJoin coordinators?</title>
    <updated>2024-09-22T02:22:55.383020+00:00</updated>
    <link href="https://delvingbitcoin.org/t/who-will-run-the-coinjoin-coordinators/934/19" rel="alternate"/>
    <summary>The discussion revolves around the SINGLE|ACP protocol and its inherent limitations, particularly the requirement for matching input/output indices which poses challenges for maintaining privacy within transaction processes. This constraint has historically led to a halt in further analysis of the idea, as it complicates scenarios where contributors wish to add inputs and outputs to a transaction while ensuring their positions match without revealing their identity through hardcoded addresses.

The inquiry touches upon the methods employed to circumvent the restrictions imposed by SINGLE, seeking clarification on how privacy is preserved despite these obstacles. The person is interested in understanding the technical solutions or documentation that address this issue, suggesting an eagerness to explore the protocol's capabilities beyond its apparent limitations.

Additionally, the conversation mentions nostr relay addresses and their hardcoded nature as seeds for bootstrapping, acknowledging that while discovery of additional addresses is feasible, this characteristic seems to be a commonality across various approaches within the domain. This point illustrates a broader curiosity about the foundational structures of such systems and their implications for privacy and discoverability.</summary>
    <published>2024-09-21T15:17:30.948000+00:00</published>
  </entry>
</feed>
