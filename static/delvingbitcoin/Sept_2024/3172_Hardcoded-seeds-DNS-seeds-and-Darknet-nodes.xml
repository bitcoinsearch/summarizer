<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Hardcoded seeds, DNS seeds and Darknet nodes</title>
  <updated>2024-09-13T02:15:24.570910+00:00</updated>
  <author>
    <name>1440000bytes 2024-09-12 18:41:16.485000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Hardcoded seeds, DNS seeds and Darknet nodes</title>
    <updated>2024-09-13T02:15:24.570941+00:00</updated>
    <link href="https://delvingbitcoin.org/t/hardcoded-seeds-dns-seeds-and-darknet-nodes/1123/8" rel="alternate"/>
    <summary>The concept of encoding data within AAAA records is proposed as a novel idea to facilitate certain operations. This method would involve using a reserved prefix within these records to differentiate the encoded data from standard IPv6 addresses, thereby preventing any confusion. The primary function of this system would be to maintain the current operation of `getaddrinfo` in Bitcoin Core while introducing additional logic for decoding the information indicated by the reserved prefix. 

This approach is considered particularly intriguing due to the potential application for sharing IP addresses alongside their port numbers, specifically for nodes that operate on non-standard ports. The consideration stems from a comparison of address sizes between Onion v3 and i2p addresses, which are 256 bits, and the standard IPv6 addresses, which are only 128 bits. Despite the initial uncertainty regarding the feasibility of encoding larger address formats into smaller ones, the suggested method appears promising for IPv4 addresses and their associated port numbers. Further elaboration on this method, including technical details and implementation, can be found in a shared resource: [Encoding IPv4 address and port number in IPv6 address](https://gitlab.com/-/snippets/3746764). This document presumably offers a deeper insight into how such encoding could be executed effectively.</summary>
    <published>2024-09-12T18:41:16.485000+00:00</published>
  </entry>
</feed>
