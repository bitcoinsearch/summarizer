<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A Lightning Network of multi-party mechanisms</title>
  <updated>2024-09-25T02:23:17.596019+00:00</updated>
  <author>
    <name>renepickhardt 2024-09-25 01:15:14.176000+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2024-09-25 01:14:53.323000+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2024-09-24 23:58:52.795000+00:00</name>
  </author>
  <link href="delvingbitcoin/Sept_2024/3267_A-Lightning-Network-of-multi-party-mechanisms.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2024/3268_A-Lightning-Network-of-multi-party-mechanisms.xml" rel="alternate"/>
  <link href="delvingbitcoin/Sept_2024/3266_A-Lightning-Network-of-multi-party-mechanisms.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A Lightning Network of multi-party mechanisms</title>
    <updated>2024-09-25T02:23:17.596063+00:00</updated>
    <link href="https://delvingbitcoin.org/t/a-lightning-network-of-multi-party-mechanisms/1163/2" rel="alternate"/>
    <summary>The importance of extending the protocol to support multiparty channel constructs within payment channel networks is highlighted, drawing attention to their benefits in terms of payment reliability and service level guarantees. Despite these advantages, the trade-offs concerning on-chain bandwidth and costs associated with unilateral exits remain unquantified, presenting a need for further analysis. Concerns are raised about current pathfinding algorithms, which primarily assume a two-node connection per edge, potentially limiting the efficiency of multiparty constructs in routing payments without resorting to creating virtual two-party channels, thereby diminishing some benefits of multiparty setups.

A proposal is made to distinguish between the link layer and the network layer within the Lightning Network to facilitate direct connections between multi-party mechanisms, avoiding the limitations imposed by transacting over conventional two-party channels. This approach would necessitate modifications in gossip protocols and onion routing, including handling of `channel_announcement` messages and ensuring the network's indifference to the specific types of multi-party mechanisms used, focusing instead on their reliability for routing.

For gossip mechanisms, it's suggested to adapt the `channel_announcement` message to support a variable number of nodes, employing aggregated signatures via MuSig2 for scalability. This adjustment addresses potential issues with payload size limits and dynamic membership in multi-party mechanisms. To combat gossip spam and abuse of the network for data storage through fake channels, a methodology is proposed where the existence of a `channel_announcement` outpoint is verified without checking if it was spent, coupled with rejecting `channel_update`s for non-UTXO transactions. This aims to limit propagated data to the size of the UTXO set, allowing updates to point to new, unspent TXOs for mechanisms like Ark that frequently interact with the blockchain.

Pathfinding challenges are revisited, suggesting that algorithms could treat N-party mechanisms as multiple two-party channels linked to a virtual node representing the collective entity, thus simplifying routing without physical restructuring. Additionally, a discussion on onion routing introduces the idea of using "short node IDs" for identifying next hops within multi-party mechanisms, offering a solution to the ambiguity of next-hop identification in scenarios where nodes belong to multiple such mechanisms. This proposal includes adjustments to hop ID sizes to ensure uniqueness and compatibility with legacy two-party channels, aiming to preserve operational integrity while embracing the complexity of multi-party configurations.</summary>
    <published>2024-09-25T01:15:14.176000+00:00</published>
  </entry>
</feed>
