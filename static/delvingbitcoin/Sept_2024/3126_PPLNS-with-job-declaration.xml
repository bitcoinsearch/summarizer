<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>PPLNS with job declaration</title>
  <updated>2024-09-07T02:13:42.602641+00:00</updated>
  <author>
    <name>marathon-gary 2024-09-06 15:08:22.493000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>PPLNS with job declaration</title>
    <updated>2024-09-07T02:13:42.602668+00:00</updated>
    <link href="https://delvingbitcoin.org/t/pplns-with-job-declaration/1099/14" rel="alternate"/>
    <summary>The client-server interaction in question revolves around the validation of shares, where the client provides the server with a list of IDs for the shares they wish to validate. This process is comparable to utilizing an API to query share data. However, concerns are raised regarding the reliability and integrity of the data provided by the server. Specifically, there is skepticism about the potential for servers or pools to deliver inaccurate or misleading information regarding the shares or even omit certain shares upon request.

One critical aspect of this validation process is the use of Merkle inclusion validation, which serves as a safeguard against the provision of inaccurate or misleading share data. Through this mechanism, shares that do not accurately match their claimed identity in the Merkle tree can be effectively identified and rejected, ensuring a level of data integrity. Nevertheless, this method does not address the issue of share omission, where shares could be intentionally left out of the response by the server, thereby escaping validation altogether. This loophole highlights a significant vulnerability in the validation process, indicating that while steps have been taken to ensure the accuracy of share data, mechanisms to prevent omission require further consideration to bolster the overall trustworthiness of the data exchange process.</summary>
    <published>2024-09-06T15:08:22.493000+00:00</published>
  </entry>
</feed>
