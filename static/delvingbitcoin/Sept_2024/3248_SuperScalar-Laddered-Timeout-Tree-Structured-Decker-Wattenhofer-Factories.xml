<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SuperScalar: Laddered Timeout-Tree-Structured Decker-Wattenhofer Factories</title>
  <updated>2024-09-24T02:22:07.320315+00:00</updated>
  <author>
    <name>ZmnSCPxj 2024-09-23 06:57:54.275000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SuperScalar: Laddered Timeout-Tree-Structured Decker-Wattenhofer Factories</title>
    <updated>2024-09-24T02:22:07.320340+00:00</updated>
    <link href="https://delvingbitcoin.org/t/superscalar-laddered-timeout-tree-structured-decker-wattenhofer-factories/1143/12" rel="alternate"/>
    <summary>At the Lightning proto dev summit, a novel proposal was introduced regarding LSP-assisted exits, particularly focusing on enhancing client flexibility and privacy while exiting from one factory to another, or making an onchain exit. The concept revolves around clients offering their in-factory private keys through PTLCs (Point Time-Locked Contracts) to a Lightning Service Provider (LSP) during the exit process. This method allows clients to permanently move their funds without planning to return to the original factory.

The method entails a client, referred to as `A`, initiating an exit by creating an in-factory PTLC that is directed towards an LSP, using `A`'s public key as the payment point. Subsequently, the LSP is required to establish an onchain PTLC matching the payment point, which can then be claimed by `A`. By claiming the onchain PTLC with a new keypair, `A` reveals the scalar behind the payment point, effectively transferring the private key to the LSP. This turnover of the private key has significant advantages, especially when multiple clients are involved. For instance, if `A` exits and does not return, yet shares a leaf with another client `B`, the LSP can use `A`'s private key to sign new leaf states with `B`, without needing any further communication with `A`. Moreover, this arrangement allows the LSP to allocate `A`'s channel funds to provide additional liquidity for `B`.

This mechanism also offers benefits when transitioning clients from a dying factory to a new one. If all clients execute their exits before the end of the dying phase, the LSP gains possession of all private keys, facilitating claims on the `A &amp; B &amp; .. &amp; G &amp; H` branch through a Taproot keyspend path. This path ensures a single signature transaction without revealing specific scripts, thus enhancing privacy for both the LSP and its clients. Furthermore, this early recovery of funds by the LSP could be crucial for strategic funding decisions.

An added incentive for LSPs under this system is the potential cost reduction for assisted exits compared to unilateral exits. Since the LSP can continue to represent the exiting client within the factory's lifespan, it might offer to subsidize some exit costs, making the assisted exit financially more appealing for the client. This proposition underscores a shift towards more efficient and privacy-focused strategies within the Lightning Network ecosystem, highlighting the ongoing innovations aimed at improving user experience and operational fluidity.</summary>
    <published>2024-09-23T06:57:54.275000+00:00</published>
  </entry>
</feed>
