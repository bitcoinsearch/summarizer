<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proving UTXO set inclusion in zero-knowledge</title>
  <updated>2024-09-25T02:20:59.614429+00:00</updated>
  <author>
    <name>Adam Gibson 2024-09-24 20:53:35.232000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proving UTXO set inclusion in zero-knowledge</title>
    <updated>2024-09-25T02:20:59.614460+00:00</updated>
    <link href="https://delvingbitcoin.org/t/proving-utxo-set-inclusion-in-zero-knowledge/1142/14" rel="alternate"/>
    <summary>The inquisitive nature of the query centers around the capabilities and limitations of utilizing aut-ct for proving aspects related to UTXOs, particularly focusing on whether it's feasible to demonstrate knowledge of a witness that would facilitate script execution for a UTXO. The response delineates a clear distinction based on the type of spending public keys (sPKs) involved. For sPKs that are primarily constructed through logical conjunctions of keys or leverage elliptic curve (EC) arithmetic—akin to methods employed in Taproot tweaks—the possibility of generating proofs is deemed straightforward owing to their alignment with EC mathematics.

However, the scenario shifts significantly when considering sPKs that incorporate hash locks. Due to the inherent challenges associated with proving non-algebraic hashes, such as those produced by SHA2, within this framework, the feasibility of generating succinct and manageable proofs diminishes markedly. This challenge underscores the complexity of designing proofs for hash-based constructs within the aut-ct system, highlighting a notable limitation in its applicability. Consequently, the discussion implicitly advocates for the preference towards utilizing Taproot anonymity sets in examples, which align more closely with the capabilities of aut-ct, thus avoiding the cumbersome nature of proofs for hash lock-based sPKs.</summary>
    <published>2024-09-24T20:53:35.232000+00:00</published>
  </entry>
</feed>
