<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>PPLNS with job declaration</title>
  <updated>2024-09-06T02:15:43.433941+00:00</updated>
  <author>
    <name>plebhash 2024-09-05 23:33:41.250000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>PPLNS with job declaration</title>
    <updated>2024-09-06T02:15:43.433972+00:00</updated>
    <link href="https://delvingbitcoin.org/t/pplns-with-job-declaration/1099/3" rel="alternate"/>
    <summary>The proposed SV2 extension's impact on transactions outlined under the [GCC](https://github.com/TheBlueMatt/bips/blob/7f9670b643b7c943a0cc6d2197d3eabe661050c2/bip-XXXX.mediawiki) framework raises significant concerns. These transactions, referred to as GCC vectors, present a challenge for low-end nodes despite their adherence to high fee payments, consensus validity, and presence in the standard mempool. The discussion revolves around how an SV2-JD-enabled Pool should address these GCC vectors, presenting three strategies: outright rejection of jobs including GCC vectors, imposing economic penalties on such jobs, or ignoring GCC vectors altogether.

The rejection of jobs incorporating GCC vectors aligns with existing SV2 primitives, making the SV2 extension irrelevant for this approach. However, the imposition of economic penalties on jobs that include GCC vectors is where the proposed extension could play a crucial role, suggesting that its design might consider such measures. The notion of ignoring GCC vectors is critically viewed, as it would signify a disregard for low-end nodes, pushing the Bitcoin network towards centralization for additional fee revenue.

The plea for more attention and urgency towards GCC highlights the importance of safeguarding low-end nodes. This concern stems from the desire to avoid reliance on mining pools and hashers acting as "benevolent guardians" of these nodes. The underlying rationale for maintaining small block sizes—to protect low-end nodes—underscores the critical nature of this issue within the Bitcoin ecosystem.</summary>
    <published>2024-09-05T23:33:41.250000+00:00</published>
  </entry>
</feed>
