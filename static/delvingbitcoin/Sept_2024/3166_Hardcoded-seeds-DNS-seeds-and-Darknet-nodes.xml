<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Hardcoded seeds, DNS seeds and Darknet nodes</title>
  <updated>2024-09-13T02:15:33.850098+00:00</updated>
  <author>
    <name>virtu 2024-09-12 06:03:21.076000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Hardcoded seeds, DNS seeds and Darknet nodes</title>
    <updated>2024-09-13T02:15:33.850131+00:00</updated>
    <link href="https://delvingbitcoin.org/t/hardcoded-seeds-dns-seeds-and-darknet-nodes/1123/7" rel="alternate"/>
    <summary>The examination of various public nameservers, including Google, Control D, Quad9, OpenDNS Home, Cloudflare, AdGuard, CleanBrowsing, and Alternate DNS, reveals a shared tendency to cache TXT and NULL records provided they align with specific criteria set by the authoritative server. This observation underscores the widespread capability among these services to support certain types of DNS record caching, which is crucial for enhancing efficiency and reducing latency in DNS queries. However, the feasibility of implementing a custom DNS lookup strategy utilizing TXT/NULL records is reconsidered due to potential complications that could arise, leading to a decision against further exploration of this approach.

An alternative proposition involves the utilization of AAAA records for encoding data, which introduces an innovative method of embedding information within DNS queries without altering the fundamental operations of Bitcoin Core's `getaddrinfo`. The core idea hinges on the use of a reserved prefix within these records to differentiate them from standard IPv6 addresses, thereby preventing any misinterpretation. This strategy would necessitate the incorporation of additional decoding logic in response to the detection of the reserved prefix, allowing for a seamless integration of this new data encoding mechanism into existing systems without requiring significant modifications to the underlying DNS lookup processes.</summary>
    <published>2024-09-12T06:03:21.076000+00:00</published>
  </entry>
</feed>
