<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Libbitcoin for Core people</title>
  <updated>2024-11-30T02:23:03.661929+00:00</updated>
  <author>
    <name>AntoineP 2024-11-29 14:08:23.249000+00:00</name>
  </author>
  <author>
    <name>sjors  . 2024-11-28 12:13:10.716000+00:00</name>
  </author>
  <author>
    <name>AntoineP  . 2024-11-05 18:24:04.627000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-11-05 10:23:56.088000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-11-05 08:41:22.133000+00:00</name>
  </author>
  <author>
    <name>evoskuil  . 2024-11-04 22:24:25.165000+00:00</name>
  </author>
  <author>
    <name>AntoineP  . 2024-11-04 18:49:27.441000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-11-04 15:14:10.735000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-11-04 10:57:58.183000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-11-03 16:56:25.848000+00:00</name>
  </author>
  <author>
    <name>AntoineP  . 2024-10-29 13:53:22.156000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2024-10-29 13:06:58.632000+00:00</name>
  </author>
  <author>
    <name>AntoineP  . 2024-10-28 19:09:55.723000+00:00</name>
  </author>
  <link href="delvingbitcoin/Nov_2024/3641_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2024/3630_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2024/3492_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2024/3489_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2024/3485_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2024/3481_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2024/3471_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2024/3468_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2024/3465_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2024/3460_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2024/3442_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2024/3439_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <link href="delvingbitcoin/Oct_2024/3432_Libbitcoin-for-Core-people.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Libbitcoin for Core people</title>
    <updated>2024-11-30T02:23:03.662022+00:00</updated>
    <link href="https://delvingbitcoin.org/t/libbitcoin-for-core-people/1222/13" rel="alternate"/>
    <summary>The discussion surrounding Bitcoin Core and Libbitcoin's approaches to Initial Block Download (IBD) times brings to light significant performance considerations in blockchain technology. A noteworthy claim suggests a 15x improvement in IBD times with Libbitcoin, despite Bitcoin Core's disadvantage in areas like native SHA256 processing. This comparison piques interest due to the potential implications for blockchain efficiency. Factors such as high `-dbcache` values and gigabit internet connections have been identified as contributing to reduced IBD times. The possibility of achieving even more drastic reductions in IBD times using libbitcoin is mentioned, though skepticism exists about reaching these figures due to disk speed limitations. Bitcoin Core utilizes parallel processing during IBD for block download and script validation, but attempts to increase parallelization have not shown significant improvements, indicating potential areas for optimization.

Libbitcoin and Bitcoin Core's transaction validation processes present a stark contrast in their approach to confirmability and validation. Libbitcoin simplifies its process by excluding input existence checks under certain conditions, aiming to prevent malleation through a streamlined verification process. This method aligns with Bitcoin Core's `-assumevalid` feature but differs in execution, particularly in managing the Unspent Transaction Output (UTXO) set. Libbitcoin's strategy allows some transactions to bypass prevout confirmation, focusing on efficiency and speed by leveraging assumptions about the validity of inputs based on milestone blocks. This approach underscores a philosophical difference in handling UTXO sets and optimizing transaction processing speeds.

Engagement with the Libbitcoin project is encouraged through participation in Slack channels and weekly development meetings. These platforms offer avenues for direct involvement and updates on the project, highlighting the community-driven aspect of its development. Such initiatives aim to foster collaboration and deeper understanding among those interested in the project's progress.

The email exchange delves into the architectural differences between Libbitcoin and Bitcoin Core, particularly in how they manage data models and process blocks. Libbitcoin's method of handling non-overlapping block ranges in parallel for improved efficiency is compared with Bitcoin Core's linear approach. Additionally, the discussion touches on serialized block representations and chaintip updates, suggesting that while Libbitcoin may excel in initial block download speeds, Bitcoin Core has advantages in validating new blocks swiftly. The exploration of transaction-based versus block-based data models offers insights into the trade-offs between the two approaches, emphasizing the importance of selecting the right model based on the specific requirements of a Bitcoin node.

Libbitcoin's operational methodologies, including its event-based system and relational database structure, play a crucial role in its performance enhancements, especially in IBD speed. By breaking down block validation into tasks with varying sequencing needs and employing parallel processing, Libbitcoin achieves notable efficiency. The use of `-assumevalid` to omit certain validations further speeds up the process, while the system's ability to handle reorganizations and unconfirmed transactions showcases its robustness. Networking strategies to optimize peer connections and considerations for future implementations highlight Libbitcoin's ongoing development and its focus on scalability and efficiency within the cryptocurrency domain.</summary>
    <published>2024-11-29T14:08:23.249000+00:00</published>
  </entry>
</feed>
