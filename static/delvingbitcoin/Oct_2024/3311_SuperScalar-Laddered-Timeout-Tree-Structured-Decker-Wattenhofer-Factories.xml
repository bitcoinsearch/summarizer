<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>SuperScalar: Laddered Timeout-Tree-Structured Decker-Wattenhofer Factories</title>
  <updated>2024-10-03T02:20:19.083684+00:00</updated>
  <author>
    <name>ariard 2024-10-02 22:55:05.349000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>SuperScalar: Laddered Timeout-Tree-Structured Decker-Wattenhofer Factories</title>
    <updated>2024-10-03T02:20:19.083715+00:00</updated>
    <link href="https://delvingbitcoin.org/t/superscalar-laddered-timeout-tree-structured-decker-wattenhofer-factories/1143/18" rel="alternate"/>
    <summary>This discussion revolves around the intricacies of facilitating an "assisted exit" for clients within a specific system. The process involves the client exchanging their keys for assistance in acquiring an on-chain Unspent Transaction Output (UTXO) or transitioning to a new factory setup. This exchange employs Partially Signed Lightning Transactions (PTLCs), where the swap's linchpin is the scalar or private key involved.

The trust issue between the client and the Lightning Service Provider (LSP) emerges as a critical concern, particularly regarding the LSP's responsibility to timely fee-bump transactions for the end user. The apprehension lies in the possibility that the LSP might maliciously abort the handover of the private key, jeopardizing the transaction's integrity. This scenario underscores the broader problem of achieving a "fair exchange" of secrets, a challenge that has remained unresolved in the field of distributed systems since the 1990s.</summary>
    <published>2024-10-02T22:55:05.349000+00:00</published>
  </entry>
</feed>
