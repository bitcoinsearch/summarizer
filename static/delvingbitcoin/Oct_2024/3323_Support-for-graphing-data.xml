<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Support for graphing data</title>
  <updated>2024-10-05T02:17:48.995504+00:00</updated>
  <author>
    <name>ajtowns 2024-10-04 06:45:12.260000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Support for graphing data</title>
    <updated>2024-10-05T02:17:48.995534+00:00</updated>
    <link href="https://delvingbitcoin.org/t/support-for-graphing-data/1180" rel="alternate"/>
    <summary>The integration of Plotly.js for graphing capabilities within a Discourse theme component represents a significant advancement in data visualization directly within forums or discussion platforms. This development enables users to create and interact with traditional XY plots using simple text markup, eliminating the need for external image generation. The discourse component, available on GitHub, leverages Plotly.js to provide a rich set of features for data representation.

An illustrative example showcases the utility of this component through a feerate diagram comparing an old mempool configuration with a new one. Users can not only view but also interact with the graph by hovering over points to see exact values and utilize zoom and pan features for detailed analysis. Additionally, the component supports log graphs, which can be easily implemented by adjusting the `yaxis` property in the layout section of the plotly code block. However, it is noted that log graphs have limitations, particularly with data points valued at zero or less.

Beyond basic plots, Plotly's versatility extends to more complex visualizations such as drawing great circles on a world map. This capability is demonstrated with a graph detailing the trajectory from London to New York City, highlighting Plotly's capacity to handle geographical data and render it with high fidelity, including customizable aspects like land color, lake color, and ocean color.

Further exploration of Plotly's functionalities can be pursued through its extensive documentation available at [Plotly's official website](https://plotly.com/javascript/). The information provided there delves into the specifics of creating a variety of charts and graphs, indicating the broad potential applications of this tool. The discourse component essentially parses the provided YAML code in the `plotly` code block, treating `data` and `layout` sections as arguments for Plotly's `newPlot()` function, thereby streamlining the process of integrating sophisticated graphing capabilities within user-generated content.</summary>
    <published>2024-10-04T06:45:12.260000+00:00</published>
  </entry>
</feed>
